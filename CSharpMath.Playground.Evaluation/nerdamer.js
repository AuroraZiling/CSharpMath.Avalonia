"use strict";function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}var nerdamer=function(imports){"use strict";var version='1.1.3';var _=new Parser();var bigInt=imports.bigInt;var bigDec=imports.bigDec;bigDec.set({precision:250});var Groups={};var PRIMES=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083];var CUSTOM_OPERATORS={};var Settings={init_primes:1000,exclude:[],suppress_errors:false,PARSE2NUMBER:false,SAFE:false,IMAGINARY:'i',FUNCTION_MODULES:[Math],ALLOW_CHARS:['π'],USE_MULTICHARACTER_VARS:true,POWER_OPERATOR:'^',VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,ALIASES:{'π':'pi','∞':'Infinity'},POSITIVE_MULTIPLIERS:false,CACHE:{},SILENCE_WARNINGS:false,PRECISION:80,VECTOR:'vector',PARENTHESIS:'parens',SQRT:'sqrt',ABS:'abs',FACTORIAL:'factorial',DOUBLEFACTORIAL:'dfactorial',LONG_PI:'3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214'+'808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196',LONG_E:'2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466'+'39193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901',PI:Math.PI,E:Math.E,LOG:'log',LOG10:'log10',LOG10_LATEX:'log_{10}',MAX_EXP:200000};(function(){Settings.CACHE.roots={};var x=40,y=40;for(var i=2;i<=x;i++){for(var j=2;j<=y;j++){var nthpow=bigInt(i).pow(j);Settings.CACHE.roots[nthpow+'-'+j]=i;}}})();var N=Groups.N=1,P=Groups.P=2,S=Groups.S=3,EX=Groups.EX=4,FN=Groups.FN=5,PL=Groups.PL=6,CB=Groups.CB=7,CP=Groups.CP=8;var CONST_HASH=Settings.CONST_HASH='#';var PARENTHESIS=Settings.PARENTHESIS;var SQRT=Settings.SQRT;var ABS=Settings.ABS;var FACTORIAL=Settings.FACTORIAL;var DOUBLEFACTORIAL=Settings.DOUBLEFACTORIAL;var EXPRESSIONS=[];var VARS={};var RESERVED=[];var WARNINGS=[];var err=function err(msg,ErrorObj){if(!Settings.suppress_errors){if(ErrorObj)throw new ErrorObj(msg);else throw new Error(msg);}};var customError=function customError(name){var E=function E(message){this.name=name;this.message=message!==undefined?message:'';var error=new Error(this.message);error.name=this.name;this.stack=error.stack;};E.prototype=Object.create(Error.prototype);return E;};var isReserved=function isReserved(value){return RESERVED.indexOf(value)!==-1;};var allSame=function allSame(arr){var last=arr[0];for(var i=1,l=arr.length;i<l;i++){if(!arr[i].equals(last))return false;}return true;};var warn=function warn(msg){WARNINGS.push(msg);if(Settings.SHOW_WARNINGS&&console&&console.warn){console.warn(msg);}};var validateName=function validateName(name,typ){typ=typ||'variable';if(Settings.ALLOW_CHARS.indexOf(name)!==-1)return;var regex=Settings.VALIDATION_REGEX;if(!regex.test(name)){throw new InvalidVariableNameError(name+' is not a valid '+typ+' name');}};var scientificToDecimal=function scientificToDecimal(num){var nsign=Math.sign(num);num=Math.abs(num);if(/\d+\.?\d*e[\+\-]*\d+/i.test(num)){var zero='0',parts=String(num).toLowerCase().split('e'),e=parts.pop(),l=Math.abs(e),sign=e/l,coeff_array=parts[0].split('.');if(sign===-1){l=l-coeff_array[0].length;if(l<0){num=coeff_array[0].slice(0,l)+'.'+coeff_array[0].slice(l)+(coeff_array.length===2?coeff_array[1]:'');}else{num=zero+'.'+new Array(l+1).join(zero)+coeff_array.join('');}}else{var dec=coeff_array[1];if(dec)l=l-dec.length;if(l<0){num=coeff_array[0]+dec.slice(0,l)+'.'+dec.slice(l);}else{num=coeff_array.join('')+new Array(l+1).join(zero);}}}return nsign<0?'-'+num:num;};var isPrime=function isPrime(n){var q=Math.floor(Math.sqrt(n));for(var i=2;i<=q;i++){if(n%i===0)return false;}return true;};var isNumber=function isNumber(n){return /^\d+\.?\d*$/.test(n);};var allNumeric=function allNumeric(arr){for(var i=0;i<arr.length;i++){if(!isNumber(arr[i]))return false;}return true;};var _isFraction=function isFraction(num){if(isSymbol(num))return _isFraction(num.multiplier.toDecimal());return num%1!==0;};var isSymbol=function isSymbol(obj){return obj instanceof _Symbol;};var isExpression=function isExpression(obj){return obj instanceof Expression;};var _variables=function variables(obj,poly,vars){vars=vars||{c:[],add:function add(value){if(this.c.indexOf(value)===-1&&isNaN(value))this.c.push(value);}};if(isSymbol(obj)){var group=obj.group,prevgroup=obj.previousGroup;if(group===EX)_variables(obj.power,poly,vars);if(group===CP||group===CB||prevgroup===CP||prevgroup===CB){for(var x in obj.symbols){_variables(obj.symbols[x],poly,vars);}}else if(group===S||prevgroup===S){if(!(obj.value==='e'||obj.value==='pi'||obj.value===Settings.IMAGINARY))vars.add(obj.value);}else if(group===PL||prevgroup===PL){_variables(firstObject(obj.symbols),poly,vars);}else if(group===EX){if(!isNaN(obj.value))vars.add(obj.value);_variables(obj.power,poly,vars);}else if(group===FN&&!poly){for(var i=0;i<obj.args.length;i++){_variables(obj.args[i],poly,vars);}}}return vars.c.sort();};var arraySum=function arraySum(arr){var sum=new _Symbol(0);arr.map(function(x){sum=_.add(sum,x);});return sum;};var separate=function separate(symbol,o){symbol=_.expand(symbol);o=o||{};var insert=function insert(key,sym){if(!o[key])o[key]=new _Symbol(0);o[key]=_.add(o[key],sym.clone());};symbol.each(function(x){if(x.isConstant('all'))insert('constants',x);else if(x.group===S){insert(x.value,x);}else if(x.group===FN&&(x.fname===ABS||x.fname==='')){separate(x.args[0]);}else if(x.group===EX||x.group===FN){throw new Error('Unable to separate. Term cannot be a function!');}else{insert(_variables(x).join(' '),x);}});return o;};var fillHoles=function fillHoles(arr,n){n=n||arr.length;for(var i=0;i<n;i++){var sym=arr[i];if(!sym)arr[i]=new _Symbol(0);}return arr;};var isVector=function isVector(obj){return obj instanceof Vector;};var isMatrix=function isMatrix(obj){return obj instanceof Matrix;};var isSet=function isSet(obj){return obj instanceof Set;};var isNumericSymbol=function isNumericSymbol(symbol){return symbol.group===N||symbol.group===P;};var isVariableSymbol=function isVariableSymbol(symbol){return symbol.group===S&&symbol.multiplier.equals(1)&&symbol.power.equals(1);};var isArray=function isArray(arr){return Array.isArray(arr);};var isInt=function isInt(num){return /^[-+]?\d+e?\+?\d*$/gim.test(num.toString());};var isNegative=function isNegative(obj){if(isSymbol(obj)){obj=obj.multiplier;}return obj.lessThan(0);};var stringify=function stringify(o){if(!o)return o;return String(o);};var inBrackets=function inBrackets(str){return'('+str+')';};var stringReplace=function stringReplace(str,from,to,with_str){return str.substr(0,from)+with_str+str.substr(to,str.length);};var customType=function customType(obj){return obj!==undefined&&obj.custom;};var sameSign=function sameSign(a,b){return a<0===b<0;};var format=function format(){var args=[].slice.call(arguments),str=args.shift();var new_str=str.replace(/{(\d+)}/g,function(match,index){var arg=args[index];return typeof arg==='function'?arg():arg;});return new_str;};var range=function range(start,end,step){var arr=[];step=step||1;for(var i=start;i<=end;i++){arr.push(i*step);}return arr;};var keys=Object.keys;var firstObject=function firstObject(obj,key,both){for(var x in obj){break;}if(key)return x;if(both)return{key:x,obj:obj[x]};return obj[x];};var compare=function compare(sym1,sym2,vars){var n=5;var scope={};var comparison;for(var i=0;i<vars.length;i++){scope[vars[i]]=new _Symbol(Math.floor(Math.random()*n)+1);}block('PARSE2NUMBER',function(){comparison=_.parse(sym1,scope).equals(_.parse(sym2,scope));});return comparison;};var setFunction=function setFunction(name,params_array,body){validateName(name);if(!isReserved(name)){params_array=params_array||_variables(_.parse(body));_.functions[name]=[_.mapped_function,params_array.length,{name:name,params:params_array,body:body}];return body;}return null;};var arrayMax=function arrayMax(arr){return Math.max.apply(undefined,arr);};var arrayMin=function arrayMin(arr){return Math.min.apply(undefined,arr);};var arrayClone=function arrayClone(arr){var new_array=[],l=arr.length;for(var i=0;i<l;i++){new_array[i]=arr[i].clone();}return new_array;};var arrayAddSlices=function arrayAddSlices(arr,slices){slices=slices||20;var retval=[];var c,delta,e;retval.push(arr[0]);for(var i=0;i<arr.length-1;i++){c=arr[i];delta=arr[i+1]-c;e=delta/slices;for(var j=0;j<slices;j++){c+=e;retval.push(c);}}return retval;};var nroots=function nroots(symbol){var a,b;if(symbol.group===FN&&symbol.fname===''){a=_Symbol.unwrapPARENS(_.parse(symbol).toLinear());b=_.parse(symbol.power);}else if(symbol.group===P){a=_.parse(symbol.value);b=_.parse(symbol.power);}if(a&&b&&a.group===N&&b.group===N&&a.multiplier.isNegative()){var _roots=[];var parts=_Symbol.toPolarFormArray(evaluate(symbol));var r=parts[0];var x=_.arg(a);var n=b.multiplier.den.toString();var p=b.multiplier.num.toString();var formula='(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})';for(var i=0;i<n;i++){var t=evaluate(_.parse(format("(({0})+2*pi*({1}))/({2})",x,i,n))).multiplier.toDecimal();_roots.push(evaluate(_.parse(format(formula,r,n,Settings.IMAGINARY,t,p))));}return Vector.fromArray(_roots);}else if(symbol.isConstant(true,true)){var sign=symbol.sign();var x=evaluate(symbol.abs());var root=_.sqrt(x);var _roots=[root.clone(),root.negate()];if(sign<0)_roots=_roots.map(function(x){return _.multiply(x,_Symbol.imaginary());});}else{_roots=[_.parse(symbol)];}return Vector.fromArray(_roots);};var comboSort=function comboSort(a,b){var l=a.length,combined=[];for(var i=0;i<a.length;i++){combined.push([a[i],b[i]]);}combined.sort(function(x,y){return x[0]-y[0];});var na=[],nb=[];for(i=0;i<l;i++){na.push(combined[i][0]);nb.push(combined[i][1]);}return[na,nb];};var decompose_fn=function decompose_fn(fn,wrt,as_obj){wrt=String(wrt);var ax,a,x,b;if(fn.group===CP){var t=_.expand(fn.clone()).stripVar(wrt);ax=_.subtract(fn.clone(),t.clone());b=t;}else ax=fn.clone();a=ax.stripVar(wrt);x=_.divide(ax.clone(),a.clone());b=b||new _Symbol(0);if(as_obj)return{a:a,x:x,ax:ax,b:b};return[a,x,ax,b];};var nround=function nround(x,s){if(isInt(x)){if(x>=Number.MAX_VALUE)return x.toString();return Number(x);}s=typeof s==='undefined'?14:s;return Math.round(x*Math.pow(10,s))/Math.pow(10,s);};var getU=function getU(symbol){var u='u',v=u,c=0,vars=_variables(symbol);while(!(RESERVED.indexOf(v)===-1&&vars.indexOf(v)===-1)){v=u+c++;}for(var i=0,l=RESERVED.length;i<=l;i++){if(!RESERVED[i]){RESERVED[i]=v;break;}}return v;};var clearU=function clearU(u){var indx=RESERVED.indexOf(u);if(indx!==-1)RESERVED[indx]=undefined;};var each=function each(obj,fn){if(isArray(obj)){var l=obj.length;for(var i=0;i<l;i++){fn.call(obj,i);}}else{for(var x in obj){if(obj.hasOwnProperty(x))fn.call(obj,x);}}};var even=function even(num){return num%2===0;};var evenFraction=function evenFraction(num){return 1/(num%1)%2===0;};var arrayUnique=function arrayUnique(arr){var l=arr.length,a=[];for(var i=0;i<l;i++){var item=arr[i];if(a.indexOf(item)===-1)a.push(item);}return a;};var removeDuplicates=function removeDuplicates(arr,condition){var conditionType=_typeof(condition);if(conditionType!=='function'||conditionType==='undefined'){condition=function condition(a,b){return a===b;};}var seen=[];while(arr.length){var a=arr[0];if(arr.length===1){seen.push(a);break;}var temp=[];seen.push(a);for(var i=1;i<arr.length;i++){var b=arr[i];if(!condition(a,b))temp.push(b);}arr=temp;}return seen;};var reserveNames=function reserveNames(obj){var add=function add(item){if(RESERVED.indexOf(item)===-1)RESERVED.push(item);};if(typeof obj==='string')add(obj);else{each(obj,function(x){add(x);});}};var _remove=function remove(obj,indexOrKey){var result;if(isArray(obj)){result=obj.splice(indexOrKey,1)[0];}else{result=obj[indexOrKey];delete obj[indexOrKey];}return result;};var block=function block(setting,f,opt,obj){var current_setting=Settings[setting];Settings[setting]=opt===undefined?true:!!opt;var retval=f.call(obj);Settings[setting]=current_setting;return retval;};var importFunctions=function importFunctions(){var o={};for(var x in _.functions){o[x]=_.functions[x][0];}return o;};var arguments2Array=function arguments2Array(obj){return[].slice.call(obj);};var getCoeffs=function getCoeffs(symbol,wrt){var coeffs=[];symbol.each(function(term){if(term.contains(wrt)){var coeff=term.stripVar(wrt),x=_.divide(term.clone(),coeff.clone()),p=x.power.toDecimal();}else{coeff=term;p=0;}var e=coeffs[p];coeffs[p]=e?_.add(e,coeff):coeff;},true);for(var i=0;i<coeffs.length;i++){if(!coeffs[i])coeffs[i]=new _Symbol(0);}return coeffs;};var evaluate=function evaluate(symbol,o){return block('PARSE2NUMBER',function(){return _.parse(symbol,o);},true);};var convertToVector=function convertToVector(x){if(isArray(x)){var vector=new Vector([]);for(var i=0;i<x.length;i++){vector.elements.push(convertToVector(x[i]));}return vector;}if(!isSymbol(x))return _.parse(x);return x;};var generatePrimes=function generatePrimes(upto){var last_prime=PRIMES[PRIMES.length-1]||2;for(var i=last_prime;i<upto;i++){if(isPrime(i))PRIMES.push(i);}};var allNumbers=function allNumbers(args){for(var i=0;i<args.length;i++){if(args[i].group!==N)return false;}return true;};var allConstants=function allConstants(args){for(var i=0;i<args.length;i++){if(args[i].isPi()||args[i].isE())continue;if(!args[i].isConstant(true))return false;}return true;};var DivisionByZero=customError('DivisionByZero');var ParseError=customError('ParseError');var UndefinedError=customError('UndefinedError');var MaximumIterationsReached=customError('MaximumIterationsReached');var NerdamerTypeError=customError('NerdamerTypeError');var ParityError=customError('ParityError');var OperatorError=customError('OperatorError');var OutOfRangeError=customError('OutOfRangeError');var DimensionError=customError('DimensionError');var InvalidVariableNameError=customError('InvalidVariableNameError');var ValueLimitExceededError=customError('ValueLimitExceededError');var NerdamerValueError=customError('NerdamerValueError');var SolveError=customError('SolveError');var exceptions={DivisionByZero:DivisionByZero,ParseError:ParseError,UndefinedError:UndefinedError,MaximumIterationsReached:MaximumIterationsReached,NerdamerTypeError:NerdamerTypeError,ParityError:ParityError,OperatorError:OperatorError,OutOfRangeError:OutOfRangeError,DimensionError:DimensionError,InvalidVariableNameError:InvalidVariableNameError,ValueLimitExceededError:ValueLimitExceededError,NerdamerValueError:NerdamerValueError,SolveError:SolveError};var Big={cos:function cos(x){return new _Symbol(bigDec.cos(x.multiplier.toDecimal()));},sin:function sin(x){return new _Symbol(bigDec.sin(x.multiplier.toDecimal()));}};var Math2={csc:function csc(x){return 1/Math.sin(x);},sec:function sec(x){return 1/Math.cos(x);},cot:function cot(x){return 1/Math.tan(x);},acsc:function acsc(x){return Math.asin(1/x);},asec:function asec(x){return Math.acos(1/x);},acot:function acot(x){return Math.PI/2-Math.atan(x);},erf:function erf(x){var t=1/(1+0.5*Math.abs(x));var result=1-t*Math.exp(-x*x-1.26551223+t*(1.00002368+t*(0.37409196+t*(0.09678418+t*(-0.18628806+t*(0.27886807+t*(-1.13520398+t*(1.48851587+t*(-0.82215223+t*0.17087277)))))))));return x>=0?result:-result;},diff:function diff(f){var h=0.001;var derivative=function derivative(x){return(f(x+h)-f(x-h))/(2*h);};return derivative;},median:function median(){for(var _len=arguments.length,values=new Array(_len),_key=0;_key<_len;_key++){values[_key]=arguments[_key];}values.sort(function(a,b){return a-b;});var half=Math.floor(values.length/2);if(values.length%2)return values[half];return(values[half-1]+values[half])/2.0;},fromContinued:function fromContinued(contd){var arr=contd.fractions.slice();var e=1/arr.pop();for(var i=0,l=arr.length;i<l;i++){e=1/(arr.pop()+e);}return contd.sign*(contd.whole+e);},continuedFraction:function continuedFraction(n,x){x=x||20;var sign=Math.sign(n);var absn=Math.abs(n);var whole=Math.floor(absn);var ni=absn-whole;var c=0;var done=false;var epsilon=1e-14;var max=1e7;var e,w;var retval={whole:whole,sign:sign,fractions:[]};while(!done&&ni!==0){e=1/ni;w=Math.floor(e);if(w>max){var d=Math2.fromContinued(retval)-n;if(d<=Number.EPSILON)break;}retval.fractions.push(w);ni=e-w;if(ni<=epsilon||c>=x-1)done=true;c++;}var idx=retval.fractions.length-1;if(retval.fractions[idx]===1){retval.fractions.pop();retval.fractions[--idx]++;}return retval;},bigpow:function bigpow(n,p){if(!(n instanceof Frac))n=Frac.create(n);if(!(p instanceof Frac))p=Frac.create(p);var retval=new Frac(0);if(p.isInteger()){retval.num=n.num.pow(p.toString());retval.den=n.den.pow(p.toString());}else{var num=Frac.create(Math.pow(n.num,p.num));var den=Frac.create(Math.pow(n.den,p.num));retval.num=Math2.nthroot(num,p.den.toString());retval.den=Math2.nthroot(den,p.den);}return retval;},gamma:function gamma(z){var g=7;var C=[0.99999999999980993,676.5203681218851,-1259.1392167224028,771.32342877765313,-176.61502916214059,12.507343278686905,-0.13857109526572012,9.9843695780195716e-6,1.5056327351493116e-7];if(z<0.5)return Math.PI/(Math.sin(Math.PI*z)*Math2.gamma(1-z));else{z-=1;var x=C[0];for(var i=1;i<g+2;i++){x+=C[i]/(z+i);}var t=z+g+0.5;return Math.sqrt(2*Math.PI)*Math.pow(t,z+0.5)*Math.exp(-t)*x;}},bigfactorial:function bigfactorial(x){var retval=new bigInt(1);for(var i=2;i<=x;i++){retval=retval.times(i);}return new Frac(retval);},bigLog:function bigLog(x){varif(CACHE[x]){return Frac.quick.apply(null,CACHE[x].split('/'));}x=new Frac(x);var n=80;var retval=new Frac(0);var a=x.subtract(new Frac(1));var b=x.add(new Frac(1));for(var i=0;i<n;i++){var t=new Frac(2*i+1);var k=Math2.bigpow(a.divide(b),t);var r=t.clone().invert().multiply(k);retval=retval.add(r);}return retval.multiply(new Frac(2));},factorial:function factorial(x){var is_int=x%1===0;if(is_int&&x<0)return NaN;if(!is_int)return Math2.gamma(x+1);var retval=1;for(var i=2;i<=x;i++){retval=retval*i;}return retval;},dfactorial:function dfactorial(x){if(isInt(x)){var even=x%2===0;var n=even?x/2:(x+1)/2;var r=new Frac(1);if(even)for(var i=1;i<=n;i++){r=r.multiply(new Frac(2).multiply(new Frac(i)));}else for(var i=1;i<=n;i++){r=r.multiply(new Frac(2).multiply(new Frac(i)).subtract(new Frac(1)));}}else{r=Math.pow(2,(1+2*x-Math.cos(Math.PI*x))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*x)-1)/4)*Math2.gamma(1+x/2);}return r;},GCD:function GCD(){var args=arrayUnique([].slice.call(arguments).map(function(x){return Math.abs(x);})).sort(),a=Math.abs(args.shift()),n=args.length;while(n-->0){var b=Math.abs(args.shift());while(true){a%=b;if(a===0){a=b;break;}b%=a;if(b===0)break;;}}return a;},QGCD:function QGCD(){var args=[].slice.call(arguments);var a=args[0];for(var i=1;i<args.length;i++){var b=args[i];var sign=a.isNegative()&&b.isNegative()?-1:1;a=b.gcd(a);if(sign<0)a.negate();}return a;},LCM:function LCM(a,b){return a*b/Math2.GCD(a,b);},pow:function pow(b,e){if(b<0){if(Math.abs(e)<1){if(1/e%2===0)return NaN;return-Math.pow(Math.abs(b),e);}}return Math.pow(b,e);},factor:function factor(n){n=Number(n);var sign=Math.sign(n);n=Math.abs(n);var ifactors=Math2.ifactor(n);var factors=new _Symbol();factors.symbols={};factors.group=CB;for(var x in ifactors){var factor=new _Symbol(1);factor.group=P;factor.value=x;factor.power=new _Symbol(ifactors[x]);factors.symbols[x]=factor;}factors.updateHash();if(n===1){factors=new _Symbol(n);}if(sign<0)factors.negate();return factors;},sfactor:function sfactor(n,factors){factors=factors||{};var r=Math.floor(Math.sqrt(n));var lcprime=PRIMES[PRIMES.length-1];if(r>lcprime&&n<1e6)generatePrimes(r);var l=PRIMES.length;for(var i=0;i<l;i++){var prime=PRIMES[i];while(n%prime===0){n=n/prime;factors[prime]=(factors[prime]||0)+1;}}if(n>1)factors[n]=1;return factors;},ifactor:function ifactor(n){n=String(n);if(n==='0')return{'0':1};n=new bigInt(n);var sign=n.sign?-1:1;n=n.abs();var factors={};if(n.lt('65536')){factors=Math2.sfactor(n,factors);}else{var add=function add(e){if(!e.isPrime()){factors=Math2.sfactor(e,factors);}else factors[e]=(factors[e]||0)+1;};while(!n.abs().equals(1)){if(n.isPrime()){add(n);break;}else{var factor;(function(){var rho=function rho(c){var xf=new bigInt(c),cz=2,x=new bigInt(c),factor=new bigInt(1);while(factor.equals(1)){for(var i=0;i<=cz&&factor.equals(1);i++){x=x.pow(2).add(1).mod(n);factor=bigInt.gcd(x.minus(xf).abs(),n);}cz=cz*2;xf=x;}if(factor.equals(n)){return rho(c+1);}return factor;};factor=rho(2);add(factor);n=n.divide(factor);})();}}}if(sign===-1){var sm=arrayMin(keys(factors));factors['-'+sm]=factors[sm];delete factors[sm];}return factors;},boxfactor:function boxfactor(n,max){max=max||200;var c,r,d=Math.floor(5/12*n),i=0,safety=false;while(true){c=Math.floor(n/d);r=n%d;if(r===0)break;if(safety)return[n,1];d=Math.max(r,d-r);i++;safety=i>max;}return[c,d,i];},fib:function fib(n){var sign=Math.sign(n);n=Math.abs(n);sign=even(n)?sign:Math.abs(sign);var a=0,b=1,f=1;for(var i=2;i<=n;i++){f=a+b;a=b;b=f;}return f*sign;},mod:function mod(x,y){return x%y;},integer_part:function integer_part(x){var sign=Math.sign(x);return sign*Math.floor(Math.abs(x));},simpson:function simpson(f,a,b,step){var get_value=function get_value(f,x,side){var v=f(x);var d=0.000000000001;if(isNaN(v)){v=f(side===1?x+d:x-d);}return v;};step=step||0.0001;var n=Math.abs(Math.floor((b-a)/step));if(n%2!==0)n++;var dx=(b-a)/n;var retval=get_value(f,a,1);var even=false;var xi=a+dx;var c,k;for(var i=1;i<n;i++){c=even?2:4;k=c*get_value(f,xi,1);retval+=k;even=!even;xi+=dx;}return(retval+get_value(f,xi,2))*(dx/3);},num_integrate:function num_integrate(f,a,b,tol,maxdepth){if(maxdepth<0)throw new Error('max depth cannot be negative');function adsimp(f,a,b,fa,fm,fb,V0,tol,maxdepth,depth,state){if(state.nanEncountered){return NaN;}var h,f1,f2,sl,sr,s2,m,V1,V2,err;h=b-a;f1=f(a+h*0.25);f2=f(b-h*0.25);if(isNaN(f1)){state.nanEncountered=true;return;}if(isNaN(f2)){state.nanEncountered=true;return;}sl=h*(fa+4*f1+fm)/12;sr=h*(fm+4*f2+fb)/12;s2=sl+sr;err=(s2-V0)/15;if(state.maxDepthCount>1000*maxdepth){return;}if(depth>maxdepth){state.maxDepthCount++;return s2+err;}else if(Math.abs(err)<tol){return s2+err;}else{m=a+h*0.5;V1=adsimp(f,a,m,fa,f1,fm,sl,tol*0.5,maxdepth,depth+1,state);if(isNaN(V1)){state.nanEncountered=true;return NaN;}V2=adsimp(f,m,b,fm,f2,fb,sr,tol*0.5,maxdepth,depth+1,state);if(isNaN(V2)){state.nanEncountered=true;return NaN;}return V1+V2;}}function integrate(f,a,b,tol,maxdepth){var state={maxDepthCount:0,nanEncountered:false};if(tol===undefined){tol=1e-9;}if(maxdepth===undefined){maxdepth=45;}var fa=f(a);var fm=f(0.5*(a+b));var fb=f(b);var V0=(fa+4*fm+fb)*(b-a)/6;var result=adsimp(f,a,b,fa,fm,fb,V0,tol,maxdepth,1,state);if(state.maxDepthCount>0){warn('integrate-adaptive-simpson: Warning: maximum recursion depth ('+maxdepth+') reached '+state.maxDepthCount+' times');}if(state.nanEncountered){throw new Error('Function does not converge over interval!');}return result;}var retval;try{retval=integrate(f,a,b,tol,maxdepth);}catch(e){return Math2.simpson(f,a,b);}return nround(retval,12);},Ci:function Ci(x){var n=20,g=0.5772156649015329,sum=0;for(var i=1;i<n;i++){var n2=2*i;sum+=Math.pow(-1,i)*Math.pow(x,n2)/(n2*Math2.factorial(n2));}return Math.log(x)+g+sum;},Si:function Si(x){var n=20,sum=0;for(var i=0;i<n;i++){var n2=2*i;sum+=Math.pow(-1,i)*Math.pow(x,n2+1)/((n2+1)*Math2.factorial(n2+1));}return sum;},Ei:function Ei(x){if(Number(x)===0)return-Infinity;var n=30,g=0.5772156649015328606,sum=0;for(var i=1;i<n;i++){sum+=Math.pow(x,i)/(i*Math2.factorial(i));}return g+Math.abs(Math.log(x))+sum;},Shi:function Shi(x){var n=30,sum=0,k,t;for(var i=0;i<n;i++){k=2*i;t=k+1;sum+=Math.pow(x,t)/(t*t*Math2.factorial(k));}return sum;},Chi:function Chi(x){var dx,g,f;dx=0.001;g=0.5772156649015328606;f=function f(t){return(Math.cosh(t)-1)/t;};return Math.log(x)+g+Math2.num_integrate(f,0.002,x,dx);},Li:function Li(x){return Math2.Ei(Math2.bigLog(x));},gamma_incomplete:function gamma_incomplete(n,x){var t=n-1,sum=0,x=x||0;for(var i=0;i<t;i++){sum+=Math.pow(x,i)/Math2.factorial(i);}return Math2.factorial(t)*Math.exp(-x)*sum;},step:function step(x){if(x>0)return 1;if(x<0)return 0;return 0.5;},rect:function rect(x){var x=Math.abs(x);if(x===0.5)return x;if(x>0.5)return 0;return 1;},sinc:function sinc(x){if(x.equals(0))return 1;return Math.sin(x)/x;},tri:function tri(x){x=Math.abs(x);if(x>=1)return 0;return 1-x;},nthroot:function nthroot(A,n){if(!(A instanceof Frac))A=new Frac(A.toString());if(!(n instanceof Frac))n=new Frac(n.toString());if(n.equals(1))return A;var xk=A.divide(new Frac(2));var e=new Frac(1e-15);var dk,dk0,d0;var a=n.clone().invert(),b=n.subtract(new Frac(1));do{var powb=Math2.bigpow(xk,b);var dk_dec=a.multiply(A.divide(powb).subtract(xk)).toDecimal(25);dk=Frac.create(dk_dec);if(d0)break;xk=xk.add(dk);var dk_dec=dk.toDecimal();d0=dk0?dk0===dk_dec:false;dk0=dk_dec;}while(dk.abs().gte(e));return xk;},sqrt:function sqrt(n){if(!(n instanceof Frac))n=new Frac(n);var xn,d,ld,same_delta;var c=0;var done=false;var delta=new Frac(1e-20);xn=n.divide(new Frac(2));var safety=1000;do{if(c>safety)throw new Error('Unable to calculate square root for '+n);xn=xn.add(n.divide(xn)).divide(new Frac(2));xn=new Frac(xn.decimal(30));d=n.subtract(xn.multiply(xn));same_delta=ld?ld.equals(d):false;if(d.clone().abs().lessThan(delta)||same_delta)done=true;ld=d;c++;}while(!done);return xn;}};Settings.FUNCTION_MODULES.push(Math2);reserveNames(Math2);Math.sign=Math.sign||function(x){x=+x;if(x===0||isNaN(x)){return x;}return x>0?1:-1;};Math.cosh=Math.cosh||function(x){var y=Math.exp(x);return(y+1/y)/2;};Math.sech=Math.sech||function(x){return 1/Math.cosh(x);};Math.csch=Math.csch||function(x){return 1/Math.sinh(x);};Math.coth=Math.coth||function(x){return 1/Math.tanh(x);};Math.sinh=Math.sinh||function(x){var y=Math.exp(x);return(y-1/y)/2;};Math.tanh=Math.tanh||function(x){if(x===Infinity){return 1;}else if(x===-Infinity){return-1;}else{var y=Math.exp(2*x);return(y-1)/(y+1);}};Math.asinh=Math.asinh||function(x){if(x===-Infinity){return x;}else{return Math.log(x+Math.sqrt(x*x+1));}};Math.acosh=Math.acosh||function(x){return Math.log(x+Math.sqrt(x*x-1));};Math.atanh=Math.atanh||function(x){return Math.log((1+x)/(1-x))/2;};Math.log10=Math.log10||function(x){return Math.log(x)*Math.LOG10E;};Math.trunc=Math.trunc||function(x){if(isNaN(x)){return NaN;}if(x>0){return Math.floor(x);}return Math.ceil(x);};function _text(obj,option,useGroup,decp){var asHash=option==='hash',wrapCondition=undefined,opt=asHash?undefined:option,asDecimal=opt==='decimal'||opt==='decimals';if(asDecimal&&typeof decp==='undefined')decp=16;function toString(obj){switch(option){case'decimals':case'decimal':wrapCondition=wrapCondition||function(str){return false;};return obj.valueOf();case'recurring':wrapCondition=wrapCondition||function(str){return str.indexOf("'")!==-1;};var str=obj.toString();var frac=/^-?\d+(?:\/\d+)?$/.exec(str);if(frac.length===0)return str;var parts=frac[0].split('/');var negative=false;var m=Number(parts[0]);if(m<0){m=-m;negative=true;}var n=Number(parts[1]);if(!n)n=1;var quotient=Math.floor(m/n),c=10*(m-quotient*n);quotient=quotient.toString()+".";while(c&&c<n){c*=10;quotient+="0";}var digits="",passed=[],i=0;while(true){if(typeof passed[c]!=='undefined'){var prefix=digits.slice(0,passed[c]),cycle=digits.slice(passed[c]),result=quotient+prefix+"'"+cycle+"'";return(negative?"-":"")+result.replace("'0'","").replace(/\.$/,"");}var q=Math.floor(c/n),r=c-q*n;passed[c]=i;digits+=q.toString();i+=1;c=10*r;}case'mixed':wrapCondition=wrapCondition||function(str){return str.indexOf('/')!==-1;};var str=obj.toString();var frac=/^-?\d+(?:\/\d+)?$/.exec(str);if(frac.length===0)return str;var parts=frac[0].split('/');var numer=new bigInt(parts[0]);var denom=new bigInt(parts[1]);if(denom.equals(0))denom=new bigInt(1);var divmod=numer.divmod(denom);var quotient=divmod.quotient;var remainder=divmod.remainder;var operator=parts[0][0]==='-'||quotient.equals(0)||remainder.equals(0)?'':'+';return(quotient.equals(0)?'':quotient.toString())+operator+(remainder.equals(0)?'':remainder.toString()+'/'+parts[1]);default:wrapCondition=wrapCondition||function(str){return str.indexOf('/')!==-1;};return obj.toString();}}if(isSymbol(obj)){var multiplier='',power='',sign='',group=obj.group||useGroup,value=obj.value;if(!asHash){var om=toString(obj.multiplier);if(om=='-1'){sign='-';om='1';}if(om!='1')multiplier=om;var p=obj.power?toString(obj.power):'';if(p!='1'){if(isSymbol(p)){power=_text(p,opt);}else{power=p;}}}switch(group){case N:multiplier='';var m=decp&&asDecimal?obj.multiplier.toDecimal(decp):toString(obj.multiplier);value=obj.multiplier=='-1'?'1':m;power='';break;case PL:value=obj.collectSymbols().map(function(x){var txt=_text(x,opt,useGroup,decp);if(txt=='0')txt='';return txt;}).sort().join('+').replace(/\+\-/g,'-');break;case CP:value=obj.collectSymbols().map(function(x){var txt=_text(x,opt,useGroup,decp);if(txt=='0')txt='';return txt;}).sort().join('+').replace(/\+\-/g,'-');break;case CB:value=obj.collectSymbols(function(symbol){var g=symbol.group;if((g===PL||g===CP)&&symbol.power.equals(1)&&symbol.multiplier.equals(1)){return inBrackets(_text(symbol,opt));}return _text(symbol,opt);}).join('*');break;case EX:var pg=obj.previousGroup,pwg=obj.power.group;if(pg===PL)value=obj.collectSymbols(_text,opt).join('+').replace('+-','-');if(!(pg===N||pg===S||pg===FN)&&!asHash){value=inBrackets(value);}if((pwg===CP||pwg===CB||pwg===PL||obj.power.multiplier.toString()!='1')&&power){power=inBrackets(power);}break;}if(group===FN){value=obj.fname+inBrackets(obj.args.map(function(symbol){return _text(symbol,opt);}).join(','));}if(group===FN&&obj.fname in CUSTOM_OPERATORS){var a=_text(obj.args[0]);var b=_text(obj.args[1]);if(obj.args[0].isComposite())a=inBrackets(a);if(obj.args[1].isComposite())b=inBrackets(b);value=a+CUSTOM_OPERATORS[obj.fname]+b;}if(power&&group!==EX&&wrapCondition(power)){power=inBrackets(power);}if((group===CP||group===PL)&&(multiplier&&multiplier!='1'||sign==='-')||(group===CB||group===CP||group===PL)&&power&&power!='1'||!asHash&&group===P&&value==-1||obj.fname===PARENTHESIS){value=inBrackets(value);}if(decp&&(option==='decimal'||option==='decimals'&&multiplier))multiplier=nround(multiplier,decp);var c=sign+multiplier;if(multiplier&&wrapCondition(multiplier))c=inBrackets(c);if(power<0)power=inBrackets(power);if(multiplier)c=c+'*';if(power)power=Settings.POWER_OPERATOR+power;if(group===EX&&value.charAt(0)==='-')value=inBrackets(value);var cv=c+value;if(obj.parens)cv=inBrackets(cv);return cv+power;}else if(isVector(obj)){var l=obj.elements.length,c=[];for(var i=0;i<l;i++){c.push(obj.elements[i].text(option));}return'['+c.join(',')+']';}else{try{return obj.toString();}catch(e){return'';}}}function primeFactors(num){if(isPrime(num))return[num];var l=num,i=1,factors=[],epsilon=2.2204460492503130808472633361816E-16;while(i<l){var quotient=num/i;var whole=Math.floor(quotient);var remainder=quotient-whole;if(remainder<=epsilon&&i>1){if(PRIMES.indexOf(i)!==-1)PRIMES[i]=i;factors.push(i);l=whole;}i++;}return factors.sort(function(a,b){return a-b;});};function Expression(symbol){this.symbol=symbol;}Expression.getExpression=function(expression_number,asType){if(expression_number==='last'||!expression_number)expression_number=EXPRESSIONS.length;if(expression_number==='first')expression_number=1;var index=expression_number-1,expression=EXPRESSIONS[index],retval=expression?new Expression(expression):expression;return retval;};Expression.prototype={text:function text(opt,n){n=n||19;opt=opt||'decimals';if(this.symbol.text_)return this.symbol.text_(opt);return _text(this.symbol,opt,undefined,n);},latex:function latex(option){if(this.symbol.latex)return this.symbol.latex(option);return LaTeX.latex(this.symbol,option);},valueOf:function valueOf(){return this.symbol.valueOf();},evaluate:function evaluate(){var first_arg=arguments[0],expression,idx=1;if(typeof first_arg==='string'){expression=first_arg.charAt(0)==='%'?Expression.getExpression(first_arg.substr(1)).text():first_arg;}else if(first_arg instanceof Expression||isSymbol(first_arg)){expression=first_arg.text();}else{expression=this.symbol.text();idx--;}var subs=arguments[idx]||{};return new Expression(block('PARSE2NUMBER',function(){return _.parse(expression,subs);},true));},buildFunction:function buildFunction(vars){return Build.build(this.symbol,vars);},isNumber:function isNumber(){return isNumericSymbol(this.symbol);},isInfinity:function isInfinity(){return Math.abs(this.symbol.multiplier)===Infinity;},variables:function variables(){return _variables(this.symbol);},toString:function toString(){try{if(isArray(this.symbol))return'['+this.symbol.toString()+']';return this.symbol.toString();}catch(e){return'';}},toDecimal:function toDecimal(prec){Settings.precision=prec;var dec=_text(this.symbol,'decimals');Settings.precision=undefined;return dec;},isFraction:function isFraction(){return _isFraction(this.symbol);},isPolynomial:function isPolynomial(){return this.symbol.isPoly();},sub:function sub(symbol,for_symbol){return new Expression(this.symbol.sub(_.parse(symbol),_.parse(for_symbol)));},operation:function operation(otype,symbol){if(isExpression(symbol))symbol=symbol.symbol;else if(!isSymbol(symbol))symbol=_.parse(symbol);return new Expression(_[otype](this.symbol.clone(),symbol.clone()));},add:function add(symbol){return this.operation('add',symbol);},subtract:function subtract(symbol){return this.operation('subtract',symbol);},multiply:function multiply(symbol){return this.operation('multiply',symbol);},divide:function divide(symbol){return this.operation('divide',symbol);},pow:function pow(symbol){return this.operation('pow',symbol);},expand:function expand(){return new Expression(_.expand(this.symbol));},each:function each(callback,i){if(this.symbol.each)this.symbol.each(callback,i);else if(isArray(this.symbol)){for(var i=0;i<this.symbol.length;i++){callback.call(this.symbol,this.symbol[i],i);}}else callback.call(this.symbol);},eq:function eq(value){if(!isSymbol(value))value=_.parse(value);try{var d=_.subtract(this.symbol.clone(),value);return d.equals(0);}catch(e){return false;};},lt:function lt(value){if(!isSymbol(value))value=_.parse(value);try{var d=evaluate(_.subtract(this.symbol.clone(),value));return d.lessThan(0);}catch(e){return false;};},gt:function gt(value){if(!isSymbol(value))value=_.parse(value);try{var d=evaluate(_.subtract(this.symbol.clone(),value));return d.greaterThan(0);}catch(e){return false;};},gte:function gte(value){return this.gt(value)||this.eq(value);},lte:function lte(value){return this.lt(value)||this.eq(value);},numerator:function numerator(){return new Expression(this.symbol.getNum());},denominator:function denominator(){return new Expression(this.symbol.getDenom());},hasFunction:function hasFunction(f){return this.symbol.containsFunction(f);},contains:function contains(variable){return this.symbol.contains(variable);}};Expression.prototype.toTeX=Expression.prototype.latex;function Scientific(num){if(!(this instanceof Scientific))return new Scientific(num);num=String(typeof num==='undefined'?0:num);if(num.startsWith('-')){this.sign=-1;num=num.substr(1,num.length);}else{this.sign=1;}if(Scientific.isScientific(num)){this.fromScientific(num);}else{this.convert(num);}return this;}Scientific.prototype={fromScientific:function fromScientific(num){var parts=String(num).toLowerCase().split('e');this.coeff=parts[0];this.exponent=parts[1];return this;},convert:function convert(num){var parts=num.split('.');var w=parts[0]||'';var d=parts[1]||'';w=Scientific.removeLeadingZeroes(w);d=Scientific.removeTrailingZeroes(d);var dot_location=w.length;var n=w+d;var zeroes=Scientific.leadingZeroes(n).length;this.exponent=dot_location-(zeroes+1);var coeff=Scientific.removeLeadingZeroes(n);this.coeff=coeff.charAt(0)+'.'+(coeff.substr(1,coeff.length)||'0');return this;},round:function round(num){var n=this.copy();num=Number(num);if(num===0)n.coeff=n.coeff.charAt(0);else{var rounded=this.coeff.substring(0,num+1);var next_two=this.coeff.substring(num+1,num+3);var ed=next_two.charAt(0);if(next_two.charAt(1)>4)ed++;n.coeff=rounded+ed;}return n;},copy:function copy(){var n=new Scientific(0);n.coeff=this.coeff;n.exponent=this.exponent;n.sign=this.sign;return n;},toString:function toString(n){var coeff=typeof n==='undefined'?this.coeff:Scientific.round(this.coeff,n);return(this.sign===-1?'-':'')+coeff+'e'+this.exponent;}};Scientific.isScientific=function(num){return /\d+\.?\d*e[\+\-]*\d+/i.test(num);};Scientific.leadingZeroes=function(num){var match=num.match(/^(0*).*$/);return match?match[1]:'';};Scientific.removeLeadingZeroes=function(num){var match=num.match(/^0*(.*)$/);return match?match[1]:'';};Scientific.removeTrailingZeroes=function(num){var match=num.match(/0*$/);return match?num.substring(0,num.length-match[0].length):'';};Scientific.round=function(c,n){var coeff=nround(c,n);var m=String(coeff).split('.').pop();var d=n-m.length;if(d>0){coeff=coeff+new Array(d+1).join(0);}return coeff;};function Scientific(num){if(!(this instanceof Scientific))return new Scientific(num);num=String(typeof num==='undefined'?0:num);if(num.startsWith('-')){this.sign=-1;num=num.substr(1,num.length);}else{this.sign=1;}if(Scientific.isScientific(num)){this.fromScientific(num);}else{this.convert(num);}return this;}Scientific.prototype={fromScientific:function fromScientific(num){var parts=String(num).toLowerCase().split('e');this.coeff=parts[0];this.exponent=parts[1];return this;},convert:function convert(num){var parts=num.split('.');var w=parts[0]||'';var d=parts[1]||'';w=Scientific.removeLeadingZeroes(w);d=Scientific.removeTrailingZeroes(d);var dot_location=w.length;var n=w+d;var zeroes=Scientific.leadingZeroes(n).length;this.exponent=dot_location-(zeroes+1);var coeff=Scientific.removeLeadingZeroes(n);this.coeff=coeff.charAt(0)+'.'+(coeff.substr(1,coeff.length)||'0');return this;},round:function round(num){var n=this.copy();num=Number(num);if(num===0)n.coeff=n.coeff.charAt(0);else{var rounded=this.coeff.substring(0,num+1);var next_two=this.coeff.substring(num+1,num+3);var ed=next_two.charAt(0);if(next_two.charAt(1)>4)ed++;n.coeff=rounded+ed;}return n;},copy:function copy(){var n=new Scientific(0);n.coeff=this.coeff;n.exponent=this.exponent;n.sign=this.sign;return n;},toString:function toString(n){var coeff=typeof n==='undefined'?this.coeff:Scientific.round(this.coeff,n);return(this.sign===-1?'-':'')+coeff+'e'+this.exponent;}};Scientific.isScientific=function(num){return /\d+\.?\d*e[\+\-]*\d+/i.test(num);};Scientific.leadingZeroes=function(num){var match=num.match(/^(0*).*$/);return match?match[1]:'';};Scientific.removeLeadingZeroes=function(num){var match=num.match(/^0*(.*)$/);return match?match[1]:'';};Scientific.removeTrailingZeroes=function(num){var match=num.match(/0*$/);return match?num.substring(0,num.length-match[0].length):'';};function Frac(n){if(n instanceof Frac)return n;if(n===undefined)return this;try{if(isInt(n)){try{this.num=bigInt(n);this.den=bigInt(1);}catch(e){return Frac.simple(n);}}else{var frac=Fraction.convert(n);this.num=new bigInt(frac[0]);this.den=new bigInt(frac[1]);}}catch(e){return Frac.simple(n);}}Frac.create=function(n){if(n instanceof Frac)return n;n=n.toString();var is_neg=n.charAt(0)==='-';if(is_neg)n=n.substr(1,n.length-1);var frac=new Frac(n);if(is_neg)frac.negate();return frac;};Frac.isFrac=function(o){return o instanceof Frac;};Frac.quick=function(n,d){var frac=new Frac();frac.num=new bigInt(n);frac.den=new bigInt(d);return frac;};Frac.simple=function(n){var nstr=String(scientificToDecimal(n)),m_dc=nstr.split('.'),num=m_dc.join(''),den=1,l=(m_dc[1]||'').length;for(var i=0;i<l;i++){den+='0';}var frac=Frac.quick(num,den);return frac.simplify();};Frac.prototype={multiply:function multiply(m){if(this.isOne()){return m.clone();}if(m.isOne()){return this.clone();}var c=this.clone();c.num=c.num.multiply(m.num);c.den=c.den.multiply(m.den);return c.simplify();},divide:function divide(m){if(m.equals(0))throw new DivisionByZero('Division by zero not allowed!');return this.clone().multiply(m.clone().invert()).simplify();},subtract:function subtract(m){return this.clone().add(m.clone().neg());},neg:function neg(){this.num=this.num.multiply(-1);return this;},add:function add(m){var n1=this.den,n2=m.den,c=this.clone();var a=c.num,b=m.num;if(n1.equals(n2)){c.num=a.add(b);}else{c.num=a.multiply(n2).add(b.multiply(n1));c.den=n1.multiply(n2);}return c.simplify();},mod:function mod(m){var a=this.clone(),b=m.clone();a.num=a.num.multiply(b.den);a.den=a.den.multiply(b.den);b.num=b.num.multiply(this.den);b.den=b.den.multiply(this.den);a.num=a.num.mod(b.num);return a.simplify();},simplify:function simplify(){var gcd=bigInt.gcd(this.num,this.den);this.num=this.num.divide(gcd);this.den=this.den.divide(gcd);return this;},clone:function clone(){var m=new Frac();m.num=new bigInt(this.num);m.den=new bigInt(this.den);return m;},decimal:function decimal(prec){var sign=this.num.isNegative()?'-':'';if(this.num.equals(this.den)){return'1';}prec=prec||Settings.PRECISION;prec++;var narr=[],n=this.num.abs(),d=this.den;for(var i=0;i<prec;i++){var w=n.divide(d),r=n.subtract(w.multiply(d));narr.push(w);if(r.equals(0))break;n=r.times(10);}var whole=narr.shift();if(narr.length===0){return sign+whole.toString();}if(i===prec){var lt=[];for(var i=0;i<2;i++){lt.unshift(narr.pop());}narr.push(Math.round(lt.join('.')));}var dec=whole.toString()+'.'+narr.join('');return sign+dec;},toDecimal:function toDecimal(prec){if(prec||Settings.PRECISION){return this.decimal(prec);}else return this.num/this.den;},qcompare:function qcompare(n){return[this.num.multiply(n.den),n.num.multiply(this.den)];},equals:function equals(n){if(!isNaN(n))n=new Frac(n);var q=this.qcompare(n);return q[0].equals(q[1]);},absEquals:function absEquals(n){if(!isNaN(n))n=new Frac(n);var q=this.qcompare(n);return q[0].abs().equals(q[1]);},greaterThan:function greaterThan(n){if(!isNaN(n))n=new Frac(n);var q=this.qcompare(n);return q[0].gt(q[1]);},gte:function gte(n){return this.greaterThan(n)||this.equals(n);},lte:function lte(n){return this.lessThan(n)||this.equals(n);},lessThan:function lessThan(n){if(!isNaN(n))n=new Frac(n);var q=this.qcompare(n);return q[0].lt(q[1]);},isInteger:function isInteger(){return this.den.equals(1);},negate:function negate(){this.num=this.num.multiply(-1);return this;},invert:function invert(){var t=this.den;if(!this.num.equals(0)){var isnegative=this.num.isNegative();this.den=this.num.abs();this.num=t;if(isnegative)this.num=this.num.multiply(-1);}return this;},isOne:function isOne(){return this.num.equals(1)&&this.den.equals(1);},sign:function sign(){return this.num.isNegative()?-1:1;},abs:function abs(){this.num=this.num.abs();return this;},gcd:function gcd(f){return Frac.quick(bigInt.gcd(f.num,this.num),bigInt.lcm(f.den,this.den));},toString:function toString(){return!this.den.equals(1)?this.num.toString()+'/'+this.den.toString():this.num.toString();},valueOf:function valueOf(){if(Settings.USE_BIG)return new bigDec(this.num.toString()).div(new bigDec(this.den.toString()));return this.num/this.den;},isNegative:function isNegative(){return this.toDecimal()<0;}};function _Symbol(obj){var isInfinity=obj==='Infinity';if(!(this instanceof _Symbol)){return new _Symbol(obj);};if(/^(\-?\+?\d+)\.?\d*e?\-?\+?\d*/i.test(obj)){this.group=N;this.value=CONST_HASH;this.multiplier=new Frac(obj);}else{this.group=S;validateName(obj);this.value=obj;this.multiplier=new Frac(1);this.imaginary=obj===Settings.IMAGINARY;this.isInfinity=isInfinity;}this.power=new Frac(1);return this;}_Symbol.imaginary=function(){var s=new _Symbol(Settings.IMAGINARY);s.imaginary=true;return s;};_Symbol.infinity=function(negative){var v=new _Symbol('Infinity');if(negative===-1)v.negate();return v;};_Symbol.shell=function(group,value){var symbol=new _Symbol(value);symbol.group=group;symbol.symbols={};symbol.length=0;return symbol;};_Symbol.unwrapSQRT=function(symbol,all){var p=symbol.power;if(symbol.fname===SQRT&&(symbol.isLinear()||all)){var t=symbol.args[0].clone();t.power=t.power.multiply(new Frac(1/2));t.multiplier=t.multiplier.multiply(symbol.multiplier);symbol=t;if(all)symbol.power=p.multiply(new Frac(1/2));}return symbol;};_Symbol.hyp=function(a,b){a=a||new _Symbol(0);b=b||new _Symbol(0);return _.sqrt(_.add(_.pow(a.clone(),new _Symbol(2)),_.pow(b.clone(),new _Symbol(2))));};_Symbol.toPolarFormArray=function(symbol){var re,im,r,theta;re=symbol.realpart();im=symbol.imagpart();r=_Symbol.hyp(re,im);theta=re.equals(0)?_.parse('pi/2'):_.trig.atan(_.divide(im,re));return[r,theta];};_Symbol.unwrapPARENS=function(symbol){if(symbol.fname===''){var r=symbol.args[0];r.power=r.power.multiply(symbol.power);r.multiplier=r.multiplier.multiply(symbol.multiplier);if(symbol.fname==='')return _Symbol.unwrapPARENS(r);return r;}return symbol;};_Symbol.create=function(value,power){power=power===undefined?1:power;return _.parse('('+value+')^('+power+')');};_Symbol.prototype={isSimple:function isSimple(){return this.power.equals(1)&&this.multiplier.equals(1);},powSimp:function powSimp(){if(this.group===CB){var powers=[],sign=this.multiplier.sign();this.each(function(x){var p=x.power;if(isSymbol(p)||p.equals(1))return this.clone();powers.push(p);});var min=new Frac(arrayMin(powers));var sign=this.multiplier.sign(),m=this.multiplier.clone().abs(),mfactors=Math2.ifactor(m);var out_=new Frac(1);var in_=new Frac(1);for(var x in mfactors){var n=new Frac(mfactors[x]);if(!n.lessThan(min)){n=n.divide(min).subtract(new Frac(1));in_=in_.multiply(new Frac(x));}out_=out_.multiply(_.parse(inBrackets(x)+'^'+inBrackets(n)).multiplier);}var t=new _Symbol(in_);this.each(function(x){x=x.clone();x.power=x.power.divide(min);t=_.multiply(t,x);});var xt=_.symfunction(PARENTHESIS,[t]);xt.power=min;xt.multiplier=sign<0?out_.negate():out_;return xt;}return this.clone();},equals:function equals(symbol){if(!isSymbol(symbol))symbol=new _Symbol(symbol);return this.value===symbol.value&&this.power.equals(symbol.power)&&this.multiplier.equals(symbol.multiplier)&&this.group===symbol.group;},abs:function abs(){var e=this.clone();e.multiplier.abs();return e;},gt:function gt(symbol){if(!isSymbol(symbol))symbol=new _Symbol(symbol);return this.isConstant()&&symbol.isConstant()&&this.multiplier.greaterThan(symbol.multiplier);},gte:function gte(symbol){if(!isSymbol(symbol))symbol=new _Symbol(symbol);return this.equals(symbol)||this.isConstant()&&symbol.isConstant()&&this.multiplier.greaterThan(symbol.multiplier);},lt:function lt(symbol){if(!isSymbol(symbol))symbol=new _Symbol(symbol);return this.isConstant()&&symbol.isConstant()&&this.multiplier.lessThan(symbol.multiplier);},lte:function lte(symbol){if(!isSymbol(symbol))symbol=new _Symbol(symbol);return this.equals(symbol)||this.isConstant()&&symbol.isConstant()&&this.multiplier.lessThan(symbol.multiplier);},isPoly:function isPoly(multivariate){var g=this.group,p=this.power;if(!isInt(p)||p<0)return false;if(g===N||g===S||this.isConstant(true))return true;var vars=_variables(this);if(g===CB&&vars.length===1){var v=vars[0];if(!v)return true;for(var x in this.symbols){var sym=this.symbols[x];if(sym.group===FN&&!sym.args[0].isConstant())return false;if(!sym.contains(v)&&!sym.isConstant(true))return false;}return true;}if(this.isComposite()||g===CB&&multivariate){if(!multivariate&&vars.length>1)return false;for(var x in this.symbols){if(!this.symbols[x].isPoly(multivariate))return false;}return true;}else return false;},stripVar:function stripVar(x,exclude_x){var retval;if((this.group===PL||this.group===S)&&this.value===x)retval=new _Symbol(exclude_x?0:this.multiplier);else if(this.group===CB&&this.isLinear()){retval=new _Symbol(1);this.each(function(s){if(!s.contains(x,true))retval=_.multiply(retval,s.clone());});retval.multiplier=retval.multiplier.multiply(this.multiplier);}else if(this.group===CP&&!this.isLinear()){retval=new _Symbol(this.multiplier);}else if(this.group===CP&&this.isLinear()){retval=new _Symbol(0);this.each(function(s){if(!s.contains(x)){var t=s.clone();t.multiplier=t.multiplier.multiply(this.multiplier);retval=_.add(retval,t);}});if(retval.equals(0))retval=new _Symbol(this.multiplier);}else if(this.group===EX&&this.power.contains(x,true)){retval=new _Symbol(this.multiplier);}else if(this.group===FN&&this.contains(x)){retval=new _Symbol(this.multiplier);}else retval=this.clone();return retval;},toArray:function toArray(v,arr){arr=arr||{arr:[],add:function add(x,idx){var e=this.arr[idx];this.arr[idx]=e?_.add(e,x):x;}};var g=this.group;if(g===S&&this.contains(v)){arr.add(new _Symbol(this.multiplier),this.power);}else if(g===CB){var a=this.stripVar(v),x=_.divide(this.clone(),a.clone());var p=x.isConstant()?0:x.power;arr.add(a,p);}else if(g===PL&&this.value===v){this.each(function(x,p){arr.add(x.stripVar(v),p);});}else if(g===CP){this.each(function(x){x.toArray(v,arr);});}else if(this.contains(v)){throw new NerdamerTypeError('Cannot convert to array! Exiting');}else{arr.add(this.clone(),0);}arr=arr.arr;for(var i=0;i<arr.length;i++){if(!arr[i])arr[i]=new _Symbol(0);}return arr;},hasFunc:function hasFunc(v){var fn_group=this.group===FN||this.group===EX;if(fn_group&&!v||fn_group&&this.contains(v))return true;if(this.symbols){for(var x in this.symbols){if(this.symbols[x].hasFunc(v))return true;}}return false;},sub:function sub(a,b){a=!isSymbol(a)?_.parse(a):a.clone();b=!isSymbol(b)?_.parse(b):b.clone();if(a.group===N||a.group===P)err('Cannot substitute a number. Must be a variable');var same_pow=false,a_is_unit_multiplier=a.multiplier.equals(1),m=this.multiplier.clone(),retval;if(this.value===a.value&&(this.group!==PL&&a.group!==PL||this.group===PL&&a.group===PL)){if(a_is_unit_multiplier||a.multiplier.equals(this.multiplier)){if(a.isLinear()){retval=b;}else if(a.power.equals(this.power)){retval=b;same_pow=true;}if(a.multiplier.equals(this.multiplier))m=new Frac(1);}}else if(this.group===CB||this.previousGroup===CB){retval=new _Symbol(1);this.each(function(x){retval=_.multiply(retval,x.sub(a,b));});}else if(this.isComposite()){if(a.isComposite()&&this.isComposite()&&this.isLinear()&&a.isLinear()){var find=function find(stack,needle){for(var x in stack.symbols){var sym=stack.symbols[x];if(sym.isComposite()&&find(sym,needle)||sym.equals(needle))return true;}return false;};for(var x in a.symbols){if(!find(this,a.symbols[x]))return this.clone();}retval=_.add(_.subtract(this.clone(),a),b);}else{retval=new _Symbol(0);this.each(function(x){retval=_.add(retval,x.sub(a,b));});}}else if(this.group===EX){retval=_.parse(this.value).sub(a,b);}else if(this.group===FN){var nargs=[];for(var i=0;i<this.args.length;i++){var arg=this.args[i];if(!isSymbol(arg))arg=_.parse(arg);nargs.push(arg.sub(a,b));}retval=_.symfunction(this.fname,nargs);}if(retval){if(!same_pow){var p=this.group===EX?this.power.sub(a,b):_.parse(this.power);retval=_.pow(retval,p);}retval.multiplier=retval.multiplier.multiply(m);return retval;}return this.clone();},isMonomial:function isMonomial(){if(this.group===S)return true;if(this.group===CB){for(var x in this.symbols){if(this.symbols[x].group!==S)return false;}}else return false;return true;},isPi:function isPi(){return this.group===S&&this.value==='pi';},sign:function sign(){return this.multiplier.sign();},isE:function isE(){return this.value==='e';},isSQRT:function isSQRT(){return this.fname===SQRT;},isConstant:function isConstant(check_all,check_symbols){if(check_symbols&&this.group===CB){for(var x in this.symbols){if(this.symbols[x].isConstant(true))return true;}}if(check_all==='all'&&(this.isPi()||this.isE()))return true;if(check_all&&this.group===FN){for(var i=0;i<this.args.length;i++){if(!this.args[i].isConstant(check_all))return false;}return true;}if(check_all)return isNumericSymbol(this);return this.value===CONST_HASH;},isImaginary:function isImaginary(){if(this.imaginary)return true;else if(this.symbols){for(var x in this.symbols){if(this.symbols[x].isImaginary())return true;}}return false;},realpart:function realpart(){if(this.isConstant()){return this.clone();}else if(this.imaginary)return new _Symbol(0);else if(this.isComposite()){var retval=new _Symbol(0);this.each(function(x){retval=_.add(retval,x.realpart());});return retval;}else if(this.isImaginary())return new _Symbol(0);return this.clone();},imagpart:function imagpart(){if(this.group===S&&this.isImaginary())return new _Symbol(this.multiplier);if(this.isComposite()){var retval=new _Symbol(0);this.each(function(x){retval=_.add(retval,x.imagpart());});return retval;}if(this.group===CB)return this.stripVar(Settings.IMAGINARY);return new _Symbol(0);},isInteger:function isInteger(){return this.isConstant()&&this.multiplier.isInteger();},isLinear:function isLinear(wrt){if(wrt){if(this.isConstant())return true;if(this.group===S){if(this.value===wrt)return this.power.equals(1);else return true;}if(this.isComposite()&&this.power.equals(1)){for(var x in this.symbols){if(!this.symbols[x].isLinear(wrt))return false;}return true;}if(this.group===CB&&this.symbols[wrt])return this.symbols[wrt].isLinear(wrt);return false;}else return this.power.equals(1);},containsFunction:function containsFunction(names){if(typeof names==='string')names=[names];if(this.group===FN&&names.indexOf(this.fname)!==-1)return true;if(this.symbols){for(var x in this.symbols){if(this.symbols[x].containsFunction(names))return true;}}return false;},multiplyPower:function multiplyPower(p2){if(this.group===N&&this.multiplier.equals(1))return this;var p1=this.power;if(this.group!==EX&&p2.group===N){var p=p2.multiplier;if(this.group===N&&!p.isInteger()){this.convert(P);}this.power=p1.equals(1)?p.clone():p1.multiply(p);if(this.group===P&&isInt(this.power)){this.value=Math.pow(this.value,this.power);this.toLinear();this.convert(N);}}else{if(this.group!==EX){p1=new _Symbol(p1);this.convert(EX);}this.power=_.multiply(p1,p2);}return this;},setPower:function setPower(p,retainSign){if(this.group===N&&this.multiplier.equals(1))return this;if(this.group===EX&&!isSymbol(p)){this.group=this.previousGroup;delete this.previousGroup;if(this.group===N){this.multiplier=new Frac(this.value);this.value=CONST_HASH;}else this.power=p;}else{var isSymbolic=false;if(isSymbol(p)){if(p.group===N){p=p.multiplier;}else{isSymbolic=true;}}var group=isSymbolic?EX:P;this.power=p;if(this.group===N&&group)this.convert(group,retainSign);}return this;},isInverse:function isInverse(){if(this.group===EX)return this.power.multiplier.lessThan(0);return this.power<0;},clone:function clone(c){var clone=c||new _Symbol(0),properties=['value','group','length','previousGroup','imaginary','fname','args','isInfinity','scientific'],l=properties.length,i;if(this.symbols){clone.symbols={};for(var x in this.symbols){clone.symbols[x]=this.symbols[x].clone();}}for(i=0;i<l;i++){if(this[properties[i]]!==undefined){clone[properties[i]]=this[properties[i]];}}clone.power=this.power.clone();clone.multiplier=this.multiplier.clone();if(this.isConversion)clone.isConversion=this.isConversion;if(this.isUnit)clone.isUnit=this.isUnit;return clone;},toUnitMultiplier:function toUnitMultiplier(keepSign){this.multiplier.num=new bigInt(this.multiplier.num.isNegative()&&keepSign?-1:1);this.multiplier.den=new bigInt(1);return this;},toLinear:function toLinear(){this.setPower(new Frac(1));return this;},each:function each(fn,deep){if(!this.symbols){fn.call(this,this,this.value);}else{for(var x in this.symbols){var sym=this.symbols[x];if(sym.group===PL&&deep){for(var y in sym.symbols){fn.call(x,sym.symbols[y],y);}}else fn.call(this,sym,x);}}},valueOf:function valueOf(){if(this.group===N)return this.multiplier.valueOf();else if(this.power===0){return 1;}else if(this.multiplier===0){return 0;}else{return _text(this,'decimals');}},contains:function contains(variable,all){variable=String(variable);var g=this.group;if(this.value===variable)return true;if(this.symbols){for(var x in this.symbols){if(this.symbols[x].contains(variable,all))return true;}}if(g===FN||this.previousGroup===FN){for(var i=0;i<this.args.length;i++){if(this.args[i].contains(variable,all))return true;}}if(g===EX){if(all&&this.power.contains(variable,all)){return true;}if(this.value===variable)return true;}return this.value===variable;},negate:function negate(){this.multiplier.negate();if(this.group===CP||this.group===PL)this.distributeMultiplier();return this;},invert:function invert(power_only,all){if(!power_only)this.multiplier=this.multiplier.invert();if(isSymbol(this.power)){this.power.negate();}else if(this.group===CB&&all){this.each(function(x){return x.invert();});}else{if(this.power&&this.group!==N)this.power.negate();}return this;},distributeMultiplier:function distributeMultiplier(all){var is_one=all?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&is_one&&this.group!==CB&&!this.multiplier.equals(1)){for(var x in this.symbols){var s=this.symbols[x];s.multiplier=s.multiplier.multiply(this.multiplier);s.distributeMultiplier();}this.toUnitMultiplier();}return this;},distributeExponent:function distributeExponent(){if(!this.power.equals(1)){var p=this.power;for(var x in this.symbols){var s=this.symbols[x];if(s.group===EX){s.power=_.multiply(s.power,new _Symbol(p));}else{this.symbols[x].power=this.symbols[x].power.multiply(p);}}this.toLinear();}return this;},convert:function convert(group,imaginary){if(group>FN){var cp=this.clone();this.symbols={};if(group===CB){cp.toUnitMultiplier();}else{this.toUnitMultiplier();}if(this.group===FN){cp.args=this.args;delete this.args;delete this.fname;}if(this.isImgSymbol)delete this.isImgSymbol;this.toLinear();this.symbols[cp.keyForGroup(group)]=cp;this.group=group;this.length=1;}else if(group===EX){if(!(this.group===N&&this.multiplier.equals(1))){if(this.group!==EX)this.previousGroup=this.group;if(this.group===N){this.value=this.multiplier.num.toString();this.toUnitMultiplier();}else this.value=_text(this,'hash');this.group=EX;}}else if(group===N){var m=this.multiplier.toDecimal();if(this.symbols)this.symbols=undefined;new _Symbol(this.group===P?m*Math.pow(this.value,this.power):m).clone(this);}else if(group===P&&this.group===N){this.value=imaginary?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString());this.toUnitMultiplier(!imaginary);this.group=P;}return this;},insert:function insert(symbol,action){if(!isSymbol(symbol))err('Object '+symbol+' is not of type Symbol!');if(this.symbols){var group=this.group;if(group>FN){var key=symbol.keyForGroup(group);var existing=key in this.symbols?this.symbols[key]:false;if(action==='add'){var hash=key;if(existing){this.symbols[hash]=_.add(existing,symbol);if(this.symbols[hash].multiplier.equals(0)){delete this.symbols[hash];this.length--;if(this.length===0){this.convert(N);this.multiplier=new Frac(0);}}}else{this.symbols[key]=symbol;this.length++;}}else{if(symbol.group===P&&isInt(symbol.power)){symbol.convert(N);}if(symbol.group!==EX){this.multiplier=this.multiplier.multiply(symbol.multiplier);symbol.toUnitMultiplier();}else{symbol.parens=symbol.multiplier.lessThan(0);this.multiplier=this.multiplier.multiply(symbol.multiplier.clone().abs());symbol.toUnitMultiplier(true);}if(existing){symbol=_.multiply(_remove(this.symbols,key),symbol);if(symbol.isConstant()){this.multiplier=this.multiplier.multiply(symbol.multiplier);symbol=new _Symbol(1);}this.length--;}if(!symbol.isOne(true)){this.symbols[key]=symbol;this.length++;}else if(symbol.multiplier.lessThan(0)){this.negate();}}if(this.length===0)this.convert(N);if(this.group===CP||this.group===CB){this.updateHash();}}}return this;},attach:function attach(symbol){if(isArray(symbol)){for(var i=0;i<symbol.length;i++){this.insert(symbol[i],'add');}return this;}return this.insert(symbol,'add');},combine:function combine(symbol){if(isArray(symbol)){for(var i=0;i<symbol.length;i++){this.insert(symbol[i],'multiply');}return this;}return this.insert(symbol,'multiply');},updateHash:function updateHash(){if(this.group===N)return;if(this.group===FN){var contents='',args=this.args,is_parens=this.fname===PARENTHESIS;for(var i=0;i<args.length;i++){contents+=(i===0?'':',')+_text(args[i]);}var fn_name=is_parens?'':this.fname;this.value=fn_name+(is_parens?contents:inBrackets(contents));}else if(!(this.group===S||this.group===PL)){this.value=_text(this,'hash');}},keyForGroup:function keyForGroup(group){var g=this.group;var key;if(g===N){key=this.value;}else if(g===S||g===P){if(group===PL)key=this.power.toDecimal();else key=this.value;}else if(g===FN){if(group===PL)key=this.power.toDecimal();else key=_text(this,'hash');}else if(g===PL){if(group===CB)key=_text(this,'hash');else if(group===CP){if(this.power.equals(1))key=this.value;else key=inBrackets(_text(this,'hash'))+Settings.POWER_OPERATOR+this.power.toDecimal();}else if(group===PL)key=this.power.toString();else key=this.value;return key;}else if(g===CP){if(group===CP){key=_text(this,'hash');}if(group===PL)key=this.power.toDecimal();else key=this.value;}else if(g===CB){if(group===PL)key=this.power.toDecimal();else key=_text(this,'hash');}else if(g===EX){if(group===PL)key=_text(this.power);else key=_text(this,'hash');}return key;},collectSymbols:function collectSymbols(fn,opt,sort_fn,expand_symbol){var collected=[];if(!this.symbols)collected.push(this);else{for(var x in this.symbols){var symbol=this.symbols[x];if(expand_symbol&&(symbol.group===PL||symbol.group===CP)){collected=collected.concat(symbol.collectSymbols());}else collected.push(fn?fn(symbol,opt):symbol);}}if(sort_fn===null)sort_fn=undefined;return collected.sort(sort_fn);},latex:function latex(option){return LaTeX.latex(this,option);},text:function text(option){return _text(this,option);},isOne:function isOne(abs){var f=abs?'absEquals':'equals';if(this.group===N)return this.multiplier[f](1);else return this.power.equals(0);},isComposite:function isComposite(){var g=this.group,pg=this.previousGroup;return g===CP||g===PL||pg===PL||pg===CP;},isCombination:function isCombination(){var g=this.group,pg=this.previousGroup;return g===CB||pg===CB;},lessThan:function lessThan(n){return this.multiplier.lessThan(n);},greaterThan:function greaterThan(n){return this.multiplier.greaterThan(n);},getDenom:function getDenom(){var retval,symbol;symbol=this.clone();if(this.group===CB&&this.power.lessThan(0))symbol=_.expand(symbol);if(symbol.power.lessThan(0)){var d=_.parse(symbol.multiplier.den);retval=symbol.toUnitMultiplier();retval.power.negate();retval=_.multiply(d,retval);}else if(symbol.group===CB){retval=_.parse(symbol.multiplier.den);for(var x in symbol.symbols){if(symbol.symbols[x].power<0)retval=_.multiply(retval,symbol.symbols[x].clone().invert());}}else retval=_.parse(symbol.multiplier.den);return retval;},getNum:function getNum(){var retval,symbol;symbol=this.clone();if(symbol.group===CB&&symbol.power.lessThan(0))symbol=_.expand(symbol);if(symbol.power.greaterThan(0)&&symbol.group!==CB){retval=_.multiply(_.parse(symbol.multiplier.num),symbol.toUnitMultiplier());}else if(symbol.group===CB){retval=_.parse(symbol.multiplier.num);symbol.each(function(x){if(x.power>0||x.group===EX&&x.power.multiplier>0){retval=_.multiply(retval,x.clone());}});}else{retval=_.parse(symbol.multiplier.num);}return retval;},toString:function toString(){return this.text();}};function Parser(){var _=this;var bin={};var preprocessors={names:[],actions:[]};function Slice(upper,lower){this.start=upper;this.end=lower;};Slice.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant();};Slice.prototype.text=function(){return _text(this.start)+':'+_text(this.end);};function Collection(){this.elements=[];}Collection.prototype.append=function(e){this.elements.push(e);};Collection.prototype.getItems=function(){return this.elements;};Collection.prototype.toString=function(){return _.pretty_print(this.elements);};Collection.create=function(e){var collection=new Collection();if(e)collection.append(e);return collection;};function Token(node,node_type,column){this.type=node_type;this.value=node;if(column!==undefined)this.column=column+1;if(node_type===Token.OPERATOR){var operator=operators[node];for(var x in operator){this[x]=operator[x];}}else if(node_type===Token.FUNCTION){this.precedence=Token.MAX_PRECEDENCE;this.leftAssoc=false;}}Token.prototype.toString=function(){return this.value;};Token.prototype.toString=function(){if(this.is_prefix)return'`'+this.value;return this.value;};Token.OPERATOR='OPERATOR';Token.VARIABLE_OR_LITERAL='VARIABLE_OR_LITERAL';Token.FUNCTION='FUNCTION';Token.UNIT='UNIT';Token.KEYWORD='KEYWORD';Token.MAX_PRECEDENCE=999;this.classes={Collection:Collection,Slice:Slice,Token:Token};var complex={prec:undefined,cos:function cos(r,i){var re,im;re=_.parse(Math.cos(r)*Math.cosh(i));im=_.parse(Math.sin(r)*Math.sinh(i));return _.subtract(re,_.multiply(im,_Symbol.imaginary()));},sin:function sin(r,i){var re,im;re=_.parse(Math.sin(r)*Math.cosh(i));im=_.parse(Math.cos(r)*Math.sinh(i));return _.subtract(re,_.multiply(im,_Symbol.imaginary()));},tan:function tan(r,i){var re,im;re=_.parse(Math.sin(2*r)/(Math.cos(2*r)+Math.cosh(2*i)));im=_.parse(Math.sinh(2*i)/(Math.cos(2*r)+Math.cosh(2*i)));return _.add(re,_.multiply(im,_Symbol.imaginary()));},sec:function sec(r,i){var t=this.removeDen(this.cos(r,i));return _.subtract(t[0],_.multiply(t[1],_Symbol.imaginary()));},csc:function csc(r,i){var t=this.removeDen(this.sin(r,i));return _.add(t[0],_.multiply(t[1],_Symbol.imaginary()));},cot:function cot(r,i){var t=this.removeDen(this.tan(r,i));return _.subtract(t[0],_.multiply(t[1],_Symbol.imaginary()));},acos:function acos(r,i){var symbol,sq,a,b,c;symbol=this.fromArray([r,i]);sq=_.expand(_.pow(symbol.clone(),new _Symbol(2)));a=_.multiply(_sqrt(_.subtract(new _Symbol(1),sq)),_Symbol.imaginary());b=_.expand(_.add(symbol.clone(),a));c=_log(b);return _.expand(_.multiply(_Symbol.imaginary().negate(),c));},asin:function asin(r,i){return _.subtract(_.parse('pi/2'),this.acos(r,i));},atan:function atan(r,i){var a,b,c,symbol;symbol=complex.fromArray([r,i]);a=_.expand(_.multiply(_Symbol.imaginary(),symbol.clone()));b=_log(_.expand(_.subtract(new _Symbol(1),a.clone())));c=_log(_.expand(_.add(new _Symbol(1),a.clone())));return _.expand(_.multiply(_.divide(_Symbol.imaginary(),new _Symbol(2)),_.subtract(b,c)));},asec:function asec(r,i){var d=this.removeDen([r,i]);d[1].negate();return this.acos.apply(this,d);},acsc:function acsc(r,i){var d=this.removeDen([r,i]);d[1].negate();return this.asin.apply(this,d);},acot:function acot(r,i){var d=this.removeDen([r,i]);d[1].negate();return this.atan.apply(this,d);},cosh:function cosh(r,i){var re,im;re=_.parse(Math.cosh(r)*Math.cos(i));im=_.parse(Math.sinh(r)*Math.sin(i));return _.add(re,_.multiply(im,_Symbol.imaginary()));},sinh:function sinh(r,i){var re,im;re=_.parse(Math.sinh(r)*Math.cos(i));im=_.parse(Math.cosh(r)*Math.sin(i));return _.add(re,_.multiply(im,_Symbol.imaginary()));},tanh:function tanh(r,i){var re,im;re=_.parse(Math.sinh(2*r)/(Math.cos(2*i)+Math.cosh(2*r)));im=_.parse(Math.sin(2*i)/(Math.cos(2*i)+Math.cosh(2*r)));return _.subtract(re,_.multiply(im,_Symbol.imaginary()));},sech:function sech(r,i){var t=this.removeDen(this.cosh(r,i));return _.subtract(t[0],_.multiply(t[1],_Symbol.imaginary()));},csch:function csch(r,i){var t=this.removeDen(this.sinh(r,i));return _.subtract(t[0],_.multiply(t[1],_Symbol.imaginary()));},coth:function coth(r,i){var t=this.removeDen(this.tanh(r,i));return _.add(t[0],_.multiply(t[1],_Symbol.imaginary()));},acosh:function acosh(r,i){var a,b,z;z=this.fromArray([r,i]);a=_sqrt(_.add(z.clone(),new _Symbol(1)));b=_sqrt(_.subtract(z.clone(),new _Symbol(1)));return _.expand(_log(_.add(z,_.expand(_.multiply(a,b)))));},asinh:function asinh(r,i){var a,z;z=this.fromArray([r,i]);a=_sqrt(_.add(new _Symbol(1),_.expand(_.pow(z.clone(),new _Symbol(2)))));return _.expand(_log(_.add(z,a)));},atanh:function atanh(r,i){var a,b,z;z=this.fromArray([r,i]);a=_log(_.add(z.clone(),new _Symbol(1)));b=_log(_.subtract(new _Symbol(1),z));return _.expand(_.divide(_.subtract(a,b),new _Symbol(2)));},asech:function asech(r,i){var t=this.removeDen([r,i]);t[1].negate();return this.acosh.apply(this,t);},acsch:function acsch(r,i){var t=this.removeDen([r,i]);t[1].negate();return this.asinh.apply(this,t);},acoth:function acoth(r,i){var t=this.removeDen([r,i]);t[1].negate();return this.atanh.apply(this,t);},sqrt:function sqrt(symbol){var re,im,h,a,d;re=symbol.realpart();im=symbol.imagpart();h=_Symbol.hyp(re,im);a=_.add(re.clone(),h);d=_sqrt(_.multiply(new _Symbol(2),a.clone()));return _.add(_.divide(a.clone(),d.clone()),_.multiply(_.divide(im,d),_Symbol.imaginary()));},log:function log(r,i){var re,im;re=_log(_Symbol.hyp(r,i));im=_.parse(Math.atan2(i,r));return _.add(re,_.multiply(_Symbol.imaginary(),im));},removeDen:function removeDen(symbol){var den,r,i,re,im;if(isArray(symbol)){r=symbol[0];i=symbol[1];}else{r=symbol.realpart();i=symbol.imagpart();}den=Math.pow(r,2)+Math.pow(i,2);re=_.parse(r/den);im=_.parse(i/den);return[re,im];},fromArray:function fromArray(arr){return _.add(arr[0],_.multiply(_Symbol.imaginary(),arr[1]));},evaluate:function evaluate(symbol,f){var re,im,sign;sign=symbol.power.sign();symbol.power=symbol.power.abs();if(symbol.power.greaterThan(1))symbol=_.expand(symbol);if(sign<0){var d=this.removeDen(symbol);re=d[0];im=d[1];}else{re=symbol.realpart();im=symbol.imagpart();}if(re.isConstant('all')&&im.isConstant('all'))return this[f].call(this,re,im);return _.symfunction(f,[symbol]);}};var trig=this.trig={cos:function cos(symbol){if(symbol.equals('pi')&&symbol.multiplier.den.equals(2))return new _Symbol(0);if(Settings.PARSE2NUMBER){if(symbol.equals(new _Symbol(Settings.PI/2)))return new _Symbol(0);if(symbol.isConstant()){return new _Symbol(Math.cos(symbol.valueOf()));}if(symbol.isImaginary()){return complex.evaluate(symbol,'cos');}}if(symbol.equals(0))return new _Symbol(1);var retval,c=false,q=getQuadrant(symbol.multiplier.toDecimal()),m=symbol.multiplier.abs();symbol.multiplier=m;if(symbol.isPi()&&symbol.isLinear()){if(isInt(m)){retval=new _Symbol(even(m)?1:-1);}else{var n=Number(m.num),d=Number(m.den);if(d===2)retval=new _Symbol(0);else if(d===3){retval=_.parse('1/2');c=true;}else if(d===4){retval=_.parse('1/sqrt(2)');c=true;}else if(d===6){retval=_.parse('sqrt(3)/2');c=true;}else retval=_.symfunction('cos',[symbol]);}}if(c&&(q===2||q===3))retval.negate();if(!retval)retval=_.symfunction('cos',[symbol]);return retval;},sin:function sin(symbol){if(Settings.PARSE2NUMBER){if(symbol.isConstant()){return new _Symbol(Math.sin(symbol.valueOf()));}if(symbol.isImaginary())return complex.evaluate(symbol,'sin');}if(symbol.equals(0))return new _Symbol(0);var retval,c=false,q=getQuadrant(symbol.multiplier.toDecimal()),sign=symbol.multiplier.sign(),m=symbol.multiplier.abs();symbol.multiplier=m;if(symbol.equals('pi'))retval=new _Symbol(0);else if(symbol.isPi()&&symbol.isLinear()){if(isInt(m)){retval=new _Symbol(0);}else{var n=m.num,d=m.den;if(d==2){retval=new _Symbol(1);c=true;}else if(d==3){retval=_.parse('sqrt(3)/2');c=true;}else if(d==4){retval=_.parse('1/sqrt(2)');c=true;}else if(d==6){retval=_.parse('1/2');c=true;}else retval=_.multiply(new _Symbol(sign),_.symfunction('sin',[symbol]));}}if(!retval)retval=_.multiply(new _Symbol(sign),_.symfunction('sin',[symbol]));if(c&&(q===3||q===4))retval.negate();return retval;},tan:function tan(symbol){if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math.tan(symbol.valueOf()));if(symbol.isImaginary())return complex.evaluate(symbol,'tan');}var retval,c=false,q=getQuadrant(symbol.multiplier.toDecimal()),m=symbol.multiplier;symbol.multiplier=m;if(symbol.isPi()&&symbol.isLinear()){if(isInt(m)){retval=new _Symbol(0);}else{var n=m.num,d=m.den;if(d==2)throw new UndefinedError('tan is undefined for '+symbol.toString());else if(d==3){retval=_.parse('sqrt(3)');c=true;}else if(d==4){retval=new _Symbol(1);c=true;}else if(d==6){retval=_.parse('1/sqrt(3)');c=true;}else retval=_.symfunction('tan',[symbol]);}}if(!retval)retval=_.symfunction('tan',[symbol]);if(c&&(q===2||q===4))retval.negate();return retval;},sec:function sec(symbol){if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math2.sec(symbol.valueOf()));if(symbol.isImaginary())return complex.evaluate(symbol,'sec');return _.parse(format('1/cos({0})',symbol));}var retval,c=false,q=getQuadrant(symbol.multiplier.toDecimal()),m=symbol.multiplier.abs();symbol.multiplier=m;if(symbol.isPi()&&symbol.isLinear()){if(isInt(m)){retval=new _Symbol(even(m)?1:-1);}else{var n=m.num,d=m.den;if(d==2)throw new UndefinedError('sec is undefined for '+symbol.toString());else if(d==3){retval=new _Symbol(2);c=true;}else if(d==4){retval=_.parse('sqrt(2)');c=true;}else if(d==6){retval=_.parse('2/sqrt(3)');c=true;}else retval=_.symfunction('sec',[symbol]);}}if(c&&(q===2||q===3))retval.negate();if(!retval)retval=_.symfunction('sec',[symbol]);return retval;},csc:function csc(symbol){if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math2.csc(symbol.valueOf()));if(symbol.isImaginary())return complex.evaluate(symbol,'csc');return _.parse(format('1/sin({0})',symbol));}var retval,c=false,q=getQuadrant(symbol.multiplier.toDecimal()),sign=symbol.multiplier.sign(),m=symbol.multiplier.abs();symbol.multiplier=m;if(symbol.isPi()&&symbol.isLinear()){if(isInt(m)){throw new UndefinedError('csc is undefined for '+symbol.toString());}else{var n=m.num,d=m.den;if(d==2){retval=new _Symbol(1);c=true;}else if(d==3){retval=_.parse('2/sqrt(3)');c=true;}else if(d==4){retval=_.parse('sqrt(2)');c=true;}else if(d==6){retval=new _Symbol(2);c=true;}else retval=_.multiply(new _Symbol(sign),_.symfunction('csc',[symbol]));}}if(!retval)retval=_.multiply(new _Symbol(sign),_.symfunction('csc',[symbol]));if(c&&(q===3||q===4))retval.negate();return retval;},cot:function cot(symbol){if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math2.cot(symbol.valueOf()));if(symbol.isImaginary())return complex.evaluate(symbol,'cot');return _.parse(format('1/tan({0})',symbol));}var retval,c=false,q=getQuadrant(symbol.multiplier.toDecimal()),m=symbol.multiplier;symbol.multiplier=m;if(symbol.isPi()&&symbol.isLinear()){if(isInt(m)){throw new UndefinedError('cot is undefined for '+symbol.toString());}else{var n=m.num,d=m.den;if(d==2)retval=new _Symbol(0);else if(d==3){retval=_.parse('1/sqrt(3)');c=true;}else if(d==4){retval=new _Symbol(1);c=true;}else if(d==6){retval=_.parse('sqrt(3)');c=true;}else retval=_.symfunction('cot',[symbol]);}}if(!retval)retval=_.symfunction('cot',[symbol]);if(c&&(q===2||q===4))retval.negate();return retval;},acos:function acos(symbol){if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math.acos(symbol.valueOf()));if(symbol.isImaginary())return complex.evaluate(symbol,'acos');}return _.symfunction('acos',arguments);},asin:function asin(symbol){if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math.asin(symbol.valueOf()));if(symbol.isImaginary())return complex.evaluate(symbol,'asin');}return _.symfunction('asin',arguments);},atan:function atan(symbol){var retval;if(symbol.equals(0))retval=new _Symbol(0);else if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math.atan(symbol.valueOf()));if(symbol.isImaginary())return complex.evaluate(symbol,'atan');return _.symfunction('atan',arguments);}else if(symbol.equals(-1))retval=_.parse('-pi/4');else retval=_.symfunction('atan',arguments);return retval;},asec:function asec(symbol){if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math.acos(symbol.invert().valueOf()));if(symbol.isImaginary())return complex.evaluate(symbol,'asec');}return _.symfunction('asec',arguments);},acsc:function acsc(symbol){if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math.asin(symbol.invert().valueOf()));if(symbol.isImaginary())return complex.evaluate(symbol,'acsc');}return _.symfunction('acsc',arguments);},acot:function acot(symbol){if(Settings.PARSE2NUMBER){if(symbol.isConstant()){return new _.add(_.parse('pi/2'),trig.atan(symbol).negate());}if(symbol.isImaginary())return complex.evaluate(symbol,'acot');}return _.symfunction('acot',arguments);},atan2:function atan2(a,b){if(a.equals(0)&&b.equals(0))throw new UndefinedError('atan2 is undefined for 0, 0');if(Settings.PARSE2NUMBER&&a.isConstant()&&b.isConstant()){return new _Symbol(Math.atan2(a,b));}return _.symfunction('atan2',arguments);}};var trigh=this.trigh={cosh:function cosh(symbol){var retval;if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math.cosh(symbol.valueOf()));if(symbol.isImaginary()){return complex.evaluate(symbol,'cosh');}}return retval=_.symfunction('cosh',arguments);},sinh:function sinh(symbol){var retval;if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math.sinh(symbol.valueOf()));if(symbol.isImaginary()){return complex.evaluate(symbol,'sinh');}}return retval=_.symfunction('sinh',arguments);},tanh:function tanh(symbol){var retval;if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math.tanh(symbol.valueOf()));if(symbol.isImaginary()){return complex.evaluate(symbol,'tanh');}}return retval=_.symfunction('tanh',arguments);},sech:function sech(symbol){var retval;if(Settings.PARSE2NUMBER){if(symbol.isConstant()){return new _Symbol(Math.sech(symbol.valueOf()));}if(symbol.isImaginary()){return complex.evaluate(symbol,'sech');}return _.parse(format('1/cosh({0})',symbol));}return retval=_.symfunction('sech',arguments);},csch:function csch(symbol){var retval;if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math.csch(symbol.valueOf()));if(symbol.isImaginary()){return complex.evaluate(symbol,'csch');}return _.parse(format('1/sinh({0})',symbol));}return retval=_.symfunction('csch',arguments);},coth:function coth(symbol){var retval;if(Settings.PARSE2NUMBER){if(symbol.isConstant())return new _Symbol(Math.coth(symbol.valueOf()));if(symbol.isImaginary()){return complex.evaluate(symbol,'coth');}return _.parse(format('1/tanh({0})',symbol));}return retval=_.symfunction('coth',arguments);},acosh:function acosh(symbol){var retval;if(Settings.PARSE2NUMBER&&symbol.isImaginary())retval=complex.evaluate(symbol,'acosh');else if(Settings.PARSE2NUMBER)retval=evaluate(_.parse(format(Settings.LOG+'(({0})+sqrt(({0})^2-1))',symbol.toString())));else retval=_.symfunction('acosh',arguments);return retval;},asinh:function asinh(symbol){var retval;if(Settings.PARSE2NUMBER&&symbol.isImaginary())retval=complex.evaluate(symbol,'asinh');else if(Settings.PARSE2NUMBER)retval=evaluate(_.parse(format(Settings.LOG+'(({0})+sqrt(({0})^2+1))',symbol.toString())));else retval=_.symfunction('asinh',arguments);return retval;},atanh:function atanh(symbol){var retval;if(Settings.PARSE2NUMBER&&symbol.isImaginary())retval=complex.evaluate(symbol,'atanh');else if(Settings.PARSE2NUMBER){retval=evaluate(_.parse(format('(1/2)*'+Settings.LOG+'((1+({0}))/(1-({0})))',symbol.toString())));}else retval=_.symfunction('atanh',arguments);return retval;},asech:function asech(symbol){var retval;if(Settings.PARSE2NUMBER&&symbol.isImaginary())retval=complex.evaluate(symbol,'asech');else if(Settings.PARSE2NUMBER)retval=evaluate(_log(_.add(symbol.clone().invert(),_sqrt(_.subtract(_.pow(symbol,new _Symbol(-2)),new _Symbol(1))))));else retval=_.symfunction('asech',arguments);return retval;},acsch:function acsch(symbol){var retval;if(Settings.PARSE2NUMBER&&symbol.isImaginary())retval=complex.evaluate(symbol,'acsch');else if(Settings.PARSE2NUMBER)retval=evaluate(_.parse(format(Settings.LOG+'((1+sqrt(1+({0})^2))/({0}))',symbol.toString())));else retval=_.symfunction('acsch',arguments);return retval;},acoth:function acoth(symbol){var retval;if(Settings.PARSE2NUMBER&&symbol.isImaginary())retval=complex.evaluate(symbol,'acoth');else if(Settings.PARSE2NUMBER){if(symbol.equals(1))retval=_Symbol.infinity();else retval=evaluate(_.divide(_log(_.divide(_.add(symbol.clone(),new _Symbol(1)),_.subtract(symbol.clone(),new _Symbol(1)))),new _Symbol(2)));}else retval=_.symfunction('acoth',arguments);return retval;}};this.units={};var operators={'\\':{precedence:8,operator:'\\',action:'slash',prefix:true,postfix:false,leftAssoc:true,operation:function operation(e){return e;}},'!!':{precedence:7,operator:'!!',action:'dfactorial',prefix:false,postfix:true,leftAssoc:true,operation:function operation(e){return _.symfunction(Settings.DOUBLEFACTORIAL,[e]);}},'!':{precedence:7,operator:'!',action:'factorial',prefix:false,postfix:true,leftAssoc:true,operation:function operation(e){return factorial(e);}},'^':{precedence:6,operator:'^',action:'pow',prefix:false,postfix:false,leftAssoc:true},'**':{precedence:6,operator:'**',action:'pow',prefix:false,postfix:false,leftAssoc:true},'%':{precedence:4,operator:'%',action:'percent',prefix:false,postfix:true,leftAssoc:true,overloaded:true,overloadAction:'mod',overloadLeftAssoc:false,operation:function operation(x){return _.divide(x,new _Symbol(100));}},'*':{precedence:4,operator:'*',action:'multiply',prefix:false,postfix:false,leftAssoc:false},'/':{precedence:4,operator:'/',action:'divide',prefix:false,postfix:false,leftAssoc:false},'+':{precedence:3,operator:'+',action:'add',prefix:true,postfix:false,leftAssoc:false,operation:function operation(x){return x;}},'plus':{precedence:3,operator:'plus',action:'add',prefix:true,postfix:false,leftAssoc:false,operation:function operation(x){return x;}},'-':{precedence:3,operator:'-',action:'subtract',prefix:true,postfix:false,leftAssoc:false,operation:function operation(x){return x.negate();}},'=':{precedence:2,operator:'=',action:'equals',prefix:false,postfix:false,leftAssoc:false},'==':{precedence:1,operator:'==',action:'eq',prefix:false,postfix:false,leftAssoc:false},'<':{precedence:1,operator:'<',action:'lt',prefix:false,postfix:false,leftAssoc:false},'<=':{precedence:1,operator:'<=',action:'lte',prefix:false,postfix:false,leftAssoc:false},'>':{precedence:1,operator:'>',action:'gt',prefix:false,postfix:false,leftAssoc:false},'=>':{precedence:1,operator:'=>',action:'gte',prefix:false,postfix:false,leftAssoc:false},',':{precedence:0,operator:',',action:'comma',prefix:false,postfix:false,leftAssoc:false},':':{precedence:0,operator:',',action:'assign',prefix:false,postfix:false,leftAssoc:false,vectorFn:'slice'},':=':{precedence:0,operator:',',action:'function_assign',prefix:false,postfix:false,leftAssoc:true}};var brackets={'(':{type:'round',id:1,is_open:true,is_close:false},')':{type:'round',id:2,is_open:false,is_close:true},'[':{type:'square',id:3,is_open:true,is_close:false,maps_to:'vector'},']':{type:'square',id:4,is_open:false,is_close:true},'{':{type:'curly',id:5,is_open:true,is_close:false,maps_to:'Set'},'}':{type:'curly',id:6,is_open:false,is_close:true}};var functions=this.functions={'cos':[trig.cos,1],'sin':[trig.sin,1],'tan':[trig.tan,1],'sec':[trig.sec,1],'csc':[trig.csc,1],'cot':[trig.cot,1],'acos':[trig.acos,1],'asin':[trig.asin,1],'atan':[trig.atan,1],'arccos':[trig.acos,1],'arcsin':[trig.asin,1],'arctan':[trig.atan,1],'asec':[trig.asec,1],'acsc':[trig.acsc,1],'acot':[trig.acot,1],'atan2':[trig.atan2,2],'acoth':[trigh.acoth,1],'asech':[trigh.asech,1],'acsch':[trigh.acsch,1],'sinh':[trigh.sinh,1],'cosh':[trigh.cosh,1],'tanh':[trigh.tanh,1],'asinh':[trigh.asinh,1],'sech':[trigh.sech,1],'csch':[trigh.csch,1],'coth':[trigh.coth,1],'acosh':[trigh.acosh,1],'atanh':[trigh.atanh,1],'log10':[,1],'exp':[exp,1],'radians':[radians,1],'degrees':[degrees,1],'min':[min,-1],'max':[max,-1],'erf':[,1],'floor':[,1],'ceil':[,1],'trunc':[,1],'Si':[,1],'step':[,1],'rect':[,1],'sinc':[sinc,1],'tri':[,1],'sign':[sign,1],'Ci':[,1],'Ei':[,1],'Shi':[,1],'Chi':[,1],'Li':[,1],'fib':[,1],'fact':[factorial,1],'factorial':[factorial,1],'continued_fraction':[continued_fraction,[1,2]],'dfactorial':[,1],'gamma_incomplete':[,[1,2]],'round':[round,[1,2]],'scientific':[scientific,[1,2]],'mod':[mod,2],'pfactor':[pfactor,1],'vector':[vector,-1],'matrix':[matrix,-1],'Set':[set,-1],'imatrix':[imatrix,-1],'parens':[parens,-1],'sqrt':[_sqrt,1],'nthroot':[nthroot,2],'log':[_log,[1,2]],'expand':[expand,1],'abs':[abs,1],'invert':[invert,1],'determinant':[determinant,1],'size':[size,1],'transpose':[transpose,1],'dot':[dot,2],'cross':[cross,2],'vecget':[vecget,2],'vecset':[vecset,3],'vectrim':[vectrim,[1,2]],'matget':[matget,3],'matset':[matset,4],'matgetrow':[matgetrow,2],'matsetrow':[matsetrow,3],'matgetcol':[matgetcol,2],'matsetcol':[matsetcol,3],'IF':[IF,3],'is_in':[is_in,2],'realpart':[realpart,1],'imagpart':[imagpart,1],'conjugate':[conjugate,1],'arg':[arg,1],'polarform':[polarform,1],'rectform':[rectform,1],'sort':[sort,[1,2]],'integer_part':[,1],'union':[union,2],'contains':[contains,2],'intersection':[intersection,2],'difference':[difference,2],'intersects':[intersects,2],'is_subset':[is_subset,2],'print':[print,-1]};this.error=err;var findFunction=function findFunction(fname){var fmodules=Settings.FUNCTION_MODULES,l=fmodules.length;for(var i=0;i<l;i++){var fmodule=fmodules[i];if(fname in fmodule)return fmodule[fname];}err('The function '+fname+' is undefined!');};this.override=function(which,with_what){if(!bin[which])bin[which]=[];bin[which].push(this[which]);this[which]=with_what;};this.restore=function(what){if(this[what])this[what]=bin[what].pop();};this.extend=function(what,with_what,force_call){var _=this,extended=this[what];if(typeof extended==='function'&&typeof with_what==='function'){var f=this[what];this[what]=function(a,b){if(isSymbol(a)&&isSymbol(b)&&!force_call)return f.call(_,a,b);else return with_what.call(_,a,b,f);};}};this.symfunction=function(fn_name,params){var f=new _Symbol(fn_name);f.group=FN;if(_typeof(params)==='object')params=[].slice.call(params);f.args=params;f.fname=fn_name===PARENTHESIS?'':fn_name;f.updateHash();return f;};this.callfunction=function(fn_name,args,allowed_args){var fn_settings=functions[fn_name];if(!fn_settings)err('Nerdamer currently does not support the function '+fn_name);var num_allowed_args=fn_settings[1]||allowed_args,fn=fn_settings[0],retval;if(!(args instanceof Array))args=args!==undefined?[args]:[];if(num_allowed_args!==-1){var is_array=isArray(num_allowed_args),min_args=is_array?num_allowed_args[0]:num_allowed_args,max_args=is_array?num_allowed_args[1]:num_allowed_args,num_args=args.length;var error_msg=fn_name+' requires a {0} of {1} arguments. {2} provided!';if(num_args<min_args)err(format(error_msg,'minimum',min_args,num_args));if(num_args>max_args)err(format(error_msg,'maximum',max_args,num_args));}var numericArgs=allNumbers(args);if(Settings.USE_BIG&&numericArgs){retval=Big[fn_name].apply(undefined,args);}else{if(!fn){fn=findFunction(fn_name);if(Settings.PARSE2NUMBER&&numericArgs)retval=bigConvert(fn.apply(fn,args));else retval=_.symfunction(fn_name,args);}else{retval=fn.apply(fn_settings[2],args);}}return retval;};this.operator_filter_regex=function(){var ostr='^\\'+Object.keys(operators).filter(function(x){if(x.length===1)return x;}).join('\\');return new RegExp('(['+ostr+'])\\s+(['+ostr+'])');}();this.setOperator=function(operator,action,shift){var name=operator.operator;operators[name]=operator;if(action)this[operator.action]=action;_[name]=operator.operation;if(!operator.action&&!(operator.prefix||operator.postif)){operator.action=name;}if(shift==='over'||shift==='under'){var precedence=operator.precedence;for(var x in operators){var o=operators[x];var condition=shift==='over'?o.precedence>=precedence:o.precedence>precedence;if(condition)o.precedence++;};}};this.getOperator=function(operator){return operators[operator];};this.aliasOperator=function(o,n){var t={};var operator=operators[o];for(var x in operator){t[x]=operator[x];}t.operator=n;this.setOperator(t);};this.getOperators=function(){return operators;};this.getBrackets=function(){return brackets;};var prepare_expression=function prepare_expression(e){e=String(e);for(var i=0;i<preprocessors.actions.length;i++){e=preprocessors.actions[i].call(this,e);}e=e.replace(/\s+/g,' ');if(/e/gi.test(e)){e=e.replace(/\-*\d+\.*\d*e\+?\-?\d+/gi,function(x){return scientificToDecimal(x);});}e=e.replace(/([\+\-\/\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\+\-\/\*]*)/gi,function(){var str=arguments[4],group1=arguments[1],group2=arguments[2],start=arguments[3],first=str.charAt(start),before='',d='*';if(!first.match(/[\+\-\/\*]/))before=str.charAt(start-1);if(before.match(/[a-z]/i))d='';return group1+d+group2;}).replace(/([a-z0-9_]+)/gi,function(match,a){if(Settings.USE_MULTICHARACTER_VARS===false&&!(a in functions)){if(!isNaN(a))return a;return a.split('').join('*');}return a;}).replace(/\)\(/g,')*(')||'0';while(true){var e_org=e;e=e.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,function(match,a,b,c,d){var g1=a||c,g2=b||d;if(g1 in functions)return g1+g2;return g1+'*'+g2;});if(e_org===e)break;}return e;};this.initConstants=function(){this.CONSTANTS={E:new _Symbol(Settings.E),PI:new _Symbol(Settings.PI)};};this.pretty_print=function(o){if(Array.isArray(o)){var s=o.map(function(x){return _.pretty_print(x);}).join(', ');if(o.type==='vector')return'vector<'+s+'>';return'('+s+')';}return o.toString();};this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]};this.callPeekers=function(name){var peekers=this.peekers[name];var args=arguments2Array(arguments).slice(1).map(stringify);for(var i=0;i<peekers.length;i++){peekers[i].apply(null,args);}};this.tokenize=function(e){e=String(e);e=e.trim().replace(/\s+/g,' ');for(var x in brackets){var regex=new RegExp(brackets[x].is_close?'\\s+\\'+x:'\\'+x+'\\s+','g');e=e.replace(regex,x);}var col=0;var L=e.length;var lpos=0;var tokens=[];var scopes=[tokens];var target=scopes[0];var depth=0;var open_brackets=[];var has_space=false;var SPACE=' ';var EMPTY_STRING='';var COMMA=',';var MINUS='-';var MULT='*';var addScope=function addScope(scope_type,column){var new_scope=[];if(scope_type!==undefined){new_scope.type=scope_type;}new_scope.column=column;scopes.push(new_scope);target.push(new_scope);target=new_scope;depth++;};var goUp=function goUp(){scopes.pop();target=scopes[--depth];};var get_operator_str=function get_operator_str(start_at){start_at=start_at!==undefined?start_at:col;var end=start_at+1;while(e.charAt(end++)in operators){}return e.substring(start_at,end-1);};var chunkify=function chunkify(operator_str){var start=col-operator_str.length;var _operators=[];var operator=operator_str.charAt(0);for(var i=1,L=operator_str.length;i<L;i++){var ch=operator_str.charAt(i);var o=operator+ch;if(!(o in operators)){_operators.push(new Token(operator,Token.OPERATOR,start+i));operator=ch;}else operator=o;}_operators.push(new Token(operator,Token.OPERATOR,start+i));return _operators;};var add_token=function add_token(at,token){if(token===undefined)token=e.substring(lpos,at);if(token in _.units)target.push(new Token(token,Token.UNIT,lpos));else if(token!=='')target.push(new Token(token,Token.VARIABLE_OR_LITERAL,lpos));};var add_function=function add_function(f){target.push(new Token(f,Token.FUNCTION,lpos));};var set_last_position=function set_last_position(position){lpos=position+1;};var adjust_column_position=function adjust_column_position(){lpos=lpos+operator_str.length-2;col=lpos-1;};for(;col<L;col++){var ch=e.charAt(col);if(ch in operators){add_token(col);var last_token_is_numeric=target[0]&&isNumber(target[0]);var is_multiplication=last_token_is_numeric&&ch===MULT;if(has_space&&lpos<col&&!(ch===COMMA||is_multiplication)){has_space=false;goUp();}set_last_position(col+1);var operator_str=get_operator_str(col);adjust_column_position();target.push.apply(target,chunkify(operator_str));}else if(ch in brackets){var bracket=brackets[ch];if(bracket.is_open){open_brackets.push([bracket,lpos]);var f=e.substring(lpos,col);if(f in functions){add_function(f);}else if(f!==''){target.push(new Token(f,Token.VARIABLE_OR_LITERAL,lpos));}addScope(bracket.maps_to,col);}else if(bracket.is_close){var pair=open_brackets.pop();if(!pair)throw new ParityError('Missing open bracket for bracket at: '+(col+1));else if(pair[0].id!==bracket.id-1)throw new ParityError('Parity error');add_token(col);goUp();}set_last_position(col);}else if(ch===SPACE){var prev=e.substring(lpos,col);var nxt=e.charAt(col+1);if(has_space){if(prev in operators){target.push(new Token(prev,Token.OPERATOR,col));}else{add_token(undefined,prev);goUp();var is_operator=(nxt in operators);if(is_operator&&operators[nxt].value===MINUS||!is_operator){target.push(new Token(MULT,Token.OPERATOR,col));}}has_space=false;}else{var f=e.substring(lpos,col);if(f in functions){has_space=true;add_function(f);addScope();}else if(f in operators){target.push(new Token(f,Token.OPERATOR,col));}else{add_token(undefined,f);var nxt=e.charAt(col+1);if(prev!==EMPTY_STRING&&nxt!==EMPTY_STRING&&!(prev in operators)&&!(nxt in operators))target.push(new Token(MULT,Token.OPERATOR,col));}}set_last_position(col);}}if(open_brackets.length){var b=open_brackets.pop();throw new ParityError('Missing closed bracket for bracket at '+(b[1]+1));}add_token(col);return tokens;};this.toRPN=function(tokens){var fn=tokens.type;var l=tokens.length,i;var output=[];var stack=[];var prefixes=[];var collapse=function collapse(target,destination){while(target.length){destination.push(target.pop());}};for(i=0;i<l;i++){var token=tokens[i];if(token.type!==Token.OPERATOR)break;if(!token.prefix)throw new OperatorError('Not a prefix operator');token.is_prefix=true;stack.push(token);}for(;i<l;i++){var e=tokens[i];if(e.type===Token.OPERATOR){var operator=e;if(operator.overloaded){var next=tokens[i+1];if(next&&next.type===Token.VARIABLE_OR_LITERAL){operator.postfix=false;operator.action=operator.overloadAction;operator.leftAssoc=operator.overloadLeftAssoc;}}while(stack.length){var last=stack[stack.length-1];if(!(last.precedence>operator.precedence||!operator.leftAssoc&&last.precedence===operator.precedence))break;output.push(stack.pop());}if((fn==='vector'||fn==='set')&&'vectorFn'in operator)operator.action=operator.vectorFn;if(operator.postfix){var previous=tokens[i-1];if(!previous)throw new OperatorError("Unexpected prefix operator '"+e.value+"'! at "+e.column);else if(previous.type===Token.OPERATOR){if(!previous.postfix)throw new OperatorError("Unexpected prefix operator '"+previous.value+"'! at "+previous.column);}}else{do{var next=tokens[i+1];var next_is_operator=next?next.type===Token.OPERATOR:false;if(next_is_operator){if(!next.prefix){throw new OperatorError('A prefix operator was expected at '+next.column);}next.is_prefix=true;prefixes.push(next);i++;}}while(next_is_operator);}if(operator.is_prefix)prefixes.push(operator);else stack.push(operator);while(prefixes.length){if(operator.leftAssoc||!operator.leftAssoc&&prefixes[prefixes.length-1].precedence>=operator.precedence)stack.push(prefixes.pop());else break;}}else if(e.type===Token.VARIABLE_OR_LITERAL){if(output.length===0)collapse(prefixes,stack);output.push(e);var last_on_stack=stack[stack.length-1];if(!last_on_stack||!last_on_stack.leftAssoc)collapse(prefixes,output);}else if(e.type===Token.FUNCTION){stack.push(e);}else if(e.type===Token.UNIT){output.push(e);}if(Array.isArray(e)){output.push(this.toRPN(e));if(e.type)output.push(new Token(e.type,Token.FUNCTION,e.column));}}collapse(stack,output);collapse(prefixes,output);return output;};this.parseRPN=function(rpn,substitutions){try{substitutions=substitutions||{};for(var x in substitutions){substitutions[x]=_.parse(substitutions[x],{});}if(Settings.PARSE2NUMBER){if(!('e'in substitutions))substitutions.e=new _Symbol(Settings.E);if(!('pi'in substitutions))substitutions.pi=new _Symbol(Settings.PI);}var Q=[];for(var i=0,l=rpn.length;i<l;i++){var e=rpn[i];if(Array.isArray(e)){e=this.parseRPN(e,substitutions);}if(e){if(e.type===Token.OPERATOR){if(e.is_prefix||e.postfix)Q.push(e.operation(Q.pop()));else{var b=Q.pop();var a=Q.pop();if(typeof a==='undefined')throw new OperatorError(e+' is not a valid postfix operator at '+e.column);var is_comma=e.action==='comma';if(a instanceof Set&&!is_comma)a=Vector.fromSet(a);if(b instanceof Set&&!is_comma)b=Vector.fromSet(b);this.callPeekers('pre_operator',a,b,e);var ans=_[e.action](a,b);this.callPeekers('post_operator',ans,a,b,e);Q.push(ans);}}else if(e.type===Token.FUNCTION){var args=Q.pop();var parent=args.parent;if(!(args instanceof Collection))args=Collection.create(args);var fn_name=e.value;var fn_args=args.getItems();this.callPeekers('pre_function',fn_name,fn_args);var ret=_.callfunction(fn_name,fn_args);this.callPeekers('post_function',ret,fn_name,fn_args);var last=Q[Q.length-1];var next=rpn[i+1];var next_is_comma=next&&next.type===Token.OPERATOR&&next.value===',';if(!next_is_comma&&ret instanceof Vector&&last&&last.elements&&!(last instanceof Collection)){var item=Q.pop();var getter=ret.elements[0];if(!getter.isConstant()){item.getter=getter;Q.push(item);Q.push(ret);}else if(getter instanceof Slice){Q.push(Vector.fromArray(item.elements.slice(getter.start,getter.end)));}else{var index=Number(getter);var il=item.elements.length;if(index<0)index=il+index;if(index<0||index>=il)throw new OutOfRangeError('Index out of range '+(e.column+1));var element=item.elements[index];item.getter=index;element.parent=item;Q.push(element);}}else{if(parent)ret.parent=parent;Q.push(ret);}}else{var subbed;var v=e.value;if(v in Settings.ALIASES)e=_.parse(Settings.ALIASES[e]);else if(e.type===Token.VARIABLE_OR_LITERAL)e=new _Symbol(v);else if(e.type===Token.UNIT){e=new _Symbol(v);e.isUnit=true;}if(v in _.CONSTANTS){subbed=e;e=new _Symbol(_.CONSTANTS[v]);}else if(v in substitutions&&v!==substitutions[v].value){subbed=e;e=substitutions[v].clone();}else if(v in VARS){subbed=e;e=VARS[v].clone();}if(subbed)e.subbed=subbed;Q.push(e);}}}return Q[0];}catch(error){throw new ParseError(error.message+': '+e.column);}};function Node(token){this.type=token.type;this.value=token.value;this.left=token.left;this.right=token.right;}Node.prototype.toString=function(){var left=this.left?this.left.toString()+'---':'';var right=this.right?'---'+this.right.toString():'';return left+'('+this.value+')'+right;};Node.prototype.toHTML=function(depth,indent){depth=depth||0;indent=typeof indent==='undefined'?4:indent;var tab=function tab(n){return' '.repeat(indent*n);};var html='';var left=this.left?tab(depth+1)+'<li>\n'+this.left.toHTML(depth+2,indent)+tab(depth+1)+'</li> \n':'';var right=this.right?tab(depth+1)+'<li>\n'+this.right.toHTML(depth+2,indent)+tab(depth+1)+'</li>\n':'';var html=tab(depth)+'<div class="'+this.type.toLowerCase()+'"><span>'+this.value+'</span></div>'+tab(depth)+'\n';if(left||right){html+=tab(depth)+'<ul>\n'+left+right+tab(depth)+'</ul>\n';}html+='';return html;};this.tree=function(tokens){var Q=[];for(var i=0;i<tokens.length;i++){var e=tokens[i];if(Array.isArray(e)){e=this.tree(e);Q.push(e);continue;}if(e.type===Token.OPERATOR){if(e.is_prefix||e.postfix){var location=e.is_prefix?'left':'right';var last=Q.pop();e=new Node(e);e[location]=last;Q.push(e);}else{e=new Node(e);e.right=Q.pop();e.left=Q.pop();Q.push(e);}}else if(e.type===Token.FUNCTION){e=new Node(e);var args=Q.pop();e.right=args;if(e.value==='object'){var last=Q[Q.length-1];if(last){while(last.right){last=last.right;}last.right=e;continue;}}Q.push(e);}else{Q.push(new Node(e));}}return Q[0];};this.parse=function(e,substitutions){e=prepare_expression(e);substitutions=substitutions||{};var tokens=this.tokenize(e);var rpn=this.toRPN(tokens);return this.parseRPN(rpn,substitutions);};this.toObject=function(expression_string){var objectify=function objectify(tokens){var output=[];for(var i=0,l=tokens.length;i<l;i++){var token=tokens[i];var v=token.value;if(token.type===Token.VARIABLE_OR_LITERAL){output.push(new _Symbol(v));}else if(token.type===Token.FUNCTION){i++;var f=_.symfunction(v,objectify(tokens[i]));f.isConversion=true;output.push(f);}else if(token.type===Token.OPERATOR){output.push(v);}else{output.push(objectify(token));}}return output;};return objectify(_.tokenize(expression_string));};var chunkAtCommas=function chunkAtCommas(arr){var j,k=0,chunks=[[]];for(var j=0,l=arr.length;j<l;j++){if(arr[j]===','){k++;chunks[k]=[];}else{chunks[k].push(arr[j]);}}return chunks;};var rem_brackets=function rem_brackets(str){return str.replace(/^\\left\((.+)\\right\)$/g,function(str,a){if(a)return a;return str;});};this.toTeX=function(expression_or_obj,opt){opt=opt||{};var obj=typeof expression_or_obj==='string'?this.toObject(expression_or_obj):expression_or_obj,TeX=[],cdot=typeof opt.cdot==='undefined'?'\\cdot':opt.cdot;if(isArray(obj)){var nobj=[],a,b;for(var i=0;i<obj.length;i++){a=obj[i];if(obj[i+1]==='^'){b=obj[i+2];nobj.push(LaTeX.braces(this.toTeX([a]))+'^'+LaTeX.braces(this.toTeX([b])));i+=2;}else nobj.push(a);}obj=nobj;}for(var i=0,l=obj.length;i<l;i++){var e=obj[i];if(e==='*'){e=cdot;}if(isSymbol(e)){if(e.group===FN){var fname=e.fname,f;if(fname===SQRT)f='\\sqrt'+LaTeX.braces(this.toTeX(e.args));else if(fname===ABS)f=LaTeX.brackets(this.toTeX(e.args),'abs');else if(fname===PARENTHESIS)f=LaTeX.brackets(this.toTeX(e.args),'parens');else if(fname===Settings.LOG10){f='\\'+Settings.LOG10_LATEX+'\\left( '+this.toTeX(e.args)+'\\right)';}else if(fname==='integrate'){var chunks=chunkAtCommas(e.args);var expr=LaTeX.braces(this.toTeX(chunks[0])),dx=this.toTeX(chunks[1]);f='\\int '+expr+'\\, d'+dx;}else if(fname==='defint'){var chunks=chunkAtCommas(e.args),expr=LaTeX.braces(this.toTeX(chunks[0])),dx=this.toTeX(chunks[3]),lb=this.toTeX(chunks[1]),ub=this.toTeX(chunks[2]);f='\\int\\limits_{'+lb+'}^{'+ub+'} '+expr+'\\, d'+dx;}else if(fname==='diff'){var chunks=chunkAtCommas(e.args);var dx='',expr=LaTeX.braces(this.toTeX(chunks[0]));if(chunks.length===1){var vars=[];for(j=0;j<chunks[0].length;j++){if(chunks[0][j].group===3){vars.push(chunks[0][j].value);}}vars.sort();dx=vars.length>0?'\\frac{d}{d '+vars[0]+'}':'\\frac{d}{d x}';}else if(chunks.length===2){dx='\\frac{d}{d '+chunks[1]+'}';}else{dx='\\frac{d^{'+chunks[2]+'}}{d '+this.toTeX(chunks[1])+'^{'+chunks[2]+'}}';}f=dx+'\\left('+expr+'\\right)';}else if(fname==='sum'||fname==='product'){var argSplit=[[],[],[],[]],j=0,i;for(i=0;i<e.args.length;i++){if(e.args[i]===','){j++;continue;}argSplit[j].push(e.args[i]);}f=(fname==='sum'?'\\sum_':'\\prod_')+LaTeX.braces(this.toTeX(argSplit[1])+' = '+this.toTeX(argSplit[2]));f+='^'+LaTeX.braces(this.toTeX(argSplit[3]))+LaTeX.braces(this.toTeX(argSplit[0]));}else if(fname==='limit'){var args=chunkAtCommas(e.args).map(function(x){if(Array.isArray(x))return _.toTeX(x.join(''));return _.toTeX(String(x));});f='\\lim_'+LaTeX.braces(args[1]+'\\to '+args[2])+' '+LaTeX.braces(args[0]);}else if(fname===FACTORIAL||fname===DOUBLEFACTORIAL)f=this.toTeX(e.args)+(fname===FACTORIAL?'!':'!!');else{f=LaTeX.latex(e);}TeX.push(f);}else TeX.push(LaTeX.latex(e));}else if(isArray(e)){TeX.push(LaTeX.brackets(this.toTeX(e)));}else{if(e==='/')TeX.push(LaTeX.frac(rem_brackets(TeX.pop()),rem_brackets(this.toTeX([obj[++i]]))));else TeX.push(e);}}return TeX.join(' ');};function parens(symbol){if(Settings.PARSE2NUMBER){return symbol;}return _.symfunction('parens',[symbol]);}function abs(symbol){if(symbol.multiplier.lessThan(0))symbol.multiplier.negate();if(symbol.isImaginary()){var re=symbol.realpart();var im=symbol.imagpart();if(re.isConstant()&&im.isConstant())return _sqrt(_.add(_.pow(re,new _Symbol(2)),_.pow(im,new _Symbol(2))));}else if(isNumericSymbol(symbol)||even(symbol.power)){return symbol;}if(symbol.isComposite()){var ms=[];symbol.each(function(x){ms.push(x.multiplier);});var gcd=Math2.QGCD.apply(null,ms);if(gcd.lessThan(0)){symbol.multiplier=symbol.multiplier.multiply(new Frac(-1));symbol.distributeMultiplier();}}return _.symfunction(ABS,[symbol]);}function factorial(symbol){var retval;if(isVector(symbol)){var V=new Vector();symbol.each(function(x,i){V.set(i-1,factorial(x));});return V;}if(isMatrix(symbol)){var M=new Matrix();symbol.each(function(x,i,j){M.set(i,j,factorial(x));});return M;}if(Settings.PARSE2NUMBER&&symbol.isConstant()){if(isInt(symbol)){retval=Math2.bigfactorial(symbol);}else{retval=Math2.gamma(symbol.multiplier.add(new Frac(1)).toDecimal());}retval=bigConvert(retval);return retval;}else if(symbol.isConstant()){var den=symbol.getDenom();if(den.equals(2)){var num=symbol.getNum();var a,b,c,n;if(!symbol.multiplier.isNegative()){n=_.add(num,new _Symbol(1)).multiplier.divide(new Frac(2));a=Math2.bigfactorial(new Frac(2).multiply(n));b=_.pow(new _Symbol(4),new _Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));}else{n=_.subtract(num.negate(),new _Symbol(1)).multiplier.divide(new Frac(2));a=_.pow(new _Symbol(-4),new _Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));b=Math2.bigfactorial(new Frac(2).multiply(n));}c=a.divide(b);return _.multiply(_.parse('sqrt(pi)'),new _Symbol(c));}}return _.symfunction(FACTORIAL,[symbol]);};function continued_fraction(symbol,n){var _symbol=evaluate(symbol);if(_symbol.isConstant()){var cf=Math2.continuedFraction(_symbol,n);var fractions=Vector.fromArray(cf.fractions.map(function(x){return new _Symbol(x);}));return Vector.fromArray([new _Symbol(cf.sign),new _Symbol(cf.whole),fractions]);}return _.symfunction('continued_fraction',arguments);};function mod(symbol1,symbol2){if(symbol1.isConstant()&&symbol2.isConstant()){var retval=new _Symbol(1);retval.multiplier=retval.multiplier.multiply(symbol1.multiplier.mod(symbol2.multiplier));return retval;}var r=_.divide(symbol1.clone(),symbol2.clone());if(isInt(r))return new _Symbol(0);return _.symfunction('mod',[symbol1,symbol2]);}function IF(condition,a,b){if(typeof condition!=='boolean')if(isNumericSymbol(condition))condition=!!Number(condition);if(condition)return a;return b;}function is_in(obj,item){if(isMatrix(obj)){for(var i=0,l=obj.rows();i<l;i++){for(var j=0,l2=obj.cols();j<l2;j++){var element=obj.elements[i][j];if(element.equals(item))return new _Symbol(1);}}}else if(obj.elements){for(var i=0,l=obj.elements.length;i<l;i++){if(obj.elements[i].equals(item))return new _Symbol(1);}}return new _Symbol(0);}function sinc(symbol){if(Settings.PARSE2NUMBER){if(symbol.isConstant()){return new _Symbol(Math2.sinc(symbol));}return _.parse(format('sin({0})/({0})',symbol));}return _.symfunction('sinc',[symbol]);}function exp(symbol){return _.parse(format('e^({0})',symbol));}function radians(symbol){return _.parse(format('({0})*pi/180',symbol));}function degrees(symbol){return _.parse(format('({0})*180/pi',symbol));}function nroots(symbol){var a,b;if(symbol.group===FN&&symbol.fname===''){a=_Symbol.unwrapPARENS(_.parse(symbol).toLinear());b=_.parse(symbol.power);}else if(symbol.group===P){a=_.parse(symbol.value);b=_.parse(symbol.power);}if(a&&b&&a.group===N&&b.group===N){var _roots=[];var parts=_Symbol.toPolarFormArray(symbol);var r=_.parse(a).abs().toString();var x=arg(a).toString();var n=b.multiplier.den.toString();var p=b.multiplier.num.toString();var formula="(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})";for(var i=0;i<n;i++){var t=evaluate(_.parse(format("(({0})+2*pi*({1}))/({2})",x,i,n))).multiplier.toDecimal();_roots.push(evaluate(_.parse(format(formula,r,n,Settings.IMAGINARY,t,p))));}return Vector.fromArray(_roots);}else if(symbol.isConstant(true)){var sign=symbol.sign();var x=evaluate(symbol.abs());var root=_.sqrt(x);var _roots=[root.clone(),root.negate()];if(sign<0)_roots=_roots.map(function(x){return _.multiply(x,_Symbol.imaginary());});}else{_roots=[_.parse(symbol)];}return Vector.fromArray(_roots);}function _sqrt(symbol){if(symbol.fname===''&&symbol.power.equals(1))symbol=symbol.args[0];var is_negative=symbol.multiplier.sign()<0;if(Settings.PARSE2NUMBER){if(symbol.isConstant()&&!is_negative){return new _Symbol(Math.sqrt(symbol.multiplier.toDecimal()));}else if(symbol.isImaginary()){return complex.sqrt(symbol);}}var img,retval,isConstant=symbol.isConstant();if(symbol.group===CB&&symbol.isLinear()){var m=_sqrt(_Symbol(symbol.multiplier));for(var s in symbol.symbols){var x=symbol.symbols[s];m=_.multiply(m,_sqrt(x));}retval=m;}else if(symbol.fname===SQRT){var s=symbol.args[0];var ms=symbol.multiplier;s.setPower(symbol.power.multiply(new Frac(0.25)));retval=s;if(!ms.equals(1))retval=_.multiply(_sqrt(_.parse(ms)),retval);}else if(!symbol.power.isInteger()){symbol.setPower(symbol.power.multiply(new Frac(0.5)));retval=symbol;}else{var sign=symbol.power.sign();symbol.power=symbol.power.abs();if(isConstant&&symbol.multiplier.lessThan(0)){img=_Symbol.imaginary();symbol.multiplier=symbol.multiplier.abs();}var q=symbol.multiplier.toDecimal(),qa=Math.abs(q),t=Math.sqrt(qa);var m;if(isInt(t)){m=new _Symbol(t);}else if(isInt(q)){var factors=Math2.ifactor(q);var tw=1;for(var x in factors){var n=factors[x],nn=n-n%2;if(nn){var w=Math.pow(x,nn);tw*=Math.pow(x,nn/2);q/=w;}}m=_.multiply(_.symfunction(SQRT,[new _Symbol(q)]),new _Symbol(tw));}else{var c=[new _Symbol(symbol.multiplier.num),new _Symbol(symbol.multiplier.den)];var r=[new _Symbol(1),new _Symbol(1)];var sq=[new _Symbol(1),new _Symbol(1)];for(var i=0;i<2;i++){var n=c[i];pfactor(n).each(function(x){x=_Symbol.unwrapPARENS(x);var b=x.clone().toLinear();var p=Number(x.power);var rem=p%2;var w=(p-rem)/2;r[i]=_.multiply(r[i],_.pow(b,new _Symbol(w)));sq[i]=_.multiply(sq[i],_sqrt(_.pow(b,new _Symbol(rem))));});}m=_.divide(_.multiply(r[0],sq[0]),_.multiply(r[1],sq[1]));}symbol=symbol.toUnitMultiplier(true);if(symbol.isOne()){retval=symbol;}else if(even(symbol.power.toString())){retval=_.pow(symbol.clone(),new _Symbol(0.5));}else{retval=_.symfunction(SQRT,[symbol]);}if(sign<0)retval.power.negate();if(m)retval=_.multiply(m,retval);if(img)retval=_.multiply(img,retval);}if(is_negative&&Settings.PARSE2NUMBER)return _.parse(retval);return retval;}function scientific(symbol,sigfigs){symbol.scientific=sigfigs||10;return symbol;}function nthroot(num,p,prec,asbig){if(typeof asbig==='undefined')asbig=true;prec=prec||25;if(!isSymbol(p))p=_.parse(p);if(isInt(num)&&p.isConstant()){var sign=num.sign(),x;num=abs(num);var idx=num+'-'+p;if(idx in Settings.CACHE.roots){x=new bigInt(Settings.CACHE.roots[idx]);if(!even(p))x=x.multiply(sign);}else{if(num<18446744073709551616)x=Frac.create(Math.pow(num,1/p));else x=Math2.nthroot(num,p);}if(isInt(x)||Settings.PARSE2NUMBER){if(asbig)return new _Symbol(x);return new _Symbol(x.toDecimal(prec));}}if(Number(p)===2)return _.sqrt(num);return _.symfunction('nthroot',arguments);}function pfactor(symbol){if(symbol.greaterThan(9.999999999998891e+41))return symbol;if(symbol.equals(Math.PI))return new _Symbol(Math.PI);symbol=evaluate(symbol.clone());if(symbol.isConstant()){var retval=new _Symbol(1);var m=symbol.toString();if(isInt(m)){var factors=Math2.ifactor(m);for(var factor in factors){var p=factors[factor];retval=_.multiply(retval,_.symfunction('parens',[new _Symbol(factor).setPower(new Frac(p))]));}}else{var n=pfactor(new _Symbol(symbol.multiplier.num));var d=pfactor(new _Symbol(symbol.multiplier.den));retval=_.multiply(_.symfunction('parens',[n]),_.symfunction('parens',[d]).invert());}}else retval=_.symfunction('pfactor',arguments);return retval;}function realpart(symbol){return symbol.realpart();}function imagpart(symbol){return symbol.imagpart();}function conjugate(symbol){var re=symbol.realpart();var im=symbol.imagpart();return _.add(re,_.multiply(im.negate(),_Symbol.imaginary()));}function arg(symbol){var re=symbol.realpart();var im=symbol.imagpart();if(re.isConstant()&&im.isConstant())return new _Symbol(Math.atan2(im,re));return _.symfunction('atan2',[im,re]);}function arg(symbol){var re=symbol.realpart();var im=symbol.imagpart();if(re.isConstant()&&im.isConstant()){if(im.equals(0)&&re.equals(-1)){return _.parse('pi');}else if(im.equals(1)&&re.equals(0)){return _.parse('pi/2');}else if(im.equals(1)&&re.equals(1)){return _.parse('pi/4');}return new _Symbol(Math.atan2(im,re));}return _.symfunction('atan2',[im,re]);}function polarform(symbol){var p,r,e,theta;p=_Symbol.toPolarFormArray(symbol);theta=p[1];r=p[0];e=_.parse(format('e^({0}*({1}))',Settings.IMAGINARY,theta));return _.multiply(r,e);}function rectform(symbol){var original=symbol.clone();try{var f,p,q,s,h,d,n;f=decompose_fn(symbol,'e',true);p=_.divide(f.x.power,_Symbol.imaginary());q=evaluate(trig.tan(p));s=_.pow(f.a,new _Symbol(2));d=q.getDenom(true);n=q.getNum();h=_Symbol.hyp(n,d);if(h.equals(f.a)){return _.add(d,_.multiply(_Symbol.imaginary(),n));}else{return original;}}catch(e){return original;}}function symMinMax(f,args){args.map(function(x){x.numVal=evaluate(x).multiplier;});var l,a,b,a_val,b_val;while(true){l=args.length;if(l<2)return args[0];a=args.pop();b=args[l-2];if(f==='min'?a.numVal<b.numVal:a.numVal>b.numVal){args.pop();args.push(a);}}}function max(){var args=[].slice.call(arguments);if(allSame(args))return args[0];if(allNumbers(args))return new _Symbol(Math.max.apply(null,args));if(Settings.SYMBOLIC_MIN_MAX&&allConstants(args))return symMinMax('max',args);return _.symfunction('max',args);}function min(){var args=[].slice.call(arguments);if(allSame(args))return args[0];if(allNumbers(args))return new _Symbol(Math.min.apply(null,args));if(Settings.SYMBOLIC_MIN_MAX&&allConstants(args))return symMinMax('min',args);return _.symfunction('min',args);}function sign(x){if(x.isConstant(true))return new _Symbol(Math.sign(evaluate(x)));return _.symfunction('sign',arguments);}function sort(symbol,opt){opt=opt?opt.toString():'asc';var getval=function getval(e){if(e.group===N)return e.multiplier;if(e.group===FN){if(e.fname==='')return getval(e.args[0]);return e.fname;}if(e.group===S)return e.power;return e.value;};var symbols=isVector(symbol)?symbol.elements:symbol.collectSymbols();return new Vector(symbols.sort(function(a,b){var aval=getval(a),bval=getval(b);if(opt==='desc')return bval-aval;return aval-bval;}));}function _log(symbol,base){if(symbol.equals(1)){return new _Symbol(0);}var retval;if(symbol.fname===SQRT&&symbol.multiplier.equals(1)){return _.divide(_log(symbol.args[0]),new _Symbol(2));}if(symbol.equals(0)){throw new UndefinedError(Settings.LOG+'(0) is undefined!');}if(symbol.isImaginary()){return complex.evaluate(symbol,Settings.LOG);}if(symbol.isConstant()&&typeof base!=='undefined'&&base.isConstant()){var log_sym=Math.log(symbol);var log_base=Math.log(base);retval=new _Symbol(log_sym/log_base);}else if(symbol.group===EX&&symbol.power.multiplier.lessThan(0)||symbol.power.toString()==='-1'){symbol.power.negate();retval=_log(symbol).negate();}else if(symbol.value==='e'&&symbol.multiplier.equals(1)){var p=symbol.power;retval=isSymbol(p)?p:new _Symbol(p);}else if(symbol.group===FN&&symbol.fname==='exp'){var s=symbol.args[0];if(symbol.multiplier.equals(1))retval=_.multiply(s,new _Symbol(symbol.power));else retval=_.symfunction(Settings.LOG,[symbol]);}else if(Settings.PARSE2NUMBER&&isNumericSymbol(symbol)){var img_part;if(symbol.multiplier.lessThan(0)){symbol.negate();img_part=_.multiply(new _Symbol(Math.PI),new _Symbol('i'));}retval=new _Symbol(Math.log(symbol.multiplier.toDecimal()));if(img_part)retval=_.add(retval,img_part);}else{var s;if(!symbol.power.equals(1)){s=symbol.group===EX?symbol.power:new _Symbol(symbol.power);symbol.toLinear();}if(arguments.length>1&&allSame(arguments))retval=new _Symbol(1);else retval=_.symfunction(Settings.LOG,arguments);if(s)retval=_.multiply(s,retval);}return retval;}function round(x,s){var sIsConstant=s&&s.isConstant()||typeof s==='undefined';if(x.isConstant()&&sIsConstant){var v,e,exp,retval;v=x;if(s&&s.lessThan(0)){s=abs(s);e=Number(x).toExponential().toString().split('e');v=e[0];exp=e[1];}retval=new _Symbol(nround(v,Number(s||0)));return _.multiply(retval,_.pow(new _Symbol(10),new _Symbol(exp||0)));}return _.symfunction('round',arguments);}function getQuadrant(m){var v=m%2,quadrant;if(v<0)v=2+v;if(v>=0&&v<=0.5)quadrant=1;else if(v>0.5&&v<=1)quadrant=2;else if(v>1&&v<=1.5)quadrant=3;else quadrant=4;return quadrant;}function bigConvert(n){if(!isFinite(n)){var sign=Math.sign(n);var r=new _Symbol(String(Math.abs(n)));r.multiplier=r.multiplier.multiply(new Frac(sign));return r;}if(isSymbol(n))return n;if(typeof n==='number'){try{n=Frac.simple(n);}catch(e){n=new Frac(n);}}var symbol=new _Symbol(0);symbol.multiplier=n;return symbol;};function clean(symbol){var g=symbol.group,retval;if(g===CP){var num=symbol.getNum(),den=symbol.getDenom()||new _Symbol(1),p=Number(symbol.power),factor=new _Symbol(1);if(Math.abs(p)===1){den.each(function(x){if(x.group===CB){factor=_.multiply(factor,clean(x.getDenom()));}else if(x.power.lessThan(0)){factor=_.multiply(factor,clean(x.clone().toUnitMultiplier()));}});var new_den=new _Symbol(0);den.each(function(x){new_den=_.add(_.divide(x,factor.clone()),new_den);});factor.invert();var new_num;if(num.isComposite()){new_num=new _Symbol(0);num.each(function(x){new_num=_.add(_.multiply(clean(x),factor.clone()),new_num);});}else new_num=_.multiply(factor,num);retval=_.divide(new_num,new_den);}}else if(g===CB){retval=new _Symbol(1);symbol.each(function(x){retval=_.multiply(retval,_.clean(x));});}else if(g===FN){if(symbol.args.length===1&&symbol.args[0].isConstant())retval=block('PARSE2NUMBER',function(){return _.parse(symbol);},true);}if(!retval)retval=symbol;return retval;}function expand(symbol){if(symbol.group===FN&&symbol.fname===''){return _.expand(symbol.args[0]);}if(!symbol.symbols)return symbol;var original=symbol.clone();try{if(!symbol.symbols)return symbol;for(var s in symbol.symbols){var x=symbol.symbols[s];symbol.symbols[s]=expand(x);}symbol=_.parse(symbol);var p=symbol.power,m=symbol.multiplier.clone(),pn=Number(p);if(isInt(pn)&&pn>0&&symbol.isComposite()){var f=new _Symbol(0);for(var x in symbol.symbols){var sym=symbol.symbols[x];if(sym.power.greaterThan(1))sym=_.expand(sym);f=_.add(f,sym);}var n=pn-1;var result=f.clone();for(var i=0;i<n;i++){var t=new _Symbol(0);for(var x in f.symbols){var a=f.symbols[x];for(var y in result.symbols){var b=_.multiply(a.clone(),result.symbols[y]);if(b.group===CB)b=_.expand(b);t=_.add(t,b);}};result=t;}if(!m.equals(1)){for(var s in result.symbols){var x=result.symbols[s];x.multiplier=x.multiplier.multiply(m);if(x.isComposite())x.distributeMultiplier();symbol.symbols[s]=x;}}return result;}else if(symbol.group===CB){var hascomposites=false,sp=symbol.power.clone(),sign=symbol.power.sign();for(var x in symbol.symbols){var sub=symbol.symbols[x];if(sub.isComposite()){hascomposites=true;break;}if(isSymbol(sub.power)||isSymbol(sp)){sub.power=_.multiply(sub.power,_Symbol(sp));sub.group=EX;}else sub.power=sub.power.multiply(sp);}symbol.toLinear();symbol=_.parse(symbol.text());if(!hascomposites)return symbol;var result=new _Symbol(0);var composites=[],non_composites=new _Symbol(symbol.multiplier);for(var s in symbol.symbols){var x=symbol.symbols[s];if(x.group===EX)continue;if(x.isComposite()){var p=x.power,isDenom=false;;if(isInt(p)){if(p<0){x.power.negate();isDenom=true;}}if(isDenom){x.power.negate();non_composites=_.multiply(non_composites,x);}else composites.push(x);}else non_composites=_.multiply(non_composites,x);}result=composites.pop();while(composites.length){var s=composites.pop();var t=new _Symbol(0);result.each(function(x){s.each(function(y){var prod=_.multiply(x.clone(),y.clone());t=_.add(t,prod);});});result=t;}var finalResult=new _Symbol(0);result.each(function(x){finalResult=_.add(finalResult,expand(_.multiply(non_composites,x)));});finalResult.power=finalResult.power.multiply(sp.abs());symbol=_.expand(finalResult);if(sign<0)symbol.invert();}}catch(e){return original;}return symbol;}function imatrix(n){return Matrix.identity(n);}function vecget(vector,index){if(index.isConstant()&&isInt(index))return vector.elements[index];return _.symfunction('vecget',arguments);}function vectrim(vector,tolerance){tolerance=typeof tolerance==='undefined'?1e-14:tolerance;vector=vector.clone();tolerance=Number(tolerance);vector.elements.sort(function(a,b){return b.group-a.group;});vector.elements=removeDuplicates(vector.elements,function(a,b){var diff=Number(_.subtract(evaluate(a),evaluate(b)).abs());return diff<=tolerance;});return vector;}function vecset(vector,index,value){if(!index.isConstant)return _.symfunction('vecset',arguments);vector.elements[index]=value;return vector;}function matget(matrix,i,j){if(i.isConstant()&&j.isConstant())return matrix.elements[i][j];return _.symfunction('matget',arguments);}function matgetrow(matrix,i){if(i.isConstant())return new Matrix(matrix.elements[i]);return _.symfunction('matgetrow',arguments);}function matsetrow(matrix,i,x){if(!i.isConstant())return _.symfunction('matsetrow',arguments);if(matrix.elements[i].length!==x.elements.length)throw new DimensionError('Matrix row must match row dimensions!');var M=matrix.clone();M.elements[i]=x.clone().elements;return M;}function matgetcol(matrix,col_index){if(!col_index.isConstant())return _.symfunction('matgetcol',arguments);col_index=Number(col_index);var M=Matrix.fromArray([]);matrix.each(function(x,i,j){if(j===col_index){M.elements.push([x.clone()]);}});return M;}function matsetcol(matrix,j,col){if(!j.isConstant())return _.symfunction('matsetcol',arguments);j=Number(j);if(matrix.rows()!==col.elements.length)throw new DimensionError('Matrix columns must match number of columns!');col.each(function(x,i){matrix.set(i-1,j,x.elements[0].clone());});return matrix;}function matset(matrix,i,j,value){matrix.elements[i][j]=value;return matrix;}function vector(){return new Vector([].slice.call(arguments));}function matrix(){return Matrix.fromArray(arguments);}function set(){return Set.fromArray(arguments);}function determinant(symbol){if(isMatrix(symbol)){return symbol.determinant();}return symbol;}function size(symbol){var retval;if(isMatrix(symbol))retval=[new _Symbol(symbol.cols()),new _Symbol(symbol.rows())];else if(isVector(symbol)||isSet(symbol))retval=new _Symbol(symbol.elements.length);else err('size expects a matrix or a vector');return retval;}function dot(vec1,vec2){if(isVector(vec1)&&isVector(vec2))return vec1.dot(vec2);err('function dot expects 2 vectors');}function cross(vec1,vec2){if(isVector(vec1)&&isVector(vec2))return vec1.cross(vec2);err('function cross expects 2 vectors');}function transpose(mat){if(isMatrix(mat))return mat.transpose();err('function transpose expects a matrix');}function invert(mat){if(isMatrix(mat))return mat.invert();err('invert expects a matrix');}function union(set1,set2){return set1.union(set2);}function intersection(set1,set2){return set1.intersection(set2);}function contains(set1,e){return set1.contains(e);}function difference(set1,set2){return set1.difference(set2);}function intersects(set1,set2){return new _Symbol(Number(set1.intersects(set2)));}function is_subset(set1,set2){return new _Symbol(Number(set1.is_subset(set2)));}function print(){arguments2Array(arguments).map(function(x){console.log(x.toString());});}function testSQRT(symbol){if(!isSymbol(symbol.power)&&symbol.power.absEquals(0.5)){var sign=symbol.power.sign();var retval=_sqrt(symbol.group===P?new _Symbol(symbol.value):symbol.toLinear());if(sign<0)retval.invert();return retval;}return symbol;}function testPow(symbol){if(symbol.group===P){var v=symbol.value;var fct=primeFactors(v)[0];if(!fct){warn('Unable to compute prime factors. This should not happen. Please review and report.');return symbol;}var n=new Frac(Math.log(v)/Math.log(fct)),p=n.multiply(symbol.power);if(p.den>symbol.power.den)return symbol;if(isInt(p))symbol=_Symbol(Math.pow(fct,p));else symbol=new _Symbol(fct).setPower(p);}return symbol;}this.expand=expand;this.round=round;this.clean=clean;this.sqrt=_sqrt;this.log=_log;this.nthroot=nthroot;this.arg=arg;this.conjugate=conjugate;this.imagpart=imagpart;this.realpart=realpart;this.addPreprocessor=function(name,action,order,shift_cells){var names=preprocessors.names;var actions=preprocessors.actions;if(typeof action!=='function')throw new PreprocessorError('Incorrect parameters. Function expected!');if(!order){names.push(name);actions.push(action);}else{if(shift_cells){names.splice(order,0,name);actions.splice(order,0,action);}else{names[order]=name;actions[order]=action;}}};this.getPreprocessors=function(){var preprocessors={};for(var i=0,l=preprocessors.names.length;i<l;i++){var name=preprocessors.names[i];preprocessors[name]={order:i,action:preprocessors.actions[i]};}return preprocessors;};this.removePreprocessor=function(name,shift_cells){var i=preprocessors.names.indexOf(name);if(shift_cells){_remove(preprocessors.names,i);_remove(preprocessors.actions,i);}else{preprocessors.names[i]=undefined;preprocessors.actions[i]=undefined;}};this.mapped_function=function(){var subs={},params=this.params;for(var i=0;i<params.length;i++){subs[params[i]]=arguments[i];}return _.parse(this.body,subs);};this.add=function(a,b){var aIsSymbol=isSymbol(a),bIsSymbol=isSymbol(b);if(aIsSymbol&&bIsSymbol){if(a.unit||b.unit){return _.Unit.add(a,b);}if(a.isInfinity||b.isInfinity){var aneg=a.multiplier.lessThan(0),bneg=b.multiplier.lessThan(0);if(a.isInfinity&&b.isInfinity&&aneg!==bneg){throw new UndefinedError('('+a+')+('+b+') is not defined!');}var inf=_Symbol.infinity();if(bneg)inf.negate();return inf;}if(a.isComposite()&&a.isLinear()&&b.isComposite()&&b.isLinear()){a.distributeMultiplier();b.distributeMultiplier();}if(a.multiplier.equals(0))return b;if(b.multiplier.equals(0))return a;if(a.isConstant()&&b.isConstant()&&Settings.PARSE2NUMBER){var result=new _Symbol(a.multiplier.add(b.multiplier).toDecimal(Settings.PRECISION));return result;}var g1=a.group,g2=b.group,ap=a.power.toString(),bp=b.power.toString();if(g1<g2||g1===g2&&ap>bp&&bp>0){return this.add(b,a);}if(g1===CB&&g2===PL&&a.value===b.value){var t=a;a=b;b=t;g1=a.group;g2=b.group;ap=a.power.toString();bp=b.power.toString();}var powEQ=ap===bp,v1=a.value,v2=b.value,aIsComposite=a.isComposite(),bIsComposite=b.isComposite(),h1,h2,result;if(aIsComposite)h1=_text(a,'hash');if(bIsComposite)h2=_text(b,'hash');if(g1===CP&&g2===CP&&b.isLinear()&&!a.isLinear()&&h1!==h2){return this.add(b,a);}if(g1===PL&&g2===PL){v1=h1;v2=h2;}var PN=g1===P&&g2===N,PNEQ=a.value===b.multiplier.toString(),valEQ=v1===v2||h1===h2&&h1!==undefined||PN&&PNEQ;if(valEQ&&powEQ&&g1===g2){if(PN)b=b.convert(P);if(g1===PL&&(g2===S||g2===P)){a.distributeMultiplier();result=a.attach(b);}else{result=a;if(a.multiplier.isOne()&&b.multiplier.isOne()&&g1===CP&&a.isLinear()&&b.isLinear()){for(var s in b.symbols){var x=b.symbols[s];result.attach(x);}}else result.multiplier=result.multiplier.add(b.multiplier);}}else if(valEQ&&g1!==PL){if(g1===CP&&g2===PL){b.insert(a);result=b;}else{result=_Symbol.shell(PL).attach([a,b]);result.value=g1===PL?h1:v1;}}else if(aIsComposite&&a.isLinear()){var canIterate=g1===g2,bothPL=g1===PL&&g2===PL;if(bothPL)canIterate=a.value===b.value;a.distributeMultiplier();if(b.isComposite()&&b.isLinear()&&canIterate){b.distributeMultiplier();for(var s in b.symbols){var x=b.symbols[s];a.attach(x);}result=a;}else if(bothPL&&a.value!==h2||g1===PL&&!valEQ){result=_Symbol.shell(CP).attach([a,b]);result.updateHash();}else{result=a.attach(b);}}else{if(g1===FN&&a.fname===SQRT&&g2!==EX&&b.power.equals(0.5)){var m=b.multiplier.clone();b=_sqrt(b.toUnitMultiplier().toLinear());b.multiplier=m;}if(a.length===2&&b.length===2&&even(a.power)&&even(b.power)){result=_.add(expand(a),expand(b));}else{result=_Symbol.shell(CP).attach([a,b]);result.updateHash();}}if(result.multiplier.equals(0))result=new _Symbol(0);if(result.length===1){var m=result.multiplier;result=firstObject(result.symbols);result.multiplier=result.multiplier.multiply(m);}return result;}else{if(bIsSymbol&&!aIsSymbol){var t=a;a=b;b=t;t=bIsSymbol;bIsSymbol=aIsSymbol;aIsSymbol=t;}var bIsMatrix=isMatrix(b);if(aIsSymbol&&bIsMatrix){b.eachElement(function(e){return _.add(a.clone(),e);});}else{if(isMatrix(a)&&bIsMatrix){b=a.add(b);}else if(aIsSymbol&&isVector(b)){b.each(function(x,i){i--;b.elements[i]=_.add(a.clone(),b.elements[i]);});}else{if(isVector(a)&&isVector(b)){b.each(function(x,i){i--;b.elements[i]=_.add(a.elements[i],b.elements[i]);});}else if(isVector(a)&&isMatrix(b)){return _.add(b,a);}else if(isMatrix(a)&&isVector(b)){if(b.elements.length===a.rows()){var M=new Matrix(),l=a.cols();b.each(function(e,i){var row=[];for(var j=0;j<l;j++){row.push(_.add(a.elements[i-1][j].clone(),e.clone()));}M.elements.push(row);});return M;}else err('Dimensions must match!');}}}return b;}};this.subtract=function(a,b){var aIsSymbol=aIsSymbol=isSymbol(a),bIsSymbol=isSymbol(b),t;if(aIsSymbol&&bIsSymbol){if(a.unit||b.unit){return _.Unit.subtract(a,b);}return this.add(a,b.negate());}else{if(bIsSymbol&&isVector(a)){b=a.map(function(x){return _.subtract(x,b.clone());});}else if(aIsSymbol&&isVector(b)){b=b.map(function(x){return _.subtract(a.clone(),x);});}else if(isVector(a)&&isVector(b)){if(a.dimensions()===b.dimensions())b=a.subtract(b);else _.error('Unable to subtract vectors. Dimensions do not match.');}else if(isMatrix(a)&&isVector(b)){if(b.elements.length===a.rows()){var M=new Matrix(),l=a.cols();b.each(function(e,i){var row=[];for(var j=0;j<l;j++){row.push(_.subtract(a.elements[i-1][j].clone(),e.clone()));}M.elements.push(row);});return M;}else err('Dimensions must match!');}else if(isVector(a)&&isMatrix(b)){var M=b.clone().negate();return _.add(M,a);}else if(isMatrix(a)&&isMatrix(b)){b=a.subtract(b);}return b;}};this.multiply=function(a,b){var aIsSymbol=isSymbol(a),bIsSymbol=isSymbol(b);if(aIsSymbol&&b instanceof Collection){b.elements.push(a);return b;}if(aIsSymbol&&bIsSymbol){if(b.isUnit){var result=a.clone();a.unit=b;return result;}if(a.unit||b.unit){return _.Unit.multiply(a,b);}if(a.isInfinity||b.isInfinity){if(a.equals(0)||b.equals(0))throw new UndefinedError(a+'*'+b+' is undefined!');if(b.power.lessThan(0)){if(!a.isInfinity){return new _Symbol(0);}else{throw new UndefinedError('Infinity/Infinity is not defined!');}}var sign=a.multiplier.multiply(b.multiplier).sign(),inf=_Symbol.infinity();if(a.isConstant()||b.isConstant()||a.isInfinity&&b.isInfinity){if(sign<0)inf.negate();return inf;}}if(a.isConstant()&&b.isConstant()&&Settings.PARSE2NUMBER){var t=new bigDec(a.multiplier.toDecimal()).times(new bigDec(b.multiplier.toDecimal())).toFixed();var retval=new _Symbol(t);return retval;}if(a.isOne()){return b.clone();}if(b.isOne()){return a.clone();}if(a.multiplier.equals(0)||b.multiplier.equals(0))return new _Symbol(0);if(b.group>a.group&&!(b.group===CP))return this.multiply(b,a);if(a.group===CB&&b.group===PL&&a.value===b.value){var t=a;a=b;b=t;}var g1=a.group,g2=b.group,bnum=b.multiplier.num,bden=b.multiplier.den;if(g1===FN&&a.fname===SQRT&&!b.isConstant()&&a.args[0].value===b.value&&!a.args[0].multiplier.lessThan(0)){var a_pow=a.power;a=a.args[0].clone();a.setPower(new Frac(0.5).multiply(a_pow));g1=a.group;}else if(g1===FN&&a.fname===SQRT&&a.multiplier.equals(1)&&a.power.equals(-1)&&b.isConstant()&&a.args[0].equals(b)){a=_.symfunction(SQRT,[b.clone()]);b=new _Symbol(1);};var v1=a.value,v2=b.value,sign=new Frac(a.sign()),ONN=g1===P&&g2===N&&b.multiplier.equals(a.value),m=ONN?new Frac(1).multiply(a.multiplier).abs():a.multiplier.multiply(b.multiplier).abs(),result=a.clone().toUnitMultiplier();b=b.clone().toUnitMultiplier(true);if(g1===FN&&g2===FN){var u=a.args[0].clone();var v=b.args[0].clone();if(a.fname===SQRT&&b.fname===SQRT&&a.isLinear()&&b.isLinear()){var q=_.divide(u,v).invert();if(q.gt(1)&&isInt(q)){result=_.multiply(a.args[0].clone(),_sqrt(q.clone()));b=new _Symbol(1);}}if(a.fname===FACTORIAL&&b.fname===FACTORIAL){if(a.power.equals(1)&&b.power.equals(-1)&&_.subtract(v.clone(),u.clone()).equals(1)){if(u.isConstant(true)&&v.isConstant(true)){var _a=evaluate(a.clone());var _b=evaluate(b.clone());result=_.multiply(_a,_b);}else{result=_.divide(u,v);}b=new _Symbol(1);}}}if(v1===v2&&g1===PL&&g1===g2){v1=a.text('hash');v2=b.text('hash');}if(g2===EX&&b.previousGroup===PL&&g1===PL){v1=_text(a,'hash',EX);}if((v1===v2||ONN)&&!(g1===PL&&(g2===S||g2===P||g2===FN))&&!(g1===PL&&g2===CB)){var p1=a.power,p2=b.power,isSymbolP1=isSymbol(p1),isSymbolP2=isSymbol(p2),toEX=isSymbolP1||isSymbolP2;if(g1===PL&&g2!==PL&&b.previousGroup!==PL&&p1.equals(1)){result=new _Symbol(0);a.each(function(x){result=_.add(result,_.multiply(x,b.clone()));},true);}else{result.power=toEX?_.add(!isSymbol(p1)?new _Symbol(p1):p1,!isSymbol(p2)?new _Symbol(p2):p2):g1===N?p1:p1.add(p2);if(result.power.equals(0))result=result.convert(N);if(toEX)result.convert(EX);if(a.imaginary&&b.imaginary){var isEven=even(result.power%2);if(isEven){result=new _Symbol(1);m.negate();}}if(result.group!==EX&&result.previousGroup)result.previousGroup=undefined;result.multiplier=result.multiplier.multiply(b.multiplier);}}else if(g1===CB&&a.isLinear()){if(g2===CB)b.distributeExponent();if(g2===CB&&b.isLinear()){for(var s in b.symbols){var x=b.symbols[s];result=result.combine(x);}result.multiplier=result.multiplier.multiply(b.multiplier);}else{result.combine(b);}}else{if(g1!==N){if(g1===CB){result.distributeExponent();result.combine(b);}else if(!b.isOne()){var bm=b.multiplier.clone();b.toUnitMultiplier();result=_Symbol.shell(CB).combine([result,b]);result.multiplier=result.multiplier.multiply(bm);}}else{result=b.clone().toUnitMultiplier();}}if(result.group===P){var logV=Math.log(result.value),n1=Math.log(bnum)/logV,n2=Math.log(bden)/logV,ndiv=m.num/bnum,ddiv=m.den/bden;if(n1!==0&&isInt(n1)&&isInt(ndiv)){result.power=result.power.add(new Frac(n1));m.num/=bnum;}if(n2!==0&&isInt(n2)&&isInt(ddiv)){result.power=result.power.subtract(new Frac(n2));m.den/=bden;}}if(result.length===1){var t=result.multiplier;result=firstObject(result.symbols);result.multiplier=result.multiplier.multiply(t);}var ps=result.power.toString();if(even(ps)&&result.fname===SQRT){sign=sign*result.sign();var p=result.power;result=result.args[0];result=_.multiply(new _Symbol(m),_.pow(result,new _Symbol(p.divide(new Frac(2)))));if(sign<0)result.negate();}else{result.multiplier=result.multiplier.multiply(m).multiply(sign);if(result.group===CP&&result.isImaginary())result.distributeMultiplier();}if(result.group===P&&isInt(result.power.toDecimal()))result=result.convert(N);return result;}else{if(bIsSymbol&&!aIsSymbol){t=a;a=b;b=t;t=bIsSymbol;bIsSymbol=aIsSymbol;aIsSymbol=t;}var isMatrixB=isMatrix(b),isMatrixA=isMatrix(a);if(aIsSymbol&&isMatrixB){b.eachElement(function(e){return _.multiply(a.clone(),e);});}else{if(isMatrixA&&isMatrixB){b=a.multiply(b);}else if(aIsSymbol&&isVector(b)){b.each(function(x,i){i--;b.elements[i]=_.multiply(a.clone(),b.elements[i]);});}else{if(isVector(a)&&isVector(b)){b.each(function(x,i){i--;b.elements[i]=_.multiply(a.elements[i],b.elements[i]);});}else if(isVector(a)&&isMatrix(b)){return this.multiply(b,a);}else if(isMatrix(a)&&isVector(b)){if(b.elements.length===a.rows()){var M=new Matrix(),l=a.cols();b.each(function(e,i){var row=[];for(var j=0;j<l;j++){row.push(_.multiply(a.elements[i-1][j].clone(),e.clone()));}M.elements.push(row);});return M;}else err('Dimensions must match!');}}}return b;}};this.divide=function(a,b){var aIsSymbol=isSymbol(a),bIsSymbol=isSymbol(b);if(aIsSymbol&&bIsSymbol){if(a.unit||b.unit){return _.Unit.divide(a,b);}var result;if(b.equals(0))throw new DivisionByZero('Division by zero not allowed!');if(a.isConstant()&&b.isConstant()){result=a.clone();result.multiplier=result.multiplier.divide(b.multiplier);}else{b.invert();result=_.multiply(a,b);}return result;}else{var isVectorA=isVector(a),isVectorB=isVector(b);if(aIsSymbol&&isVectorB){b=b.map(function(x){return _.divide(a.clone(),x);});}else if(isVectorA&&bIsSymbol){b=a.map(function(x){return _.divide(x,b.clone());});}else if(isVectorA&&isVectorB){if(a.dimensions()===b.dimensions()){b=b.map(function(x,i){return _.divide(a.elements[--i],x);});}else _.error('Cannot divide vectors. Dimensions do not match!');}else{var isMatrixA=isMatrix(a),isMatrixB=isMatrix(b);if(isMatrixA&&bIsSymbol){a.eachElement(function(x){return _.divide(x,b.clone());});b=a;}else if(isMatrixA&&isMatrixB){if(a.rows()===b.rows()&&a.cols()===b.cols()){a.eachElement(function(x,i,j){return _.divide(x,b.elements[i][j]);});}else{_.error('Dimensions do not match!');}}else if(isMatrixA&&isVectorB){if(a.cols()===b.dimensions()){a.eachElement(function(x,i,j){return _.divide(x,b.elements[i].clone());});b=a;}else{_.error('Unable to divide matrix by vector.');}}}return b;}};this.pow=function(a,b){var aIsSymbol=isSymbol(a),bIsSymbol=isSymbol(b);if(aIsSymbol&&bIsSymbol){if(a.unit||b.unit){return _.Unit.pow(a,b);}if(a.isInfinity||b.isInfinity){if(a.isInfinity&&b.isInfinity)throw new UndefinedError('('+a+')^('+b+') is undefined!');if(a.isConstant()&&b.isInfinity){if(a.equals(0)){if(b.lessThan(0))throw new UndefinedError('0^Infinity is undefined!');return new _Symbol(0);}if(a.equals(1))throw new UndefinedError('1^'+b.toString()+' is undefined!');if(b.lessThan(0))return new _Symbol(0);if(!a.lessThan(0))return _Symbol.infinity();}if(a.isInfinity&&b.isConstant()){if(b.equals(0))throw new UndefinedError(a+'^0 is undefined!');if(b.lessThan(0))return new _Symbol(0);return _.multiply(_Symbol.infinity(),_.pow(new _Symbol(a.sign()),b.clone()));}}var aIsZero=a.equals(0);var bIsZero=b.equals(0);if(aIsZero&&bIsZero)throw new UndefinedError('0^0 is undefined!');if(aIsZero&&b.isConstant()&&b.multiplier.greaterThan(0))return new _Symbol(0);if(bIsZero)return new _Symbol(1);var bIsConstant=b.isConstant(),aIsConstant=a.isConstant(),bIsInt=b.isInteger(),m=a.multiplier,result=a.clone();if(aIsConstant&&bIsConstant&&a.equals(0)&&b.lessThan(0))throw new UndefinedError('Division by zero is not allowed!');if(Settings.PARSE2NUMBER&&aIsConstant&&bIsConstant&&a.sign()<0&&evenFraction(b)){var k,re,im;k=Math.PI*b;re=new _Symbol(Math.cos(k));im=_.multiply(_Symbol.imaginary(),new _Symbol(Math.sin(k)));return _.add(re,im);}if(Settings.PARSE2NUMBER&&a.isImaginary()&&bIsConstant&&isInt(b)&&!b.lessThan(0)){var re,im,r,theta,nre,nim;re=a.realpart();im=a.imagpart();if(re.isConstant('all')&&im.isConstant('all')){theta=new _Symbol(Math.atan2(im,re)*b);r=_.pow(_Symbol.hyp(re,im),b);nre=_.multiply(r.clone(),_.trig.cos(theta.clone()));nim=_.multiply(r,_.trig.sin(theta));return _.add(nre,_.multiply(_Symbol.imaginary(),nim));}}result.toUnitMultiplier();if(result.group===FN&&result.fname===SQRT&&!bIsConstant){var s=result.args[0];s.multiplyPower(new _Symbol(0.5));s.multiplier.multiply(result.multiplier);s.multiplyPower(b);result=s;}else{var sign=m.sign();if(evenFraction(b)&&sign<0){result.negate();result=_.symfunction(PARENTHESIS,[result]);result.negate();}result.multiplyPower(b);}if(aIsConstant&&bIsConstant&&Settings.PARSE2NUMBER){var c;if(sign<0){a.negate();if(b.multiplier.den.equals(2))c=new _Symbol(Settings.IMAGINARY);else if(isInt(b.multiplier)){if(even(b.multiplier))c=new _Symbol(1);else c=new _Symbol(-1);}else if(!even(b.multiplier.den)){c=new _Symbol(Math.pow(sign,b.multiplier.num));}else{c=_.pow(_.symfunction(PARENTHESIS,[new _Symbol(sign)]),b.clone());}}result=new _Symbol(Math.pow(a.multiplier.toDecimal(),b.multiplier.toDecimal()));if(c)result=_.multiply(result,c);}else if(bIsInt&&!m.equals(1)){var abs_b=b.abs();if(abs_b.gt(Settings.MAX_EXP)){if(b.sign()<0)return new _Symbol(0);return _Symbol.infinity();}else{var p=b.multiplier.toDecimal();var sgn=Math.sign(p);p=Math.abs(p);var multiplier=new Frac(1);multiplier.num=m.num.pow(p);multiplier.den=m.den.pow(p);if(sgn<0)multiplier.invert();result.multiplier=result.multiplier.multiply(multiplier);}}else{var sign=a.sign();if(b.isConstant()&&a.isConstant()&&!b.multiplier.den.equals(1)&&sign<0){if(b.multiplier.den.equals(2)){var i=new _Symbol(Settings.IMAGINARY);a.negate();if(b.lessThan(0)){i.negate();b.negate();}result=_.multiply(_.pow(a,b),i);}else{var aa=a.clone();aa.multiplier.negate();result=_.pow(_.symfunction(PARENTHESIS,[new _Symbol(sign)]),b.clone());var _a=_.pow(new _Symbol(aa.multiplier.num),b.clone());var _b=_.pow(new _Symbol(aa.multiplier.den),b.clone());var r=_.divide(_a,_b);result=_.multiply(result,r);}}else if(Settings.PARSE2NUMBER&&b.isImaginary()){var re,im,aa,a1,b1,c1;aa=a.clone().toLinear();re=b.realpart();im=b.imagpart();a1=_.pow(aa.clone(),re);b1=trig.cos(_.multiply(im.clone(),_log(aa.clone())));c1=_.multiply(trig.sin(_.multiply(im,_log(aa))),_Symbol.imaginary());result=_.multiply(a1,_.add(b1,c1));result=_.expand(_.parse(result));}else{var neg_num=a.group===N&&sign<0,num=testSQRT(new _Symbol(neg_num?m.num:Math.abs(m.num)).setPower(b.clone())),den=testSQRT(new _Symbol(m.den).setPower(b.clone()).invert());if(a.imaginary){if(bIsInt){var s,p,n;s=Math.sign(b);p=abs(b);n=p%4;result=new _Symbol(even(n)?-1:Settings.IMAGINARY);if(n===0||s<0&&n===1||s>0&&n===3){result.negate();}}else{var nr=b.multiplier.multiply(Frac.quick(1,2)),tn=Math.pow(-1,nr.num);result=even(nr.den)?new _Symbol(-1).setPower(nr,true):new _Symbol(tn);}}if(sign<0&&!neg_num)result.negate();if(bIsConstant&&a.group!==EX){var evenr=even(b.multiplier.den),evenp=even(a.power),n=result.power.toDecimal(),evennp=even(n);if(evenr&&evenp&&!evennp){if(n===1)result=_.symfunction(ABS,[result]);else if(!isInt(n)){var p=result.power;result=_.symfunction(ABS,[result.toLinear()]).setPower(p);}else{result=_.multiply(_.symfunction(ABS,[result.clone().toLinear()]),result.clone().setPower(new Frac(n-1)));}if(Settings.POSITIVE_MULTIPLIERS&&result.fname===ABS)result=result.args[0];}}if(b.equals(2)&&result.group===CB){var _result=new _Symbol(1);result.each(function(sym){_result=_.multiply(_result,_.pow(sym,b));});result=_result;}}}result=testSQRT(result);if(num&&den)result=_.multiply(result,testPow(_.multiply(num,den)));if(result.fname===SQRT){var isEX=result.group===EX;var t=isEX?result.power.multiplier.toString():result.power.toString();if(even(t)){var pt=isEX?_.divide(result.power,new _Symbol(2)):new _Symbol(result.power.divide(new Frac(2))),m=result.multiplier;result=_.pow(result.args[0],pt);result.multiplier=result.multiplier.multiply(m);}}else if(!Settings.IGNORE_E&&result.isE()&&result.group===EX&&result.power.contains('pi')&&result.power.contains(Settings.IMAGINARY)){var theta=b.stripVar(Settings.IMAGINARY);result=_.add(trig.cos(theta),_.multiply(_Symbol.imaginary(),trig.sin(theta)));}return result;}else{if(isVector(a)&&bIsSymbol){a=a.map(function(x){return _.pow(x,b.clone());});}else if(isMatrix(a)&&bIsSymbol){a.eachElement(function(x){return _.pow(x,b.clone());});}return a;}};this.comma=function(a,b){if(!(a instanceof Collection))a=Collection.create(a);a.append(b);return a;};this.mod=function(a,b){return mod(a,b);};this.slice=function(a,b){return new Slice(a,b);};this.equals=function(a,b){if(a.group!==S&&!a.isLinear())err('Cannot set equality for '+a.toString());VARS[a.value]=b.clone();return b;};this.percent=function(a){return _.divide(a,new _Symbol(100));};this.assign=function(a,b){if(a instanceof Collection&&b instanceof Collection){a.elements.map(function(x,i){return _.assign(x,b.elements[i]);});return Vector.fromArray(b.elements);}if(a.parent){var e=a.parent;e.elements[e.getter]=b;delete e.getter;return e;}if(a.group!==S)throw new NerdamerValueError('Cannot complete operation. Incorrect LH value for '+a);VARS[a.value]=b;return b;};this.function_assign=function(a,b){var f=a.elements.pop();return setFunction(f,a.elements,b);};var bool2Symbol=function bool2Symbol(x){return new _Symbol(x===true?1:0);};this.eq=function(a,b){return bool2Symbol(a.equals(b));};this.gt=function(a,b){return bool2Symbol(a.gt(b));};this.gte=function(a,b){return bool2Symbol(a.gte(b));};this.lt=function(a,b){return bool2Symbol(a.lt(b));};this.lte=function(a,b){return bool2Symbol(a.lte(b));};this.factorial=function(a){return this.symfunction(FACTORIAL,[a]);};this.dfactorial=function(a){return this.symfunction(DOUBLEFACTORIAL,[a]);};};var Fraction={convert:function convert(value,opts){var frac;if(value===0){frac=[0,1];}else{if(value<1e-6||value>1e20){var qc=this.quickConversion(Number(value));if(qc[1]<=1e20){var abs=Math.abs(value);var sign=value/abs;frac=this.fullConversion(abs.toFixed((qc[1]+'').length-1));frac[0]=frac[0]*sign;}else{frac=qc;}}else{frac=this.fullConversion(value);}}return frac;},quickConversion:function quickConversion(dec){var x=(dec.toExponential()+'').split('e');var d=x[0].split('.')[1];var l=(d?d.length:0)-parseInt(x[1]);return[Math.round(Math.pow(10,l)*x[0]),Math.pow(10,Math.abs(x[1])+l)];},fullConversion:function fullConversion(dec){var done=false;var n1=0,d1=1,n2=1,d2=0,n=0,q=dec,epsilon=1e-16;while(!done){n++;if(n>10000){done=true;}var a=Math.floor(q);var num=n1+a*n2;var den=d1+a*d2;var e=q-a;if(e<epsilon){done=true;}q=1/e;n1=n2;d1=d2;n2=num;d2=den;if(Math.abs(num/den-dec)<epsilon||n>30){done=true;}}return[num,den];}};var LaTeX={parser:function(){var keep=['classes','setOperator','getOperators','getBrackets','tokenize','toRPN','tree','units'];var parser=new Parser();for(var x in parser){if(keep.indexOf(x)===-1)delete parser[x];}parser.setOperator({precedence:8,operator:'\\',action:'slash',prefix:true,postfix:false,leftAssoc:true,operation:function operation(e){return e;}});parser.setOperator({precedence:8,operator:'\\,',action:'slash_comma',prefix:true,postfix:false,leftAssoc:true,operation:function operation(e){return e;}});var brackets=parser.getBrackets();brackets['{'].maps_to=undefined;return parser;}(),space:'~',dot:' \\cdot ',latex:function latex(symbol,option){if(symbol.clone){symbol=symbol.clone();}if(symbol instanceof _.classes.Collection)symbol=symbol.elements;if(isArray(symbol)){var LaTeXArray=[];for(var i=0;i<symbol.length;i++){var sym=symbol[i];if(!isSymbol(sym))sym=_.parse(sym);LaTeXArray.push(this.latex(sym,option));}return this.brackets(LaTeXArray.join(', '),'square');}else if(isMatrix(symbol)){var TeX='\\begin{pmatrix}\n';for(var i=0;i<symbol.elements.length;i++){var rowTeX=[],e=symbol.elements[i];for(var j=0;j<e.length;j++){rowTeX.push(this.latex(e[j],option));}TeX+=rowTeX.join(' & ');if(i<symbol.elements.length-1){TeX+='\\\\\n';}}TeX+='\\end{pmatrix}';return TeX;}else if(isVector(symbol)){var TeX='\\left[';for(var i=0;i<symbol.elements.length;i++){TeX+=this.latex(symbol.elements[i],option)+' '+(i!==symbol.elements.length-1?',\\,':'');}TeX+='\\right]';return TeX;}else if(isSet(symbol)){var TeX='\\{';for(var i=0;i<symbol.elements.length;i++){TeX+=this.latex(symbol.elements[i],option)+' '+(i!==symbol.elements.length-1?',\\,':'');}TeX+='\\}';return TeX;}symbol=symbol.clone();var decimal=option==='decimal'||option==='decimals',power=symbol.power,invert=isNegative(power),negative=symbol.multiplier.lessThan(0);if(symbol.group===P&&decimal){return String(symbol.multiplier.toDecimal()*Math.pow(symbol.value,symbol.power.toDecimal()));}else{symbol.multiplier=symbol.multiplier.abs();var m_array;if(decimal){var m=String(symbol.multiplier.toDecimal());m_array=[m,''];}else{m_array=[symbol.multiplier.num,symbol.multiplier.den];}var v_array=this.value(symbol,invert,option,negative),p;if(invert)power.negate();if(decimal){p=isSymbol(power)?LaTeX.latex(power,option):String(power.toDecimal());if(String(p)==='1')p='';}else if(isSymbol(power))p=this.latex(power,option);else p=this.formatFrac(power,true);var p_array=['',''],index=invert?1:0;p_array[index]=p;var retval=(negative?'-':'')+this.set(m_array,v_array,p_array,symbol.group===CB);return retval.replace(/\+\-/gi,'-');}},greek:{alpha:'\\alpha',beta:'\\beta',gamma:'\\gamma',delta:'\\delta',epsilon:'\\epsilon',zeta:'\\zeta',eta:'\\eta',theta:'\\theta',iota:'\\iota',kappa:'\\kappa',lambda:'\\lambda',mu:'\\mu',nu:'\\nu',xi:'\\xi',omnikron:'\\omnikron',pi:'\\pi',rho:'\\rho',sigma:'\\sigma',tau:'\\tau',upsilon:"\\upsilon",phi:'\\phi',chi:'\\chi',psi:'\\psi',omega:'\\omega',Gamma:'\\Gamma',Delta:'\\Delta',Epsilon:'\\Epsilon',Theta:'\\Theta',Lambda:'\\Lambda',Xi:'\\Xi',Pi:'\\Pi',Sigma:'\\Sigma',Phi:'\\Phi',Psi:'\\Psi',Omega:'\\Omega'},symbols:{arccos:'\\arccos',cos:'\\cos',csc:'\\csc',exp:'\\exp',ker:'\\ker',limsup:'\\limsup',min:'\\min',sinh:'\\sinh',arcsin:'\\arcsin',cosh:'\\cosh',deg:'\\deg',gcd:'\\gcd',lg:'\\lg',ln:'\\ln',Pr:'\\Pr',sqrt:'\\sqrt',sup:'\\sup',arctan:'\\arctan',cot:'\\cot',det:'\\det',hom:'\\hom',lim:'\\lim',log:'\\log',LN:'\\LN',sec:'\\sec',tan:'\\tan',arg:'\\arg',coth:'\\coth',dim:'\\dim',inf:'\\inf',liminf:'\\liminf',max:'\\max',sin:'\\sin',tanh:'\\tanh'},value:function value(symbol,inverted,option,negative){var group=symbol.group,previousGroup=symbol.previousGroup,v=['',''],index=inverted?1:0;if(symbol.isInfinity){v[index]='\\infty';}else if(group===S||group===P||previousGroup===S||previousGroup===P||previousGroup===N){var value=symbol.value;if(value.replace)value=value.replace(/(.+)_$/,'$1\\_');var t_varray=String(value).split('_');var greek=this.greek[t_varray[0]];if(greek){t_varray[0]=greek;value=t_varray.join('_');}var symbol=this.symbols[t_varray[0]];if(symbol){t_varray[0]=symbol;value=t_varray.join('_');}v[index]=value;}else if(group===FN||previousGroup===FN){var name,input=[],fname=symbol.fname;for(var i=0;i<symbol.args.length;i++){var arg=symbol.args[i],item;if(typeof arg==='string')item=arg;else{item=this.latex(arg,option);}input.push(item);}if(fname===SQRT){v[index]='\\sqrt'+this.braces(input.join(','));}else if(fname===ABS){v[index]=this.brackets(input.join(','),'abs');}else if(fname===PARENTHESIS){v[index]=this.brackets(input.join(','),'parens');}else if(fname==='limit'){v[index]=' \\lim\\limits_{'+input[1]+' \\to '+input[2]+'} '+input[0];}else if(fname==='integrate'){v[index]='\\int'+this.braces(input[0])+this.braces('d'+input[1]);}else if(fname==='defint'){v[index]='\\int\\limits_'+this.braces(input[1])+'^'+this.braces(input[2])+' '+input[0]+' d'+input[3];}else if(fname===FACTORIAL||fname===DOUBLEFACTORIAL){var arg=symbol.args[0];if(arg.power.equals(1)&&(arg.isComposite()||arg.isCombination())){input[0]=this.brackets(input[0]);}v[index]=input[0]+(fname===FACTORIAL?'!':'!!');}else if(fname==='floor'){v[index]='\\left \\lfloor'+this.braces(input[0])+'\\right \\rfloor';}else if(fname==='ceil'){v[index]='\\left \\lceil'+this.braces(input[0])+'\\right \\rceil';}else if(fname===Settings.LOG&&input.length>1){v[index]='\\mathrm'+this.braces(Settings.LOG)+'_'+this.braces(input[1])+this.brackets(input[0]);}else if(fname===Settings.LOG10){v[index]='\\mathrm'+this.braces(Settings.LOG)+'_'+this.braces(10)+this.brackets(input[0]);}else if(fname==='sum'){var a=input[0],b=input[1],c=input[2],d=input[3];v[index]='\\sum\\limits_{'+this.braces(b)+'='+this.braces(c)+'}^'+this.braces(d)+' '+this.braces(a)+'';}else if(fname==='product'){var a=input[0],b=input[1],c=input[2],d=input[3];v[index]='\\prod\\limits_{'+this.braces(b)+'='+this.braces(c)+'}^'+this.braces(d)+' '+this.braces(a)+'';}else if(fname==='nthroot'){v[index]='\\sqrt['+input[1]+']'+this.braces(input[0]);}else if(fname==='mod'){v[index]=input[0]+' \\bmod '+input[1];}else if(fname==='realpart'){v[index]='\\operatorname{Re}'+this.brackets(input[0]);}else if(fname==='imagpart'){v[index]='\\operatorname{Im}'+this.brackets(input[0]);}else{var name=fname!==''?'\\mathrm'+this.braces(fname.replace(/_/g,'\\_')):'';if(symbol.isConversion)v[index]=name+this.brackets(input.join(''),'parens');else v[index]=name+this.brackets(input.join(','),'parens');}}else if(symbol.isComposite()){var collected=symbol.collectSymbols().sort(group===CP||previousGroup===CP?function(a,b){return b.group-a.group;}:function(a,b){var x=isSymbol(a.power)?-1:a.power;var y=isSymbol(b.power)?-1:b.power;return y-x;}),symbols=[],l=collected.length;for(var i=0;i<l;i++){symbols.push(LaTeX.latex(collected[i],option));}var value=symbols.join('+');v[index]=!(symbol.isLinear()&&symbol.multiplier.equals(1))||negative?this.brackets(value,'parens'):value;}else if(group===CB||previousGroup===EX||previousGroup===CB){if(group===CB)symbol.distributeExponent();var denominator=[],numerator=[];var den_map=[],num_map=[],num_c=0,den_c=0;var setBrackets=function setBrackets(container,map,counter){if(counter>1&&map.length>0){var l=map.length;for(var i=0;i<l;i++){var idx=map[i],item=container[idx];if(!(/^\\left\(.+\\right\)\^\{.+\}$/g.test(item)||/^\\left\(.+\\right\)$/g.test(item))){container[idx]=LaTeX.brackets(item,'parens');}}}return container;};symbol.each(function(x){var isDenom=isNegative(x.power),laTex;if(isDenom){laTex=LaTeX.latex(x.invert(),option);den_c++;if(x.isComposite()){if(symbol.multiplier.den!=1&&Math.abs(x.power)==1)laTex=LaTeX.brackets(laTex,'parens');den_map.push(denominator.length);}denominator.push(laTex);}else{laTex=LaTeX.latex(x,option);num_c++;if(x.isComposite()){if(symbol.multiplier.num!=1&&Math.abs(x.power)==1)laTex=LaTeX.brackets(laTex,'parens');num_map.push(numerator.length);}numerator.push(laTex);}});setBrackets(numerator,num_map,num_c);v[0]=numerator.join(this.dot);setBrackets(denominator,den_map,den_c);v[1]=denominator.join(this.dot);}return v;},set:function set(m,v,p,combine_power){var isBracketed=function isBracketed(v){return /^\\left\(.+\\right\)$/.test(v);};if(p)p=this.formatP(p);if(combine_power){var tp=p[0];p[0]='';}v=this.merge(v,p);var mn=m[0],md=m[1],vn=v[0],vd=v[1];if(vn&&Number(mn)===1)mn='';if(Number(md)===1)md='';var top=this.join(mn,vn,!isBracketed(vn)?this.dot:'');var bottom=this.join(md,vd,!isBracketed(vd)?this.dot:'');if(top&&bottom){var frac=this.frac(top,bottom);if(combine_power&&tp)frac=this.brackets(frac)+tp;return frac;}else return top;},merge:function merge(a,b){var r=[];for(var i=0;i<2;i++){r[i]=a[i]+b[i];}return r;},join:function join(n,d,glue){if(!n&&!d)return'';if(n&&!d)return n;if(d&&!n)return d;return n+glue+d;},formatP:function formatP(p_array){for(var i=0;i<2;i++){var p=p_array[i];if(p)p_array[i]='^'+this.braces(p);}return p_array;},formatFrac:function formatFrac(f,is_pow){var n=f.num.toString(),d=f.den.toString();if(is_pow&&n==='1'&&d==='1')return'';if(d==='1')return n;return this.frac(n,d);},frac:function frac(n,d){return'\\frac'+this.braces(n)+this.braces(d);},braces:function braces(e){return'{'+e+'}';},brackets:function brackets(e,typ){typ=typ||'parens';var bracketTypes={parens:['(',')'],square:['[',']'],brace:['{','}'],abs:['|','|'],angle:['\\langle','\\rangle']};var bracket=bracketTypes[typ];return'\\left'+bracket[0]+e+'\\right'+bracket[1];},filterTokens:function filterTokens(tokens){var filtered=[];var d=['\\','left','right','big','Big','large','Large'];for(var i=0,l=tokens.length;i<l;i++){var token=tokens[i];if(isArray(token))filtered.push(LaTeX.filterTokens(token));else if(d.indexOf(token.value)===-1)filtered.push(token);}return filtered;},parse:function parse(raw_tokens){var i,l;var retval='';var tokens=this.filterTokens(raw_tokens);var replace={'cdot':'','times':'*','infty':'Infinity'};var next=function next(){return tokens[++i];};var parse_next=function parse_next(){return LaTeX.parse(next());};var get=function get(token){if(token in replace)return replace[token];return token;};for(i=0,l=tokens.length;i<l;i++){var token=tokens[i];if(token.value==='frac'){var n=parse_next();var d=parse_next();retval+=n+'/'+d;}else if(token.value in LaTeX.symbols){retval+=token.value+parse_next();}else if(token.value==='int'){var f=parse_next();i++;var dx=next().value;dx=get(dx.substring(1,dx.length));retval+='integrate'+inBrackets(f+','+dx);}else if(token.value==='mathrm'){var f=tokens[++i][0].value;retval+=f+parse_next();}else if(token.value==='sum_'||token.value==='prod_'){var fn=token.value==='sum_'?'sum':'product';var nxt=next();i++;var end=parse_next();var f=parse_next();retval+=fn+inBrackets([f,get(nxt[0]),get(nxt[2]),get(end)].join(','));}else if(token.value==='lim_'){var nxt=next();retval+='limit'+inBrackets([parse_next(),get(nxt[0]),get(nxt[2])].join(','));}else{if(Array.isArray(token)){retval+=get(LaTeX.parse(token));}else retval+=get(token.value.toString());}}return inBrackets(retval);}};function Vector(v){if(isVector(v))this.elements=v.items.slice(0);else if(isArray(v))this.elements=v.slice(0);else this.elements=[].slice.call(arguments);}Vector.arrayPrefill=function(n,val){var a=[];val=val||0;for(var i=0;i<n;i++){a[i]=val;}return a;};Vector.fromArray=function(a){var v=new Vector();v.elements=a;return v;};Vector.fromSet=function(set){return Vector.fromArray(set.elements);};Vector.prototype={custom:true,e:function e(i){return i<1||i>this.elements.length?null:this.elements[i-1];},set:function set(i,val){if(!isSymbol(val))val=new _Symbol(val);this.elements[i]=val;},dimensions:function dimensions(){return this.elements.length;},modulus:function modulus(){return block('SAFE',function(){return _.pow(this.dot(this.clone()),new _Symbol(0.5));},undefined,this);},eql:function eql(vector){var n=this.elements.length;var V=vector.elements||vector;if(n!==V.length){return false;}do{if(Math.abs(_.subtract(this.elements[n-1],V[n-1]).valueOf())>PRECISION){return false;}}while(--n);return true;},clone:function clone(){var V=new Vector(),l=this.elements.length;for(var i=0;i<l;i++){V.elements.push(this.elements[i].clone());}if(this.getter){V.getter=this.getter.clone();}return V;},map:function map(fn){var elements=[];this.each(function(x,i){elements.push(fn(x,i));});return new Vector(elements);},each:function each(fn){var n=this.elements.length,k=n,i;do{i=k-n;fn(this.elements[i],i+1);}while(--n);},toUnitVector:function toUnitVector(){return block('SAFE',function(){var r=this.modulus();if(r.valueOf()===0){return this.clone();}return this.map(function(x){return _.divide(x,r);});},undefined,this);},angleFrom:function angleFrom(vector){return block('SAFE',function(){var V=vector.elements||vector;var n=this.elements.length;if(n!==V.length){return null;}var dot=new _Symbol(0),mod1=new _Symbol(0),mod2=new _Symbol(0);this.each(function(x,i){dot=_.add(dot,_.multiply(x,V[i-1]));mod1=_.add(mod1,_.multiply(x,x));mod2=_.add(mod2,_.multiply(V[i-1],V[i-1]));});mod1=_.pow(mod1,new _Symbol(0.5));mod2=_.pow(mod2,new _Symbol(0.5));var product=_.multiply(mod1,mod2);if(product.valueOf()===0){return null;}var theta=_.divide(dot,product);var theta_val=theta.valueOf();if(theta_val<-1){theta=-1;}if(theta_val>1){theta=1;}return new _Symbol(Math.acos(theta));},undefined,this);},isParallelTo:function isParallelTo(vector){var angle=this.angleFrom(vector).valueOf();return angle===null?null:angle<=PRECISION;},isAntiparallelTo:function isAntiparallelTo(vector){var angle=this.angleFrom(vector).valueOf();return angle===null?null:Math.abs(angle-Math.PI)<=PRECISION;},isPerpendicularTo:function isPerpendicularTo(vector){var dot=this.dot(vector);return dot===null?null:Math.abs(dot)<=PRECISION;},add:function add(vector){return block('SAFE',function(){var V=vector.elements||vector;if(this.elements.length!==V.length){return null;}return this.map(function(x,i){return _.add(x,V[i-1]);});},undefined,this);},subtract:function subtract(vector){return block('SAFE',function(){var V=vector.elements||vector;if(this.elements.length!==V.length){return null;}return this.map(function(x,i){return _.subtract(x,V[i-1]);});},undefined,this);},multiply:function multiply(k){return this.map(function(x){return x.clone()*k.clone();});},x:function x(k){return this.multiply(k);},dot:function dot(vector){return block('SAFE',function(){var V=vector.elements||vector;var product=new _Symbol(0),n=this.elements.length;if(n!==V.length){return null;}do{product=_.add(product,_.multiply(this.elements[n-1],V[n-1]));}while(--n);return product;},undefined,this);},cross:function cross(vector){var B=vector.elements||vector;if(this.elements.length!==3||B.length!==3){return null;}var A=this.elements;return block('SAFE',function(){return new Vector([_.subtract(_.multiply(A[1],B[2]),_.multiply(A[2],B[1])),_.subtract(_.multiply(A[2],B[0]),_.multiply(A[0],B[2])),_.subtract(_.multiply(A[0],B[1]),_.multiply(A[1],B[0]))]);},undefined,this);},max:function max(){var m=0,n=this.elements.length,k=n,i;do{i=k-n;if(Math.abs(this.elements[i].valueOf())>Math.abs(m.valueOf())){m=this.elements[i];}}while(--n);return m;},magnitude:function magnitude(){var magnitude=new _Symbol(0);this.each(function(e){magnitude=_.add(magnitude,_.pow(e,new _Symbol(2)));});return _.sqrt(magnitude);},indexOf:function indexOf(x){var index=null,n=this.elements.length,k=n,i;do{i=k-n;if(index===null&&this.elements[i].valueOf()===x.valueOf()){index=i+1;}}while(--n);return index;},text:function text(x){return _text(this);},toString:function toString(){return this.text();},latex:function latex(option){var tex=[];for(var i=0;i<this.elements.length;i++){tex.push(LaTeX.latex.call(LaTeX,this.elements[i],option));}return'['+tex.join(', ')+']';}};function Matrix(){var m=arguments,l=m.length,i,el=[];if(isMatrix(m)){for(i=0;i<l;i++){el.push(m[i].slice(0));}}else{var row,lw,rl;for(i=0;i<l;i++){row=m[i];if(isVector(row))row=row.elements;if(!isArray(row))row=[row];rl=row.length;if(lw&&lw!==rl)err('Unable to create Matrix. Row dimensions do not match!');el.push(row);lw=rl;}}this.elements=el;}Matrix.identity=function(n){var m=new Matrix();for(var i=0;i<n;i++){m.elements.push([]);for(var j=0;j<n;j++){m.set(i,j,i===j?new _Symbol(1):new _Symbol(0));}}return m;};Matrix.fromArray=function(arr){function F(args){return Matrix.apply(this,args);}F.prototype=Matrix.prototype;return new F(arr);};Matrix.zeroMatrix=function(rows,cols){var m=new Matrix();for(var i=0;i<rows;i++){m.elements.push(Vector.arrayPrefill(cols,new _Symbol(0)));}return m;};Matrix.prototype={custom:true,get:function get(row,column){if(!this.elements[row])return undefined;return this.elements[row][column];},map:function map(f,raw_values){var M=new Matrix();this.each(function(e,i,j){M.set(i,j,f.call(M,e),raw_values);});return M;},set:function set(row,column,value,raw){if(!this.elements[row])this.elements[row]=[];this.elements[row][column]=raw?value:isSymbol(value)?value:new _Symbol(value);},cols:function cols(){return this.elements[0].length;},rows:function rows(){return this.elements.length;},row:function row(n){if(!n||n>this.cols())return[];return this.elements[n-1];},col:function col(n){var nr=this.rows(),col=[];if(n>this.cols()||!n)return col;for(var i=0;i<nr;i++){col.push(this.elements[i][n-1]);}return col;},eachElement:function eachElement(fn){var nr=this.rows(),nc=this.cols(),i,j;for(i=0;i<nr;i++){for(j=0;j<nc;j++){fn.call(this,this.elements[i][j],i,j);}}},determinant:function determinant(){if(!this.isSquare()){return null;}var M=this.toRightTriangular();var det=M.elements[0][0],n=M.elements.length-1,k=n,i;do{i=k-n+1;det=_.multiply(det,M.elements[i][i]);}while(--n);return det;},isSquare:function isSquare(){return this.elements.length===this.elements[0].length;},isSingular:function isSingular(){return this.isSquare()&&this.determinant()===0;},augment:function augment(m){var r=this.rows(),rr=m.rows();if(r!==rr)err("Cannot augment matrix. Rows don't match.");for(var i=0;i<r;i++){this.elements[i]=this.elements[i].concat(m.elements[i]);}return this;},clone:function clone(){var r=this.rows(),c=this.cols(),m=new Matrix();for(var i=0;i<r;i++){m.elements[i]=[];for(var j=0;j<c;j++){var symbol=this.elements[i][j];m.elements[i][j]=isSymbol(symbol)?symbol.clone():symbol;}}return m;},invert:function invert(){if(!this.isSquare())err('Matrix is not square!');return block('SAFE',function(){var ni=this.elements.length,ki=ni,i,j;var imatrix=Matrix.identity(ni);var M=this.augment(imatrix).toRightTriangular();var np,kp=M.elements[0].length,p,els,divisor;var inverse_elements=[],new_element;do{i=ni-1;els=[];np=kp;inverse_elements[i]=[];divisor=M.elements[i][i];do{p=kp-np;new_element=_.divide(M.elements[i][p],divisor.clone());els.push(new_element);if(p>=ki){inverse_elements[i].push(new_element);}}while(--np);M.elements[i]=els;for(j=0;j<i;j++){els=[];np=kp;do{p=kp-np;els.push(_.subtract(M.elements[j][p].clone(),_.multiply(M.elements[i][p].clone(),M.elements[j][i].clone())));}while(--np);M.elements[j]=els;}}while(--ni);return Matrix.fromArray(inverse_elements);},undefined,this);},toRightTriangular:function toRightTriangular(){return block('SAFE',function(){var M=this.clone(),els,fel,nel,n=this.elements.length,k=n,i,np,kp=this.elements[0].length,p;do{i=k-n;fel=M.elements[i][i];if(fel.valueOf()===0){for(var j=i+1;j<k;j++){nel=M.elements[j][i];if(nel&&nel.valueOf()!==0){els=[];np=kp;do{p=kp-np;els.push(_.add(M.elements[i][p].clone(),M.elements[j][p].clone()));}while(--np);M.elements[i]=els;break;}}}var fel=M.elements[i][i];if(fel.valueOf()!==0){for(j=i+1;j<k;j++){var multiplier=_.divide(M.elements[j][i].clone(),M.elements[i][i].clone());els=[];np=kp;do{p=kp-np;els.push(p<=i?new _Symbol(0):_.subtract(M.elements[j][p].clone(),_.multiply(M.elements[i][p].clone(),multiplier.clone())));}while(--np);M.elements[j]=els;}}}while(--n);return M;},undefined,this);},transpose:function transpose(){var rows=this.elements.length,cols=this.elements[0].length;var M=new Matrix(),ni=cols,i,nj,j;do{i=cols-ni;M.elements[i]=[];nj=rows;do{j=rows-nj;M.elements[i][j]=this.elements[j][i].clone();}while(--nj);}while(--ni);return M;},canMultiplyFromLeft:function canMultiplyFromLeft(matrix){var l=isMatrix(matrix)?matrix.elements.length:matrix.length;return this.elements[0].length===l;},sameSize:function sameSize(matrix){return this.rows()===matrix.rows()&&this.cols()===matrix.cols();},multiply:function multiply(matrix){return block('SAFE',function(){var M=matrix.elements||matrix;if(!this.canMultiplyFromLeft(M)){if(this.sameSize(matrix)){var MM=new Matrix();var rows=this.rows();for(var i=0;i<rows;i++){var e=_.multiply(new Vector(this.elements[i]),new Vector(matrix.elements[i]));MM.elements[i]=e.elements;}return MM;}return null;}var ni=this.elements.length,ki=ni,i,nj,kj=M[0].length,j;var cols=this.elements[0].length,elements=[],sum,nc,c;do{i=ki-ni;elements[i]=[];nj=kj;do{j=kj-nj;sum=new _Symbol(0);nc=cols;do{c=cols-nc;sum=_.add(sum,_.multiply(this.elements[i][c],M[c][j]));}while(--nc);elements[i][j]=sum;}while(--nj);}while(--ni);return Matrix.fromArray(elements);},undefined,this);},add:function add(matrix,callback){var M=new Matrix();if(this.sameSize(matrix)){this.eachElement(function(e,i,j){var result=_.add(e.clone(),matrix.elements[i][j].clone());if(callback){result=callback.call(M,result,e,matrix.elements[i][j]);}M.set(i,j,result);});}return M;},subtract:function subtract(matrix,callback){var M=new Matrix();if(this.sameSize(matrix)){this.eachElement(function(e,i,j){var result=_.subtract(e.clone(),matrix.elements[i][j].clone());if(callback){result=callback.call(M,result,e,matrix.elements[i][j]);}M.set(i,j,result);});}return M;},negate:function negate(){this.each(function(e){return e.negate();});return this;},toVector:function toVector(){if(this.rows()===1||this.cols()===1){var v=new Vector();v.elements=this.elements;return v;}return this;},toString:function toString(newline,to_decimal){var l=this.rows(),s=[];newline=newline===undefined?'\n':newline;for(var i=0;i<l;i++){s.push('['+this.elements[i].map(function(x){var v=to_decimal?x.multiplier.toDecimal():x.toString();return x!==undefined?v:'';}).join(',')+']');}return'matrix'+inBrackets(s.join(','));},text:function text(){return'matrix('+this.elements.toString('')+')';},latex:function latex(option){var cols=this.cols(),elements=this.elements;return format('\\begin{vmatrix}{0}\\end{vmatrix}',function(){var tex=[];for(var row in elements){var row_tex=[];for(var i=0;i<cols;i++){row_tex.push(LaTeX.latex.call(LaTeX,elements[row][i],option));}tex.push(row_tex.join(' & '));}return tex.join(' \\cr ');});}};Matrix.prototype.each=Matrix.prototype.eachElement;function Set(set){this.elements=[];if(!isVector(set))set=Vector.fromArray(arguments);if(set){var elements=set.elements;for(var i=0,l=elements.length;i<l;i++){this.add(elements[i]);}}}Set.fromArray=function(arr){function F(args){return Set.apply(this,args);}F.prototype=Set.prototype;return new F(arr);};Set.prototype={add:function add(x){if(!this.contains(x))this.elements.push(x.clone());},contains:function contains(x){for(var i=0;i<this.elements.length;i++){var e=this.elements[i];if(x.equals(e))return true;}return false;},each:function each(f){var elements=this.elements;var set=new Set();for(var i=0,l=elements.length;i<l;i++){var e=elements[i];f.call(this,e,set,i);}return set;},clone:function clone(){var set=new Set();this.each(function(e){set.add(e.clone());});return set;},union:function union(set){var _union=this.clone();set.each(function(e){_union.add(e);});return _union;},difference:function difference(set){var diff=this.clone();set.each(function(e){diff.remove(e);});return diff;},remove:function remove(element){for(var i=0,l=this.elements.length;i<l;i++){var e=this.elements[i];if(e.equals(element)){_remove(this.elements,i);return true;}}return false;},intersection:function intersection(set){var _intersection=new Set();var A=this;set.each(function(e){if(A.contains(e)){_intersection.add(e);};});return _intersection;},intersects:function intersects(set){return this.intersection(set).elements.length>0;},is_subset:function is_subset(set){var elements=set.elements;for(var i=0,l=elements.length;i<l;i++){if(!this.contains(elements[i])){return false;}}return true;},toString:function toString(){return'{'+this.elements.join(',')+'}';}};var Build={dependencies:{_rename:{'Math2.factorial':'factorial'},factorial:{'Math2.gamma':Math2.gamma},gamma_incomplete:{'Math2.factorial':Math2.factorial},Li:{'Math2.Ei':Math2.Ei,'Math2.bigLog':Math2.bigLog,'Frac':Frac},Ci:{'Math2.factorial':Math2.factorial},Ei:{'Math2.factorial':Math2.factorial},Si:{'Math2.factorial':Math2.factorial},Shi:{'Math2.factorial':Math2.factorial},Chi:{'isInt':isInt,'nround':nround,'Math2.num_integrate':Math2.num_integrate},factor:{'Math2.ifactor':Math2.ifactor,'Symbol':_Symbol},num_integrate:{'Math2.simpson':Math2.simpson,'nround':nround},fib:{'even':even}},reformat:{diff:function diff(symbol,deps){var f='var f = '+Build.build(symbol.args[0].toString())+';';deps[1]+='var diff = '+Math2.diff.toString()+';';deps[1]+=f;return['diff(f)('+symbol.args[1].toString()+')',deps];}},getProperName:function getProperName(f){var map={continued_fraction:'continuedFraction'};return map[f]||f;},compileDependencies:function compileDependencies(f,deps){var dependencies=Build.dependencies[f];var dep_string=deps&&deps[1]?deps[1]:'';var replacements=deps&&deps[0]?deps[0]:{};for(var x in dependencies){if(_typeof(dependencies[x])==='object')continue;var components=x.split('.');dep_string+='var '+(components.length>1?components[1]:components[0])+'='+dependencies[x]+';';replacements[x]=components.pop();}return[replacements,dep_string];},getArgsDeps:function getArgsDeps(symbol,dependencies){var args=symbol.args;for(var i=0;i<args.length;i++){symbol.args[i].each(function(x){if(x.group===FN)dependencies=Build.compileDependencies(x.fname,dependencies);});}return dependencies;},build:function build(symbol,arg_array){symbol=block('PARSE2NUMBER',function(){return _.parse(symbol);},true);var args=_variables(symbol);var supplements=[];var dependencies=[];var ftext=function ftext(symbol,xports){xports=xports||[];var c=[],group=symbol.group,prefix='';var ftext_complex=function ftext_complex(group){var d=group===CB?'*':'+',cc=[];for(var x in symbol.symbols){var sym=symbol.symbols[x],ft=ftext(sym,xports)[0];if(sym.isComposite())ft=inBrackets(ft);cc.push(ft);}var retval=cc.join(d);retval=retval&&!symbol.multiplier.equals(1)?inBrackets(retval):retval;return retval;},ftext_function=function ftext_function(bn){var retval;if(bn in Math)retval='Math.'+bn;else{bn=Build.getProperName(bn);if(supplements.indexOf(bn)===-1){xports.push('var '+bn+' = '+Math2[bn].toString()+'; ');supplements.push(bn);}retval=bn;}retval=retval+inBrackets(symbol.args.map(function(x){return ftext(x,xports)[0];}).join(','));return retval;};if(group===N)c.push(symbol.multiplier.toDecimal());else if(symbol.multiplier.equals(-1))prefix='-';else if(!symbol.multiplier.equals(1))c.push(symbol.multiplier.toDecimal());var value;if(group===S||group===P)value=symbol.value;else if(group===FN){dependencies=Build.compileDependencies(symbol.fname,dependencies);dependencies=Build.getArgsDeps(symbol,dependencies);if(Build.reformat[symbol.fname]){var components=Build.reformat[symbol.fname](symbol,dependencies);dependencies=components[1];value=components[0];}else{value=ftext_function(symbol.fname);}}else if(group===EX){var pg=symbol.previousGroup;if(pg===N||pg===S)value=symbol.value;else if(pg===FN){value=ftext_function(symbol.fname);dependencies=Build.compileDependencies(symbol.fname,dependencies);dependencies=Build.getArgsDeps(symbol,dependencies);}else value=ftext_complex(symbol.previousGroup);}else{value=ftext_complex(symbol.group);}if(symbol.group!==N&&!symbol.power.equals(1)){var pow=ftext(_.parse(symbol.power));xports.push(pow[1]);value='Math.pow'+inBrackets(value+','+pow[0]);}if(value)c.push(prefix+value);return[c.join('*'),xports.join('').replace(/\n+\s+/g,' ')];};if(arg_array){for(var i=0;i<args.length;i++){var arg=args[i];if(arg_array.indexOf(arg)===-1)err(arg+' not found in argument array');}args=arg_array;}var f_array=ftext(symbol);for(var x in dependencies[0]){var alias=dependencies[0][x];f_array[1]=f_array[1].replace(x,alias);dependencies[1]=dependencies[1].replace(x,alias);}var f=new Function(args,(dependencies[1]||'')+f_array[1]+' return '+f_array[0]+';');return f;}};(function(){reserveNames(_.CONSTANTS);reserveNames(_.functions);_.initConstants();if(!_.error)_.error=err;Settings.LOG_FNS={log:_.functions['log'],log10:_.functions['log10']};})();var Utils={allSame:allSame,allNumeric:allNumeric,arguments2Array:arguments2Array,arrayAddSlices:arrayAddSlices,arrayClone:arrayClone,arrayMax:arrayMax,arrayMin:arrayMin,arrayUnique:arrayUnique,arraySum:arraySum,block:block,build:Build.build,clearU:clearU,comboSort:comboSort,compare:compare,convertToVector:convertToVector,customError:customError,customType:customType,decompose_fn:decompose_fn,each:each,evaluate:evaluate,even:even,evenFraction:evenFraction,fillHoles:fillHoles,firstObject:firstObject,format:format,generatePrimes:generatePrimes,getCoeffs:getCoeffs,getU:getU,importFunctions:importFunctions,inBrackets:inBrackets,isArray:isArray,isExpression:isExpression,isFraction:_isFraction,isInt:isInt,isMatrix:isMatrix,isNegative:isNegative,isNumericSymbol:isNumericSymbol,isPrime:isPrime,isReserved:isReserved,isSymbol:isSymbol,isVariableSymbol:isVariableSymbol,isVector:isVector,keys:keys,nroots:nroots,remove:_remove,reserveNames:reserveNames,range:range,round:nround,sameSign:sameSign,scientificToDecimal:scientificToDecimal,separate:separate,stringReplace:stringReplace,text:_text,validateName:validateName,variables:_variables,warn:warn};var C={groups:Groups,Symbol:_Symbol,Expression:Expression,Frac:Frac,Vector:Vector,Matrix:Matrix,Parser:Parser,Fraction:Fraction,Math2:Math2,LaTeX:LaTeX,Utils:Utils,PARSER:_,PARENTHESIS:PARENTHESIS,Settings:Settings,err:err,bigInt:bigInt,bigDec:bigDec,exceptions:exceptions};var libExports=function libExports(expression,subs,option,location){var fndec=/^([a-z_][a-z\d\_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(expression);if(fndec)return nerdamer.setFunction(fndec[1],fndec[2].split(','),fndec[3]);if(expression instanceof Expression)expression=expression.toString();var multi_options=isArray(option),expand='expand',numer=multi_options?option.indexOf('numer')!==-1:option==='numer';if(multi_options?option.indexOf(expand)!==-1:option===expand){expression=format('{0}({1})',expand,expression);}var e=block('PARSE2NUMBER',function(){return _.parse(expression,subs);},numer||Settings.PARSE2NUMBER);if(location){EXPRESSIONS[location-1]=e;}else{EXPRESSIONS.push(e);}return new Expression(e);};libExports.rpn=function(expression){return _.tokenize(_.toRPN(expression));};libExports.convertToLaTeX=function(e,opt){return _.toTeX(e,opt);};libExports.convertFromLaTeX=function(e){var txt=LaTeX.parse(_.tokenize(e));return new Expression(_.parse(txt));};libExports.version=function(add_on){if(add_on){try{return C[add_on].version;}catch(e){return"No module named "+add_on+" found!";}}return version;};libExports.getWarnings=function(){return WARNINGS;};libExports.setConstant=function(constant,value){validateName(constant);if(!isReserved(constant)){if(value==='delete'||value===''){delete _.CONSTANTS[constant];}else{if(isNaN(value))throw new NerdamerTypeError('Constant must be a number!');_.CONSTANTS[constant]=value;}}return this;};libExports.getConstant=function(constant){return String(_.constant[constant]);};libExports.setFunction=setFunction;libExports.getCore=function(){return C;};libExports.getExpression=libExports.getEquation=Expression.getExpression;libExports.reserved=function(asArray){if(asArray){return RESERVED;}return RESERVED.join(', ');};libExports.clear=function(equation_number,keep_EXPRESSIONS_fixed){if(equation_number==='all'){EXPRESSIONS=[];}else if(equation_number==='last'){EXPRESSIONS.pop();}else if(equation_number==='first'){EXPRESSIONS.shift();}else{var index=!equation_number?EXPRESSIONS.length:equation_number-1;keep_EXPRESSIONS_fixed===true?EXPRESSIONS[index]=undefined:_remove(EXPRESSIONS,index);}return this;};libExports.flush=function(){this.clear('all');return this;};libExports.expressions=function(asObject,asLaTeX,option){var result=asObject?{}:[];for(var i=0;i<EXPRESSIONS.length;i++){var eq=asLaTeX?LaTeX.latex(EXPRESSIONS[i],option):_text(EXPRESSIONS[i],option);asObject?result[i+1]=eq:result.push(eq);}return result;};libExports.register=function(obj){var core=this.getCore();if(isArray(obj)){for(var i=0;i<obj.length;i++){if(obj)this.register(obj[i]);}}else if(obj&&Settings.exclude.indexOf(obj.name)===-1){if(obj.dependencies){for(var i=0;i<obj.dependencies.length;i++){if(!core[obj.dependencies[i]])throw new Error(format('{0} requires {1} to be loaded!',obj.name,obj.dependencies[i]));}}var parent_obj=obj.parent,fn=obj.build.call(core);if(parent_obj){if(!core[parent_obj])core[obj.parent]={};var ref_obj=parent_obj==='nerdamer'?this:core[parent_obj];ref_obj[obj.name]=fn;}if(obj.visible)_.functions[obj.name]=[fn,obj.numargs];}};libExports.validateName=validateName;libExports.validVarName=function(varname){try{validateName(varname);return RESERVED.indexOf(varname)===-1;}catch(e){return false;}};libExports.supported=function(){return keys(_.functions);};libExports.numEquations=libExports.numExpressions=function(){return EXPRESSIONS.length;};libExports.setVar=function(v,val){validateName(v);if(v in _.CONSTANTS)err('Cannot set value for constant '+v);if(val==='delete'||val==='')delete VARS[v];else{VARS[v]=isSymbol(val)?val:_.parse(val);}return this;};libExports.getVar=function(v){return VARS[v];};libExports.clearVars=function(){VARS={};return this;};libExports.load=function(loader){loader.call(this);return this;};libExports.getVars=function(output,option){output=output||'text';var variables={};if(output==='object')variables=VARS;else{for(var v in VARS){if(output==='latex'){variables[v]=VARS[v].latex(option);}else if(output==='text'){variables[v]=VARS[v].text(option);}}}return variables;};libExports.set=function(setting,value){if(_typeof(setting)==='object')for(var x in setting){libExports.set(x,setting[x]);}var disallowed=['SAFE'];if(disallowed.indexOf(setting)!==-1)err('Cannot modify setting: '+setting);if(setting==='PRECISION')bigDec.set({precision:value});else if(setting==='USE_LN'&&value===true){Settings.LOG='LN';Settings.LOG10='log';_.functions['log']=Settings.LOG_FNS.log10;_.functions['log'][0]=function(x){if(x.isConstant())return new _Symbol(Math.log10(x));return _.symfunction(Settings.LOG10,[x]);};_.functions['LN']=Settings.LOG_FNS.log;delete _.functions['log10'];}else Settings[setting]=value;};libExports.get=function(setting){return Settings[setting];};libExports.api=function(override){var linker=function linker(fname){return function(){var args=[].slice.call(arguments);for(var i=0;i<args.length;i++){args[i]=_.parse(args[i]);}return new Expression(block('PARSE2NUMBER',function(){return _.callfunction(fname,args);}));};};for(var x in _.functions){if(!(x in libExports)||override)libExports[x]=linker(x);}};libExports.replaceFunction=function(name,fn,num_args){var existing=_.functions[name];var new_num_args=typeof num_args==='undefined'?existing[1]:num_args;_.functions[name]=[fn.call(undefined,existing[0],C),new_num_args];};libExports.setOperator=function(operator,shift){_.setOperator(operator,shift);};libExports.getOperator=function(operator){return _.getOperator(operator);};libExports.aliasOperator=function(operator,withOperator){_.aliasOperator(operator,withOperator);};libExports.tree=function(expression){return _.tree(_.toRPN(_.tokenize(expression)));};libExports.htmlTree=function(expression,indent){var tree=this.tree(expression);return'<div class="tree">\n'+'    <ul>\n'+'        <li>\n'+tree.toHTML(3,indent)+'\n'+'        </li>\n'+'    </ul>\n'+'</div>';};libExports.addPeeker=function(name,f){if(_.peekers[name])_.peekers[name].push(f);};libExports.removePeeker=function(name,f){_remove(_.peekers[name],f);};libExports.parse=function(e){return String(e).split(';').map(function(x){return _.parse(x);});};libExports.api();return libExports;}({bigInt:function(){var bigInt=function(undefined){"use strict";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),LOG_MAX_INT=Math.log(MAX_INT);function Integer(v,radix){if(typeof v==="undefined")return Integer[0];if(typeof radix!=="undefined")return+radix===10?parseValue(v):parseBase(v,radix);return parseValue(v);}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false;}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true;}SmallInteger.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT;}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)];}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE;}}return arr;}function trim(v){var i=v.length;while(v[--i]===0){;}v.length=i+1;}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0;}return x;}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n);}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base;}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base;}if(carry>0)r.push(carry);return r;}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a);}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1;}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base);}return r;}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate());}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign);}return new BigInteger(addAny(a,b),this.sign);};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate());}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b));}return new BigInteger(addSmall(b,Math.abs(a)),a<0);};SmallInteger.prototype.plus=SmallInteger.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1;}else borrow=0;r[i]=difference;}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break;}r[i]=difference;}for(;i<a_l;i++){r[i]=a[i];}trim(r);return r;}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b);}else{value=subtract(b,a);sign=!sign;}value=arrayToSmall(value);if(typeof value==="number"){if(sign)value=-value;return new SmallInteger(value);}return new BigInteger(value,sign);}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference;}r=arrayToSmall(r);if(typeof r==="number"){if(sign)r=-r;return new SmallInteger(r);}return new BigInteger(r,sign);}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate());}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign);};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate());}var b=n.value;if(n.isSmall){return new SmallInteger(a-b);}return subtractSmall(b,Math.abs(a),a>=0);};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign);};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small;};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false);};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value));};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry;}}trim(r);return r;}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base;}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base);}return r;}function shiftLeft(x,n){var r=[];while(n-->0){r.push(0);}return r.concat(x);}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product;}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0;}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign);}b=smallToArray(abs);}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign);};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign);}return new BigInteger(multiplyLong(b,smallToArray(a)),sign);}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value);}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign);};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign);};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this);};SmallInteger.prototype.times=SmallInteger.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base;}r[i+l]=carry;}trim(r);return r;}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false);};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false);};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit);}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1;}else{remainder[shift+i]=borrow;borrow=0;}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0;}else{remainder[shift+i]=carry;carry=1;}}borrow+=carry;}result[shift]=quotientDigit;}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)];}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue;}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base;}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--;}while(guess);result.push(guess);part=subtract(part,check);}result.reverse();return[arrayToSmall(result),arrayToSmall(part)];}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0;}return[quotient,remainder|0];}function divModAny(self,v){var value,n=parseValue(v);var a=self.value,b=n.value;var quotient;if(b===0)throw new Error("Cannot divide by zero");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)];}return[Integer[0],self];}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient==="number"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)];}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)];}b=smallToArray(abs);}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient==="number"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient);}else quotient=new BigInteger(quotient,qSign);if(typeof mod==="number"){if(mSign)mod=-mod;mod=new SmallInteger(mod);}else mod=new BigInteger(mod,mSign);return[quotient,mod];}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]};};SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0];};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1];};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0];}if(!n.isSmall)throw new Error("The exponent "+n.toString()+" is too large.");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value));}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b;}if(b===0)break;b/=2;x=x.square();}return y;};SmallInteger.prototype.pow=BigInteger.prototype.pow;BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error("Cannot take modPow with modulus 0");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod);}return r;};SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1;}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1;}return 0;}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b);};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1;}return-1;};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1;}if(v===-Infinity){return 1;}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1;}if(n.isSmall){return this.sign?-1:1;}return compareAbs(a,b)*(this.sign?-1:1);};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1;}if(v===-Infinity){return 1;}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1;}if(a<0!==n.sign){return a<0?-1:1;}return a<0?1:-1;};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0;};SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0;};SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0;};SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0;};SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0;};SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0;};SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0;};SmallInteger.prototype.isEven=function(){return(this.value&1)===0;};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1;};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1;};BigInteger.prototype.isPositive=function(){return!this.sign;};SmallInteger.prototype.isPositive=function(){return this.value>0;};BigInteger.prototype.isNegative=function(){return this.sign;};SmallInteger.prototype.isNegative=function(){return this.value<0;};BigInteger.prototype.isUnit=function(){return false;};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1;};BigInteger.prototype.isZero=function(){return false;};SmallInteger.prototype.isZero=function(){return this.value===0;};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);var value=n.value;if(value===0)return false;if(value===1)return true;if(value===2)return this.isEven();return this.mod(n).equals(Integer[0]);};SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true;}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven()){b=b.divide(2),r++;}next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.equals(Integer[1])||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next;}return false;}return true;}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,325,9375,28178,450775,9780504,1795265022]);var logN=Math.log(2)*bits;var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2));}return millerRabinTest(n,a);};SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)));}return millerRabinTest(n,a);};SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.equals(bigInt.zero)){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR));}if(!r.equals(1))throw new Error(this.toString()+" and "+n.toString()+" are not co-prime");if(t.compare(0)===-1){t=t.add(n);}if(this.isNegative()){return t.negate();}return t;};SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign);}return new BigInteger(addSmall(value,1),this.sign);};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false);};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true);}return subtractSmall(value,1,this.sign);};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true);};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE){powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);}var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return(typeof n==="number"||typeof n==="string")&&+Math.abs(n)<=BASE||n instanceof BigInteger&&n.value.length<=1;}BigInteger.prototype.shiftLeft=function(n){if(!shift_isSmall(n)){throw new Error(String(n)+" is too large for shifting.");}n=+n;if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1;}return result.multiply(powersOfTwo[n]);};SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(n){var remQuo;if(!shift_isSmall(n)){throw new Error(String(n)+" is too large for shifting.");}n=+n;if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1;}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];};SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit;}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit;}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit));}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]));}return sum;}BigInteger.prototype.not=function(){return this.negate().prev();};SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b;});};SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b;});};SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b;});};SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v==="number"?v|LOBMASK_I:v[0]+v[1]*BASE|LOBMASK_BI;return x&-x;}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2};}return{p:bigInt(1),e:0};}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1));}if(n.compareTo(bigInt(0))===0){return bigInt(0);}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1));};SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b;}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b;}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=Math.min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d);}while(a.isEven()){a=a.divide(roughLOB(a));}do{while(b.isEven()){b=b.divide(roughLOB(b));}if(a.greater(b)){t=b;b=a;a=t;}b=b.subtract(a);}while(!b.isZero());return c.isUnit()?a:a.multiply(c);}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b);}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var length=range.value.length-1;var result=[],restricted=true;for(var i=length;i>=0;i--){var top=restricted?range.value[i]:BASE;var digit=truncate(Math.random()*top);result.unshift(digit);if(digit<top)restricted=false;}result=arrayToSmall(result);return low.add(typeof result==="number"?new SmallInteger(result):new BigInteger(result,false));}var parseBase=function parseBase(text,base){var length=text.length;var i;var absBase=Math.abs(base);for(var i=0;i<length;i++){var c=text[i].toLowerCase();if(c==="-")continue;if(/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&+c>=absBase){if(c==="1"&&absBase===1)continue;throw new Error(c+" is not a valid digit in base "+base+".");}else if(c.charCodeAt(0)-87>=absBase){throw new Error(c+" is not a valid digit in base "+base+".");}}}if(2<=base&&base<=36){if(length<=LOG_MAX_INT/Math.log(base)){var result=parseInt(text,base);if(isNaN(result)){throw new Error(c+" is not a valid digit in base "+base+".");}return new SmallInteger(parseInt(text,base));}}base=parseValue(base);var digits=[];var isNegative=text[0]==="-";for(i=isNegative?1:0;i<text.length;i++){var c=text[i].toLowerCase(),charCode=c.charCodeAt(0);if(48<=charCode&&charCode<=57)digits.push(parseValue(c));else if(97<=charCode&&charCode<=122)digits.push(parseValue(c.charCodeAt(0)-87));else if(c==="<"){var start=i;do{i++;}while(text[i]!==">");digits.push(parseValue(text.slice(start+1,i)));}else throw new Error(c+" is not a valid character");}return parseBaseFromArray(digits,base,isNegative);};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base);}return isNegative?val.negate():val;}function stringify(digit){if(digit<=35){return"0123456789abcdefghijklmnopqrstuvwxyz".charAt(digit);}return"<"+digit+">";}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error("Cannot convert nonzero numbers to base 0.");}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n)).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(+n-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false};}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs();}if(base.equals(1)){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(+n)).map(Number.prototype.valueOf,1),isNegative:neg};}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next();}out.push(digit.toJSNumber());}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg};}function toBaseString(n,base){var arr=toBase(n,base);return(arr.isNegative?"-":"")+arr.value.map(stringify).join("");}BigInteger.prototype.toArray=function(radix){return toBase(this,radix);};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix);};BigInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix);var v=this.value,l=v.length,str=String(v[--l]),zeros="0000000",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit;}var sign=this.sign?"-":"";return sign+str;};SmallInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix);return String(this.value);};BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString();};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10);};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value;};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return new SmallInteger(x);throw new Error("Invalid integer: "+v);}var sign=v[0]==="-";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error("Invalid integer: "+split.join("e"));if(split.length===2){var exp=split[1];if(exp[0]==="+")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error("Invalid integer: "+exp+" is not a valid exponent.");var text=split[0];var decimalPlace=text.indexOf(".");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1);}if(exp<0)throw new Error("Cannot include negative exponent part for integers");text+=new Array(exp+1).join("0");v=text;}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error("Invalid integer: "+v);var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l;}trim(r);return new BigInteger(r,sign);}function parseNumberValue(v){if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+" is not an integer.");return new SmallInteger(v);}return parseStringValue(v.toString());}function parseValue(v){if(typeof v==="number"){return parseNumberValue(v);}if(typeof v==="string"){return parseStringValue(v);}return v;}for(var i=0;i<1e3;i++){Integer[i]=new SmallInteger(i);if(i>0)Integer[-i]=new SmallInteger(-i);}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger;};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative);};return Integer;}();if(typeof module!=="undefined"&&module.hasOwnProperty("exports")){module.exports=bigInt;}if(typeof define==="function"&&define.amd){define("big-integer",[],function(){return bigInt;});}return bigInt;}(),bigDec:function(n){"use strict";var e,i,t,r=9e15,s=1e9,o="0123456789abcdef",u="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",c="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",f={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-r,maxE:r,crypto:!1},h=!0,a="[DecimalError] ",d=a+"Invalid argument: ",l=a+"Precision limit exceeded",p=a+"crypto unavailable",g=Math.floor,w=Math.pow,m=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,v=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,N=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,b=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,E=1e7,x=7,M=u.length-1,y=c.length-1,q={name:"[object Decimal]"};function O(n){var e,i,t,r=n.length-1,s="",o=n[0];if(r>0){for(s+=o,e=1;e<r;e++){t=n[e]+"",(i=x-t.length)&&(s+=S(i)),s+=t;}o=n[e],(i=x-(t=o+"").length)&&(s+=S(i));}else if(0===o)return"0";for(;o%10==0;){o/=10;}return s+o;}function F(n,e,i){if(n!==~~n||n<e||n>i)throw Error(d+n);}function A(n,e,i,t){var r,s,o,u;for(s=n[0];s>=10;s/=10){--e;}return--e<0?(e+=x,r=0):(r=Math.ceil((e+1)/x),e%=x),s=w(10,x-e),u=n[r]%s|0,null==t?e<3?(0==e?u=u/100|0:1==e&&(u=u/10|0),o=i<4&&99999==u||i>3&&49999==u||5e4==u||0==u):o=(i<4&&u+1==s||i>3&&u+1==s/2)&&(n[r+1]/s/100|0)==w(10,e-2)-1||(u==s/2||0==u)&&0==(n[r+1]/s/100|0):e<4?(0==e?u=u/1e3|0:1==e?u=u/100|0:2==e&&(u=u/10|0),o=(t||i<4)&&9999==u||!t&&i>3&&4999==u):o=((t||i<4)&&u+1==s||!t&&i>3&&u+1==s/2)&&(n[r+1]/s/1e3|0)==w(10,e-3)-1,o;}function D(n,e,i){for(var t,r,s=[0],u=0,c=n.length;u<c;){for(r=s.length;r--;){s[r]*=e;}for(s[0]+=o.indexOf(n.charAt(u++)),t=0;t<s.length;t++){s[t]>i-1&&(void 0===s[t+1]&&(s[t+1]=0),s[t+1]+=s[t]/i|0,s[t]%=i);}}return s.reverse();}q.absoluteValue=q.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),P(n);},q.ceil=function(){return P(new this.constructor(this),this.e+1,2);},q.comparedTo=q.cmp=function(n){var e,i,t,r,s=this,o=s.d,u=(n=new s.constructor(n)).d,c=s.s,f=n.s;if(!o||!u)return c&&f?c!==f?c:o===u?0:!o^c<0?1:-1:NaN;if(!o[0]||!u[0])return o[0]?c:u[0]?-f:0;if(c!==f)return c;if(s.e!==n.e)return s.e>n.e^c<0?1:-1;for(e=0,i=(t=o.length)<(r=u.length)?t:r;e<i;++e){if(o[e]!==u[e])return o[e]>u[e]^c<0?1:-1;}return t===r?0:t>r^c<0?1:-1;},q.cosine=q.cos=function(){var n,e,i=this,r=i.constructor;return i.d?i.d[0]?(n=r.precision,e=r.rounding,r.precision=n+Math.max(i.e,i.sd())+x,r.rounding=1,i=function(n,e){var i,t,r=e.d.length;r<32?(i=Math.ceil(r/3),t=Math.pow(4,-i).toString()):(i=16,t="2.3283064365386962890625e-10");n.precision+=i,e=W(n,1,e.times(t),new n(1));for(var s=i;s--;){var o=e.times(e);e=o.times(o).minus(o).times(8).plus(1);}return n.precision-=i,e;}(r,J(r,i)),r.precision=n,r.rounding=e,P(2==t||3==t?i.neg():i,n,e,!0)):new r(1):new r(NaN);},q.cubeRoot=q.cbrt=function(){var n,e,i,t,r,s,o,u,c,f,a=this,d=a.constructor;if(!a.isFinite()||a.isZero())return new d(a);for(h=!1,(s=a.s*Math.pow(a.s*a,1/3))&&Math.abs(s)!=1/0?t=new d(s.toString()):(i=O(a.d),(s=((n=a.e)-i.length+1)%3)&&(i+=1==s||-2==s?"0":"00"),s=Math.pow(i,1/3),n=g((n+1)/3)-(n%3==(n<0?-1:2)),(t=new d(i=s==1/0?"5e"+n:(i=s.toExponential()).slice(0,i.indexOf("e")+1)+n)).s=a.s),o=(n=d.precision)+3;;){if(f=(c=(u=t).times(u).times(u)).plus(a),t=Z(f.plus(a).times(u),f.plus(c),o+2,1),O(u.d).slice(0,o)===(i=O(t.d)).slice(0,o)){if("9999"!=(i=i.slice(o-3,o+1))&&(r||"4999"!=i)){+i&&(+i.slice(1)||"5"!=i.charAt(0))||(P(t,n+1,1),e=!t.times(t).times(t).eq(a));break;}if(!r&&(P(u,n+1,0),u.times(u).times(u).eq(a))){t=u;break;}o+=4,r=1;}}return h=!0,P(t,n,d.rounding,e);},q.decimalPlaces=q.dp=function(){var n,e=this.d,i=NaN;if(e){if(i=((n=e.length-1)-g(this.e/x))*x,n=e[n])for(;n%10==0;n/=10){i--;}i<0&&(i=0);}return i;},q.dividedBy=q.div=function(n){return Z(this,new this.constructor(n));},q.dividedToIntegerBy=q.divToInt=function(n){var e=this.constructor;return P(Z(this,new e(n),0,1,1),e.precision,e.rounding);},q.equals=q.eq=function(n){return 0===this.cmp(n);},q.floor=function(){return P(new this.constructor(this),this.e+1,3);},q.greaterThan=q.gt=function(n){return this.cmp(n)>0;},q.greaterThanOrEqualTo=q.gte=function(n){var e=this.cmp(n);return 1==e||0===e;},q.hyperbolicCosine=q.cosh=function(){var n,e,i,t,r,s=this,o=s.constructor,u=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return u;i=o.precision,t=o.rounding,o.precision=i+Math.max(s.e,s.sd())+4,o.rounding=1,(r=s.d.length)<32?(n=Math.ceil(r/3),e=Math.pow(4,-n).toString()):(n=16,e="2.3283064365386962890625e-10"),s=W(o,1,s.times(e),new o(1),!0);for(var c,f=n,h=new o(8);f--;){c=s.times(s),s=u.minus(c.times(h.minus(c.times(h))));}return P(s,o.precision=i,o.rounding=t,!0);},q.hyperbolicSine=q.sinh=function(){var n,e,i,t,r=this,s=r.constructor;if(!r.isFinite()||r.isZero())return new s(r);if(e=s.precision,i=s.rounding,s.precision=e+Math.max(r.e,r.sd())+4,s.rounding=1,(t=r.d.length)<3)r=W(s,2,r,r,!0);else{n=(n=1.4*Math.sqrt(t))>16?16:0|n,r=W(s,2,r=r.times(Math.pow(5,-n)),r,!0);for(var o,u=new s(5),c=new s(16),f=new s(20);n--;){o=r.times(r),r=r.times(u.plus(o.times(c.times(o).plus(f))));}}return s.precision=e,s.rounding=i,P(r,e,i,!0);},q.hyperbolicTangent=q.tanh=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+7,t.rounding=1,Z(i.sinh(),i.cosh(),t.precision=n,t.rounding=e)):new t(i.s);},q.inverseCosine=q.acos=function(){var n,e=this,i=e.constructor,t=e.abs().cmp(1),r=i.precision,s=i.rounding;return-1!==t?0===t?e.isNeg()?_(i,r,s):new i(0):new i(NaN):e.isZero()?_(i,r+4,s).times(.5):(i.precision=r+6,i.rounding=1,e=e.asin(),n=_(i,r+4,s).times(.5),i.precision=r,i.rounding=s,n.minus(e));},q.inverseHyperbolicCosine=q.acosh=function(){var n,e,i=this,t=i.constructor;return i.lte(1)?new t(i.eq(1)?0:NaN):i.isFinite()?(n=t.precision,e=t.rounding,t.precision=n+Math.max(Math.abs(i.e),i.sd())+4,t.rounding=1,h=!1,i=i.times(i).minus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln()):new t(i);},q.inverseHyperbolicSine=q.asinh=function(){var n,e,i=this,t=i.constructor;return!i.isFinite()||i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+2*Math.max(Math.abs(i.e),i.sd())+6,t.rounding=1,h=!1,i=i.times(i).plus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln());},q.inverseHyperbolicTangent=q.atanh=function(){var n,e,i,t,r=this,s=r.constructor;return r.isFinite()?r.e>=0?new s(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=s.precision,e=s.rounding,t=r.sd(),Math.max(t,n)<2*-r.e-1?P(new s(r),n,e,!0):(s.precision=i=t-r.e,r=Z(r.plus(1),new s(1).minus(r),i+n,1),s.precision=n+4,s.rounding=1,r=r.ln(),s.precision=n,s.rounding=e,r.times(.5))):new s(NaN);},q.inverseSine=q.asin=function(){var n,e,i,t,r=this,s=r.constructor;return r.isZero()?new s(r):(e=r.abs().cmp(1),i=s.precision,t=s.rounding,-1!==e?0===e?((n=_(s,i+4,t).times(.5)).s=r.s,n):new s(NaN):(s.precision=i+6,s.rounding=1,r=r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(),s.precision=i,s.rounding=t,r.times(2)));},q.inverseTangent=q.atan=function(){var n,e,i,t,r,s,o,u,c,f=this,a=f.constructor,d=a.precision,l=a.rounding;if(f.isFinite()){if(f.isZero())return new a(f);if(f.abs().eq(1)&&d+4<=y)return(o=_(a,d+4,l).times(.25)).s=f.s,o;}else{if(!f.s)return new a(NaN);if(d+4<=y)return(o=_(a,d+4,l).times(.5)).s=f.s,o;}for(a.precision=u=d+10,a.rounding=1,n=i=Math.min(28,u/x+2|0);n;--n){f=f.div(f.times(f).plus(1).sqrt().plus(1));}for(h=!1,e=Math.ceil(u/x),t=1,c=f.times(f),o=new a(f),r=f;-1!==n;){if(r=r.times(c),s=o.minus(r.div(t+=2)),r=r.times(c),void 0!==(o=s.plus(r.div(t+=2))).d[e])for(n=e;o.d[n]===s.d[n]&&n--;){;}}return i&&(o=o.times(2<<i-1)),h=!0,P(o,a.precision=d,a.rounding=l,!0);},q.isFinite=function(){return!!this.d;},q.isInteger=q.isInt=function(){return!!this.d&&g(this.e/x)>this.d.length-2;},q.isNaN=function(){return!this.s;},q.isNegative=q.isNeg=function(){return this.s<0;},q.isPositive=q.isPos=function(){return this.s>0;},q.isZero=function(){return!!this.d&&0===this.d[0];},q.lessThan=q.lt=function(n){return this.cmp(n)<0;},q.lessThanOrEqualTo=q.lte=function(n){return this.cmp(n)<1;},q.logarithm=q.log=function(n){var e,i,t,r,s,o,u,c,f=this.constructor,a=f.precision,d=f.rounding;if(null==n)n=new f(10),e=!0;else{if(i=(n=new f(n)).d,n.s<0||!i||!i[0]||n.eq(1))return new f(NaN);e=n.eq(10);}if(i=this.d,this.s<0||!i||!i[0]||this.eq(1))return new f(i&&!i[0]?-1/0:1!=this.s?NaN:i?0:1/0);if(e)if(i.length>1)s=!0;else{for(r=i[0];r%10==0;){r/=10;}s=1!==r;}if(h=!1,o=B(this,u=a+5),t=e?U(f,u+10):B(n,u),A((c=Z(o,t,u,1)).d,r=a,d))do{if(o=B(this,u+=10),t=e?U(f,u+10):B(n,u),c=Z(o,t,u,1),!s){+O(c.d).slice(r+1,r+15)+1==1e14&&(c=P(c,a+1,0));break;}}while(A(c.d,r+=10,d));return h=!0,P(c,a,d);},q.minus=q.sub=function(n){var e,i,t,r,s,o,u,c,f,a,d,l,p=this,w=p.constructor;if(n=new w(n),!p.d||!n.d)return p.s&&n.s?p.d?n.s=-n.s:n=new w(n.d||p.s!==n.s?p:NaN):n=new w(NaN),n;if(p.s!=n.s)return n.s=-n.s,p.plus(n);if(f=p.d,l=n.d,u=w.precision,c=w.rounding,!f[0]||!l[0]){if(l[0])n.s=-n.s;else{if(!f[0])return new w(3===c?-0:0);n=new w(p);}return h?P(n,u,c):n;}if(i=g(n.e/x),a=g(p.e/x),f=f.slice(),s=a-i){for((d=s<0)?(e=f,s=-s,o=l.length):(e=l,i=a,o=f.length),s>(t=Math.max(Math.ceil(u/x),o)+2)&&(s=t,e.length=1),e.reverse(),t=s;t--;){e.push(0);}e.reverse();}else{for((d=(t=f.length)<(o=l.length))&&(o=t),t=0;t<o;t++){if(f[t]!=l[t]){d=f[t]<l[t];break;}}s=0;}for(d&&(e=f,f=l,l=e,n.s=-n.s),o=f.length,t=l.length-o;t>0;--t){f[o++]=0;}for(t=l.length;t>s;){if(f[--t]<l[t]){for(r=t;r&&0===f[--r];){f[r]=E-1;}--f[r],f[t]+=E;}f[t]-=l[t];}for(;0===f[--o];){f.pop();}for(;0===f[0];f.shift()){--i;}return f[0]?(n.d=f,n.e=L(f,i),h?P(n,u,c):n):new w(3===c?-0:0);},q.modulo=q.mod=function(n){var e,i=this,t=i.constructor;return n=new t(n),!i.d||!n.s||n.d&&!n.d[0]?new t(NaN):!n.d||i.d&&!i.d[0]?P(new t(i),t.precision,t.rounding):(h=!1,9==t.modulo?(e=Z(i,n.abs(),0,3,1)).s*=n.s:e=Z(i,n,0,t.modulo,1),e=e.times(n),h=!0,i.minus(e));},q.naturalExponential=q.exp=function(){return H(this);},q.naturalLogarithm=q.ln=function(){return B(this);},q.negated=q.neg=function(){var n=new this.constructor(this);return n.s=-n.s,P(n);},q.plus=q.add=function(n){var e,i,t,r,s,o,u,c,f,a,d=this,l=d.constructor;if(n=new l(n),!d.d||!n.d)return d.s&&n.s?d.d||(n=new l(n.d||d.s===n.s?d:NaN)):n=new l(NaN),n;if(d.s!=n.s)return n.s=-n.s,d.minus(n);if(f=d.d,a=n.d,u=l.precision,c=l.rounding,!f[0]||!a[0])return a[0]||(n=new l(d)),h?P(n,u,c):n;if(s=g(d.e/x),t=g(n.e/x),f=f.slice(),r=s-t){for(r<0?(i=f,r=-r,o=a.length):(i=a,t=s,o=f.length),r>(o=(s=Math.ceil(u/x))>o?s+1:o+1)&&(r=o,i.length=1),i.reverse();r--;){i.push(0);}i.reverse();}for((o=f.length)-(r=a.length)<0&&(r=o,i=a,a=f,f=i),e=0;r;){e=(f[--r]=f[r]+a[r]+e)/E|0,f[r]%=E;}for(e&&(f.unshift(e),++t),o=f.length;0==f[--o];){f.pop();}return n.d=f,n.e=L(f,t),h?P(n,u,c):n;},q.precision=q.sd=function(n){var e,i=this;if(void 0!==n&&n!==!!n&&1!==n&&0!==n)throw Error(d+n);return i.d?(e=k(i.d),n&&i.e+1>e&&(e=i.e+1)):e=NaN,e;},q.round=function(){var n=this,e=n.constructor;return P(new e(n),n.e+1,e.rounding);},q.sine=q.sin=function(){var n,e,i=this,r=i.constructor;return i.isFinite()?i.isZero()?new r(i):(n=r.precision,e=r.rounding,r.precision=n+Math.max(i.e,i.sd())+x,r.rounding=1,i=function(n,e){var i,t=e.d.length;if(t<3)return W(n,2,e,e);i=(i=1.4*Math.sqrt(t))>16?16:0|i,e=e.times(Math.pow(5,-i)),e=W(n,2,e,e);for(var r,s=new n(5),o=new n(16),u=new n(20);i--;){r=e.times(e),e=e.times(s.plus(r.times(o.times(r).minus(u))));}return e;}(r,J(r,i)),r.precision=n,r.rounding=e,P(t>2?i.neg():i,n,e,!0)):new r(NaN);},q.squareRoot=q.sqrt=function(){var n,e,i,t,r,s,o=this,u=o.d,c=o.e,f=o.s,a=o.constructor;if(1!==f||!u||!u[0])return new a(!f||f<0&&(!u||u[0])?NaN:u?o:1/0);for(h=!1,0==(f=Math.sqrt(+o))||f==1/0?(((e=O(u)).length+c)%2==0&&(e+="0"),f=Math.sqrt(e),c=g((c+1)/2)-(c<0||c%2),t=new a(e=f==1/0?"1e"+c:(e=f.toExponential()).slice(0,e.indexOf("e")+1)+c)):t=new a(f.toString()),i=(c=a.precision)+3;;){if(t=(s=t).plus(Z(o,s,i+2,1)).times(.5),O(s.d).slice(0,i)===(e=O(t.d)).slice(0,i)){if("9999"!=(e=e.slice(i-3,i+1))&&(r||"4999"!=e)){+e&&(+e.slice(1)||"5"!=e.charAt(0))||(P(t,c+1,1),n=!t.times(t).eq(o));break;}if(!r&&(P(s,c+1,0),s.times(s).eq(o))){t=s;break;}i+=4,r=1;}}return h=!0,P(t,c,a.rounding,n);},q.tangent=q.tan=function(){var n,e,i=this,r=i.constructor;return i.isFinite()?i.isZero()?new r(i):(n=r.precision,e=r.rounding,r.precision=n+10,r.rounding=1,(i=i.sin()).s=1,i=Z(i,new r(1).minus(i.times(i)).sqrt(),n+10,0),r.precision=n,r.rounding=e,P(2==t||4==t?i.neg():i,n,e,!0)):new r(NaN);},q.times=q.mul=function(n){var e,i,t,r,s,o,u,c,f,a=this,d=a.constructor,l=a.d,p=(n=new d(n)).d;if(n.s*=a.s,!(l&&l[0]&&p&&p[0]))return new d(!n.s||l&&!l[0]&&!p||p&&!p[0]&&!l?NaN:l&&p?0*n.s:n.s/0);for(i=g(a.e/x)+g(n.e/x),(c=l.length)<(f=p.length)&&(s=l,l=p,p=s,o=c,c=f,f=o),s=[],t=o=c+f;t--;){s.push(0);}for(t=f;--t>=0;){for(e=0,r=c+t;r>t;){u=s[r]+p[t]*l[r-t-1]+e,s[r--]=u%E|0,e=u/E|0;}s[r]=(s[r]+e)%E|0;}for(;!s[--o];){s.pop();}return e?++i:s.shift(),n.d=s,n.e=L(s,i),h?P(n,d.precision,d.rounding):n;},q.toBinary=function(n,e){return z(this,2,n,e);},q.toDecimalPlaces=q.toDP=function(n,e){var i=this,t=i.constructor;return i=new t(i),void 0===n?i:(F(n,0,s),void 0===e?e=t.rounding:F(e,0,8),P(i,n+i.e+1,e));},q.toExponential=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,!0):(F(n,0,s),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n+1,e),!0,n+1)),t.isNeg()&&!t.isZero()?"-"+i:i;},q.toFixed=function(n,e){var i,t,r=this,o=r.constructor;return void 0===n?i=R(r):(F(n,0,s),void 0===e?e=o.rounding:F(e,0,8),i=R(t=P(new o(r),n+r.e+1,e),!1,n+t.e+1)),r.isNeg()&&!r.isZero()?"-"+i:i;},q.toFraction=function(n){var e,i,t,r,s,o,u,c,f,a,l,p,g=this,m=g.d,v=g.constructor;if(!m)return new v(g);if(f=i=new v(1),t=c=new v(0),o=(s=(e=new v(t)).e=k(m)-g.e-1)%x,e.d[0]=w(10,o<0?x+o:o),null==n)n=s>0?e:f;else{if(!(u=new v(n)).isInt()||u.lt(f))throw Error(d+u);n=u.gt(e)?s>0?e:f:u;}for(h=!1,u=new v(O(m)),a=v.precision,v.precision=s=m.length*x*2;l=Z(u,e,0,1,1),1!=(r=i.plus(l.times(t))).cmp(n);){i=t,t=r,r=f,f=c.plus(l.times(r)),c=r,r=e,e=u.minus(l.times(r)),u=r;}return r=Z(n.minus(i),t,0,1,1),c=c.plus(r.times(f)),i=i.plus(r.times(t)),c.s=f.s=g.s,p=Z(f,t,s,1).minus(g).abs().cmp(Z(c,i,s,1).minus(g).abs())<1?[f,t]:[c,i],v.precision=a,h=!0,p;},q.toHexadecimal=q.toHex=function(n,e){return z(this,16,n,e);},q.toNearest=function(n,e){var i=this,t=i.constructor;if(i=new t(i),null==n){if(!i.d)return i;n=new t(1),e=t.rounding;}else{if(n=new t(n),void 0===e?e=t.rounding:F(e,0,8),!i.d)return n.s?i:n;if(!n.d)return n.s&&(n.s=i.s),n;}return n.d[0]?(h=!1,i=Z(i,n,0,e,1).times(n),h=!0,P(i)):(n.s=i.s,i=n),i;},q.toNumber=function(){return+this;},q.toOctal=function(n,e){return z(this,8,n,e);},q.toPower=q.pow=function(n){var e,i,t,r,s,o,u=this,c=u.constructor,f=+(n=new c(n));if(!(u.d&&n.d&&u.d[0]&&n.d[0]))return new c(w(+u,f));if((u=new c(u)).eq(1))return u;if(t=c.precision,s=c.rounding,n.eq(1))return P(u,t,s);if((e=g(n.e/x))>=n.d.length-1&&(i=f<0?-f:f)<=9007199254740991)return r=T(c,u,i,t),n.s<0?new c(1).div(r):P(r,t,s);if((o=u.s)<0){if(e<n.d.length-1)return new c(NaN);if(0==(1&n.d[e])&&(o=1),0==u.e&&1==u.d[0]&&1==u.d.length)return u.s=o,u;}return(e=0!=(i=w(+u,f))&&isFinite(i)?new c(i+"").e:g(f*(Math.log("0."+O(u.d))/Math.LN10+u.e+1)))>c.maxE+1||e<c.minE-1?new c(e>0?o/0:0):(h=!1,c.rounding=u.s=1,i=Math.min(12,(e+"").length),(r=H(n.times(B(u,t+i)),t)).d&&A((r=P(r,t+5,1)).d,t,s)&&(e=t+10,+O((r=P(H(n.times(B(u,e+i)),e),e+5,1)).d).slice(t+1,t+15)+1==1e14&&(r=P(r,t+1,0))),r.s=o,h=!0,c.rounding=s,P(r,t,s));},q.toPrecision=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,t.e<=r.toExpNeg||t.e>=r.toExpPos):(F(n,1,s),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n,e),n<=t.e||t.e<=r.toExpNeg,n)),t.isNeg()&&!t.isZero()?"-"+i:i;},q.toSignificantDigits=q.toSD=function(n,e){var i=this.constructor;return void 0===n?(n=i.precision,e=i.rounding):(F(n,1,s),void 0===e?e=i.rounding:F(e,0,8)),P(new i(this),n,e);},q.toString=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()&&!n.isZero()?"-"+i:i;},q.truncated=q.trunc=function(){return P(new this.constructor(this),this.e+1,1);},q.valueOf=q.toJSON=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()?"-"+i:i;};var Z=function(){function n(n,e,i){var t,r=0,s=n.length;for(n=n.slice();s--;){t=n[s]*e+r,n[s]=t%i|0,r=t/i|0;}return r&&n.unshift(r),n;}function e(n,e,i,t){var r,s;if(i!=t)s=i>t?1:-1;else for(r=s=0;r<i;r++){if(n[r]!=e[r]){s=n[r]>e[r]?1:-1;break;}}return s;}function t(n,e,i,t){for(var r=0;i--;){n[i]-=r,r=n[i]<e[i]?1:0,n[i]=r*t+n[i]-e[i];}for(;!n[0]&&n.length>1;){n.shift();}}return function(r,s,o,u,c,f){var h,a,d,l,p,w,m,v,N,b,M,y,q,O,F,A,D,Z,R,L,U=r.constructor,_=r.s==s.s?1:-1,k=r.d,S=s.d;if(!(k&&k[0]&&S&&S[0]))return new U(r.s&&s.s&&(k?!S||k[0]!=S[0]:S)?k&&0==k[0]||!S?0*_:_/0:NaN);for(f?(p=1,a=r.e-s.e):(f=E,p=x,a=g(r.e/p)-g(s.e/p)),R=S.length,D=k.length,b=(N=new U(_)).d=[],d=0;S[d]==(k[d]||0);d++){;}if(S[d]>(k[d]||0)&&a--,null==o?(O=o=U.precision,u=U.rounding):O=c?o+(r.e-s.e)+1:o,O<0)b.push(1),w=!0;else{if(O=O/p+2|0,d=0,1==R){for(l=0,S=S[0],O++;(d<D||l)&&O--;d++){F=l*f+(k[d]||0),b[d]=F/S|0,l=F%S|0;}w=l||d<D;}else{for((l=f/(S[0]+1)|0)>1&&(S=n(S,l,f),k=n(k,l,f),R=S.length,D=k.length),A=R,y=(M=k.slice(0,R)).length;y<R;){M[y++]=0;}(L=S.slice()).unshift(0),Z=S[0],S[1]>=f/2&&++Z;do{l=0,(h=e(S,M,R,y))<0?(q=M[0],R!=y&&(q=q*f+(M[1]||0)),(l=q/Z|0)>1?(l>=f&&(l=f-1),1==(h=e(m=n(S,l,f),M,v=m.length,y=M.length))&&(l--,t(m,R<v?L:S,v,f))):(0==l&&(h=l=1),m=S.slice()),(v=m.length)<y&&m.unshift(0),t(M,m,y,f),-1==h&&(h=e(S,M,R,y=M.length))<1&&(l++,t(M,R<y?L:S,y,f)),y=M.length):0===h&&(l++,M=[0]),b[d++]=l,h&&M[0]?M[y++]=k[A]||0:(M=[k[A]],y=1);}while((A++<D||void 0!==M[0])&&O--);w=void 0!==M[0];}b[0]||b.shift();}if(1==p)N.e=a,i=w;else{for(d=1,l=b[0];l>=10;l/=10){d++;}N.e=d+a*p-1,P(N,c?o+N.e+1:o,u,w);}return N;};}();function P(n,e,i,t){var r,s,o,u,c,f,a,d,l,p=n.constructor;n:if(null!=e){if(!(d=n.d))return n;for(r=1,u=d[0];u>=10;u/=10){r++;}if((s=e-r)<0)s+=x,o=e,c=(a=d[l=0])/w(10,r-o-1)%10|0;else if((l=Math.ceil((s+1)/x))>=(u=d.length)){if(!t)break n;for(;u++<=l;){d.push(0);}a=c=0,r=1,o=(s%=x)-x+1;}else{for(a=u=d[l],r=1;u>=10;u/=10){r++;}c=(o=(s%=x)-x+r)<0?0:a/w(10,r-o-1)%10|0;}if(t=t||e<0||void 0!==d[l+1]||(o<0?a:a%w(10,r-o-1)),f=i<4?(c||t)&&(0==i||i==(n.s<0?3:2)):c>5||5==c&&(4==i||t||6==i&&(s>0?o>0?a/w(10,r-o):0:d[l-1])%10&1||i==(n.s<0?8:7)),e<1||!d[0])return d.length=0,f?(e-=n.e+1,d[0]=w(10,(x-e%x)%x),n.e=-e||0):d[0]=n.e=0,n;if(0==s?(d.length=l,u=1,l--):(d.length=l+1,u=w(10,x-s),d[l]=o>0?(a/w(10,r-o)%w(10,o)|0)*u:0),f)for(;;){if(0==l){for(s=1,o=d[0];o>=10;o/=10){s++;}for(o=d[0]+=u,u=1;o>=10;o/=10){u++;}s!=u&&(n.e++,d[0]==E&&(d[0]=1));break;}if(d[l]+=u,d[l]!=E)break;d[l--]=0,u=1;}for(s=d.length;0===d[--s];){d.pop();}}return h&&(n.e>p.maxE?(n.d=null,n.e=NaN):n.e<p.minE&&(n.e=0,n.d=[0])),n;}function R(n,e,i){if(!n.isFinite())return V(n);var t,r=n.e,s=O(n.d),o=s.length;return e?(i&&(t=i-o)>0?s=s.charAt(0)+"."+s.slice(1)+S(t):o>1&&(s=s.charAt(0)+"."+s.slice(1)),s=s+(n.e<0?"e":"e+")+n.e):r<0?(s="0."+S(-r-1)+s,i&&(t=i-o)>0&&(s+=S(t))):r>=o?(s+=S(r+1-o),i&&(t=i-r-1)>0&&(s=s+"."+S(t))):((t=r+1)<o&&(s=s.slice(0,t)+"."+s.slice(t)),i&&(t=i-o)>0&&(r+1===o&&(s+="."),s+=S(t))),s;}function L(n,e){var i=n[0];for(e*=x;i>=10;i/=10){e++;}return e;}function U(n,e,i){if(e>M)throw h=!0,i&&(n.precision=i),Error(l);return P(new n(u),e,1,!0);}function _(n,e,i){if(e>y)throw Error(l);return P(new n(c),e,i,!0);}function k(n){var e=n.length-1,i=e*x+1;if(e=n[e]){for(;e%10==0;e/=10){i--;}for(e=n[0];e>=10;e/=10){i++;}}return i;}function S(n){for(var e="";n--;){e+="0";}return e;}function T(n,e,i,t){var r,s=new n(1),o=Math.ceil(t/x+4);for(h=!1;;){if(i%2&&G((s=s.times(e)).d,o)&&(r=!0),0===(i=g(i/2))){i=s.d.length-1,r&&0===s.d[i]&&++s.d[i];break;}G((e=e.times(e)).d,o);}return h=!0,s;}function I(n){return 1&n.d[n.d.length-1];}function C(n,e,i){for(var t,r=new n(e[0]),s=0;++s<e.length;){if(!(t=new n(e[s])).s){r=t;break;}r[i](t)&&(r=t);}return r;}function H(n,e){var i,t,r,s,o,u,c,f=0,a=0,d=0,l=n.constructor,p=l.rounding,g=l.precision;if(!n.d||!n.d[0]||n.e>17)return new l(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:NaN);for(null==e?(h=!1,c=g):c=e,u=new l(.03125);n.e>-2;){n=n.times(u),d+=5;}for(c+=t=Math.log(w(2,d))/Math.LN10*2+5|0,i=s=o=new l(1),l.precision=c;;){if(s=P(s.times(n),c,1),i=i.times(++a),O((u=o.plus(Z(s,i,c,1))).d).slice(0,c)===O(o.d).slice(0,c)){for(r=d;r--;){o=P(o.times(o),c,1);}if(null!=e)return l.precision=g,o;if(!(f<3&&A(o.d,c-t,p,f)))return P(o,l.precision=g,p,h=!0);l.precision=c+=10,i=s=u=new l(1),a=0,f++;}o=u;}}function B(n,e){var i,t,r,s,o,u,c,f,a,d,l,p=1,g=n,w=g.d,m=g.constructor,v=m.rounding,N=m.precision;if(g.s<0||!w||!w[0]||!g.e&&1==w[0]&&1==w.length)return new m(w&&!w[0]?-1/0:1!=g.s?NaN:w?0:g);if(null==e?(h=!1,a=N):a=e,m.precision=a+=10,t=(i=O(w)).charAt(0),!(Math.abs(s=g.e)<15e14))return f=U(m,a+2,N).times(s+""),g=B(new m(t+"."+i.slice(1)),a-10).plus(f),m.precision=N,null==e?P(g,N,v,h=!0):g;for(;t<7&&1!=t||1==t&&i.charAt(1)>3;){t=(i=O((g=g.times(n)).d)).charAt(0),p++;}for(s=g.e,t>1?(g=new m("0."+i),s++):g=new m(t+"."+i.slice(1)),d=g,c=o=g=Z(g.minus(1),g.plus(1),a,1),l=P(g.times(g),a,1),r=3;;){if(o=P(o.times(l),a,1),O((f=c.plus(Z(o,new m(r),a,1))).d).slice(0,a)===O(c.d).slice(0,a)){if(c=c.times(2),0!==s&&(c=c.plus(U(m,a+2,N).times(s+""))),c=Z(c,new m(p),a,1),null!=e)return m.precision=N,c;if(!A(c.d,a-10,v,u))return P(c,m.precision=N,v,h=!0);m.precision=a+=10,f=o=g=Z(d.minus(1),d.plus(1),a,1),l=P(g.times(g),a,1),r=u=1;}c=f,r+=2;}}function V(n){return String(n.s*n.s/0);}function j(n,e){var i,t,r;for((i=e.indexOf("."))>-1&&(e=e.replace(".","")),(t=e.search(/e/i))>0?(i<0&&(i=t),i+=+e.slice(t+1),e=e.substring(0,t)):i<0&&(i=e.length),t=0;48===e.charCodeAt(t);t++){;}for(r=e.length;48===e.charCodeAt(r-1);--r){;}if(e=e.slice(t,r)){if(r-=t,n.e=i=i-t-1,n.d=[],t=(i+1)%x,i<0&&(t+=x),t<r){for(t&&n.d.push(+e.slice(0,t)),r-=x;t<r;){n.d.push(+e.slice(t,t+=x));}e=e.slice(t),t=x-e.length;}else t-=r;for(;t--;){e+="0";}n.d.push(+e),h&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]));}else n.e=0,n.d=[0];return n;}function $(n,i){var t,r,s,o,u,c,f,a,l;if("Infinity"===i||"NaN"===i)return+i||(n.s=NaN),n.e=NaN,n.d=null,n;if(v.test(i))t=16,i=i.toLowerCase();else if(m.test(i))t=2;else{if(!N.test(i))throw Error(d+i);t=8;}for((o=i.search(/p/i))>0?(f=+i.slice(o+1),i=i.substring(2,o)):i=i.slice(2),u=(o=i.indexOf("."))>=0,r=n.constructor,u&&(o=(c=(i=i.replace(".","")).length)-o,s=T(r,new r(t),o,2*o)),o=l=(a=D(i,t,E)).length-1;0===a[o];--o){a.pop();}return o<0?new r(0*n.s):(n.e=L(a,l),n.d=a,h=!1,u&&(n=Z(n,s,4*c)),f&&(n=n.times(Math.abs(f)<54?Math.pow(2,f):e.pow(2,f))),h=!0,n);}function W(n,e,i,t,r){var s,o,u,c,f=n.precision,a=Math.ceil(f/x);for(h=!1,c=i.times(i),u=new n(t);;){if(o=Z(u.times(c),new n(e++*e++),f,1),u=r?t.plus(o):t.minus(o),t=Z(o.times(c),new n(e++*e++),f,1),void 0!==(o=u.plus(t)).d[a]){for(s=a;o.d[s]===u.d[s]&&s--;){;}if(-1==s)break;}s=u,u=t,t=o,o=s,0;}return h=!0,o.d.length=a+1,o;}function J(n,e){var i,r=e.s<0,s=_(n,n.precision,1),o=s.times(.5);if((e=e.abs()).lte(o))return t=r?4:1,e;if((i=e.divToInt(s)).isZero())t=r?3:2;else{if((e=e.minus(i.times(s))).lte(o))return t=I(i)?r?2:3:r?4:1,e;t=I(i)?r?1:4:r?3:2;}return e.minus(s).abs();}function z(n,e,t,r){var u,c,f,h,a,d,l,p,g,w=n.constructor,m=void 0!==t;if(m?(F(t,1,s),void 0===r?r=w.rounding:F(r,0,8)):(t=w.precision,r=w.rounding),n.isFinite()){for(m?(u=2,16==e?t=4*t-3:8==e&&(t=3*t-2)):u=e,(f=(l=R(n)).indexOf("."))>=0&&(l=l.replace(".",""),(g=new w(1)).e=l.length-f,g.d=D(R(g),10,u),g.e=g.d.length),c=a=(p=D(l,10,u)).length;0==p[--a];){p.pop();}if(p[0]){if(f<0?c--:((n=new w(n)).d=p,n.e=c,p=(n=Z(n,g,t,r,0,u)).d,c=n.e,d=i),f=p[t],h=u/2,d=d||void 0!==p[t+1],d=r<4?(void 0!==f||d)&&(0===r||r===(n.s<0?3:2)):f>h||f===h&&(4===r||d||6===r&&1&p[t-1]||r===(n.s<0?8:7)),p.length=t,d)for(;++p[--t]>u-1;){p[t]=0,t||(++c,p.unshift(1));}for(a=p.length;!p[a-1];--a){;}for(f=0,l="";f<a;f++){l+=o.charAt(p[f]);}if(m){if(a>1)if(16==e||8==e){for(f=16==e?4:3,--a;a%f;a++){l+="0";}for(a=(p=D(l,u,e)).length;!p[a-1];--a){;}for(f=1,l="1.";f<a;f++){l+=o.charAt(p[f]);}}else l=l.charAt(0)+"."+l.slice(1);l=l+(c<0?"p":"p+")+c;}else if(c<0){for(;++c;){l="0"+l;}l="0."+l;}else if(++c>a)for(c-=a;c--;){l+="0";}else c<a&&(l=l.slice(0,c)+"."+l.slice(c));}else l=m?"0p+0":"0";l=(16==e?"0x":2==e?"0b":8==e?"0o":"")+l;}else l=V(n);return n.s<0?"-"+l:l;}function G(n,e){if(n.length>e)return n.length=e,!0;}function K(n){return new this(n).abs();}function Q(n){return new this(n).acos();}function X(n){return new this(n).acosh();}function Y(n,e){return new this(n).plus(e);}function nn(n){return new this(n).asin();}function en(n){return new this(n).asinh();}function tn(n){return new this(n).atan();}function rn(n){return new this(n).atanh();}function sn(n,e){n=new this(n),e=new this(e);var i,t=this.precision,r=this.rounding,s=t+4;return n.s&&e.s?n.d||e.d?!e.d||n.isZero()?(i=e.s<0?_(this,t,r):new this(0)).s=n.s:!n.d||e.isZero()?(i=_(this,s,1).times(.5)).s=n.s:e.s<0?(this.precision=s,this.rounding=1,i=this.atan(Z(n,e,s,1)),e=_(this,s,1),this.precision=t,this.rounding=r,i=n.s<0?i.minus(e):i.plus(e)):i=this.atan(Z(n,e,s,1)):(i=_(this,s,1).times(e.s>0?.25:.75)).s=n.s:i=new this(NaN),i;}function on(n){return new this(n).cbrt();}function un(n){return P(n=new this(n),n.e+1,2);}function cn(n){if(!n||"object"!=_typeof(n))throw Error(a+"Object expected");var e,i,t,o=!0===n.defaults,u=["precision",1,s,"rounding",0,8,"toExpNeg",-r,0,"toExpPos",0,r,"maxE",0,r,"minE",-r,0,"modulo",0,9];for(e=0;e<u.length;e+=3){if(i=u[e],o&&(this[i]=f[i]),void 0!==(t=n[i])){if(!(g(t)===t&&t>=u[e+1]&&t<=u[e+2]))throw Error(d+i+": "+t);this[i]=t;}}if(i="crypto",o&&(this[i]=f[i]),void 0!==(t=n[i])){if(!0!==t&&!1!==t&&0!==t&&1!==t)throw Error(d+i+": "+t);if(t){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(p);this[i]=!0;}else this[i]=!1;}return this;}function fn(n){return new this(n).cos();}function hn(n){return new this(n).cosh();}function an(n,e){return new this(n).div(e);}function dn(n){return new this(n).exp();}function ln(n){return P(n=new this(n),n.e+1,3);}function pn(){var n,e,i=new this(0);for(h=!1,n=0;n<arguments.length;){if((e=new this(arguments[n++])).d)i.d&&(i=i.plus(e.times(e)));else{if(e.s)return h=!0,new this(1/0);i=e;}}return h=!0,i.sqrt();}function gn(n){return n instanceof e||n&&"[object Decimal]"===n.name||!1;}function wn(n){return new this(n).ln();}function mn(n,e){return new this(n).log(e);}function vn(n){return new this(n).log(2);}function Nn(n){return new this(n).log(10);}function bn(){return C(this,arguments,"lt");}function En(){return C(this,arguments,"gt");}function xn(n,e){return new this(n).mod(e);}function Mn(n,e){return new this(n).mul(e);}function yn(n,e){return new this(n).pow(e);}function qn(n){var e,i,t,r,o=0,u=new this(1),c=[];if(void 0===n?n=this.precision:F(n,1,s),t=Math.ceil(n/x),this.crypto){if(crypto.getRandomValues)for(e=crypto.getRandomValues(new Uint32Array(t));o<t;){(r=e[o])>=429e7?e[o]=crypto.getRandomValues(new Uint32Array(1))[0]:c[o++]=r%1e7;}else{if(!crypto.randomBytes)throw Error(p);for(e=crypto.randomBytes(t*=4);o<t;){(r=e[o]+(e[o+1]<<8)+(e[o+2]<<16)+((127&e[o+3])<<24))>=214e7?crypto.randomBytes(4).copy(e,o):(c.push(r%1e7),o+=4);}o=t/4;}}else for(;o<t;){c[o++]=1e7*Math.random()|0;}for(t=c[--o],n%=x,t&&n&&(r=w(10,x-n),c[o]=(t/r|0)*r);0===c[o];o--){c.pop();}if(o<0)i=0,c=[0];else{for(i=-1;0===c[0];i-=x){c.shift();}for(t=1,r=c[0];r>=10;r/=10){t++;}t<x&&(i-=x-t);}return u.e=i,u.d=c,u;}function On(n){return P(n=new this(n),n.e+1,this.rounding);}function Fn(n){return(n=new this(n)).d?n.d[0]?n.s:0*n.s:n.s||NaN;}function An(n){return new this(n).sin();}function Dn(n){return new this(n).sinh();}function Zn(n){return new this(n).sqrt();}function Pn(n,e){return new this(n).sub(e);}function Rn(n){return new this(n).tan();}function Ln(n){return new this(n).tanh();}function Un(n){return P(n=new this(n),n.e+1,1);}return(e=function n(e){var i,t,r;function s(n){var e,i,t,r=this;if(!(r instanceof s))return new s(n);if(r.constructor=s,n instanceof s)return r.s=n.s,void(h?!n.d||n.e>s.maxE?(r.e=NaN,r.d=null):n.e<s.minE?(r.e=0,r.d=[0]):(r.e=n.e,r.d=n.d.slice()):(r.e=n.e,r.d=n.d?n.d.slice():n.d));if("number"==(t=_typeof(n))){if(0===n)return r.s=1/n<0?-1:1,r.e=0,void(r.d=[0]);if(n<0?(n=-n,r.s=-1):r.s=1,n===~~n&&n<1e7){for(e=0,i=n;i>=10;i/=10){e++;}return void(h?e>s.maxE?(r.e=NaN,r.d=null):e<s.minE?(r.e=0,r.d=[0]):(r.e=e,r.d=[n]):(r.e=e,r.d=[n]));}return 0*n!=0?(n||(r.s=NaN),r.e=NaN,void(r.d=null)):j(r,n.toString());}if("string"!==t)throw Error(d+n);return 45===n.charCodeAt(0)?(n=n.slice(1),r.s=-1):r.s=1,b.test(n)?j(r,n):$(r,n);}if(s.prototype=q,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=cn,s.clone=n,s.isDecimal=gn,s.abs=K,s.acos=Q,s.acosh=X,s.add=Y,s.asin=nn,s.asinh=en,s.atan=tn,s.atanh=rn,s.atan2=sn,s.cbrt=on,s.ceil=un,s.cos=fn,s.cosh=hn,s.div=an,s.exp=dn,s.floor=ln,s.hypot=pn,s.ln=wn,s.log=mn,s.log10=Nn,s.log2=vn,s.max=bn,s.min=En,s.mod=xn,s.mul=Mn,s.pow=yn,s.random=qn,s.round=On,s.sign=Fn,s.sin=An,s.sinh=Dn,s.sqrt=Zn,s.sub=Pn,s.tan=Rn,s.tanh=Ln,s.trunc=Un,void 0===e&&(e={}),e&&!0!==e.defaults)for(r=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],i=0;i<r.length;){e.hasOwnProperty(t=r[i++])||(e[t]=this[t]);}return s.config(e),s;}(f))["default"]=e.Decimal=e,u=new e(u),c=new e(c),e;}()});if(typeof module!=='undefined'){module.exports=nerdamer;};if(typeof module!=='undefined'){var nerdamer=require('./nerdamer.core.js');require('./Calculus.js');}(function(){"use strict";var core=nerdamer.getCore(),_=core.PARSER,N=core.groups.N,P=core.groups.P,S=core.groups.S,EX=core.groups.EX,FN=core.groups.FN,PL=core.groups.PL,CP=core.groups.CP,CB=core.groups.CB,keys=core.Utils.keys,variables=core.Utils.variables,format=core.Utils.format,round=core.Utils.round,Frac=core.Frac,isInt=core.Utils.isInt,_Symbol2=core.Symbol,CONST_HASH=core.Settings.CONST_HASH,math=core.Utils.importFunctions(),evaluate=core.Utils.evaluate;function Polynomial(symbol,variable,order){if(core.Utils.isSymbol(symbol)){this.parse(symbol);this.variable=this.variable||variable;}else if(!isNaN(symbol)){order=order||0;if(variable===undefined)throw new core.exceptions.InvalidVariableNameError('Polynomial expects a variable name when creating using order');this.coeffs=[];this.coeffs[order]=symbol;this.fill(symbol);}else if(typeof symbol==='string'){this.parse(_.parse(symbol));}}Polynomial.fromArray=function(arr,variable){if(typeof variable==='undefined')throw new core.exceptions.InvalidVariableNameError('A variable name must be specified when creating polynomial from array');var p=new Polynomial();p.coeffs=arr;p.variable=variable;return p;};Polynomial.fit=function(c1,c2,n,base,p,variable){var terms=new Array(p+1),t=n-c2;terms[0]=c2;terms[p]=c1;t-=c1*Math.pow(base,p);for(var i=p-1;i>0;i--){var b=Math.pow(base,i),q=t/b,sign=Math.sign(q);var c=sign*Math.floor(Math.abs(q));t-=c*b;terms[i]=c;}if(t!==0)return null;for(var i=0;i<terms.length;i++){terms[i]=new Frac(terms[i]);}return Polynomial.fromArray(terms,variable);};Polynomial.prototype={parse:function parse(symbol,c){this.variable=variables(symbol)[0];if(!symbol.isPoly())throw core.exceptions.NerdamerTypeError('Polynomial Expected! Received '+core.Utils.text(symbol));c=c||[];if(!symbol.power.absEquals(1))symbol=_.expand(symbol);if(symbol.group===core.groups.N){c[0]=symbol.multiplier;}else if(symbol.group===core.groups.S){c[symbol.power.toDecimal()]=symbol.multiplier;}else{for(var x in symbol.symbols){var sub=symbol.symbols[x],p=sub.power;if(core.Utils.isSymbol(p))throw new core.exceptions.NerdamerTypeError('power cannot be a Symbol');p=sub.group===N?0:p.toDecimal();if(sub.symbols){this.parse(sub,c);}else{c[p]=sub.multiplier;}}}this.coeffs=c;this.fill();},fill:function fill(x){x=Number(x)||0;var l=this.coeffs.length;for(var i=0;i<l;i++){if(this.coeffs[i]===undefined){this.coeffs[i]=new Frac(x);}}return this;},trim:function trim(){var l=this.coeffs.length;while(l--){var c=this.coeffs[l];var equalsZero=c.equals(0);if(c&&equalsZero){if(l===0)break;this.coeffs.pop();}else break;}return this;},modP:function modP(p){var l=this.coeffs.length;for(var i=0;i<l;i++){var c=this.coeffs[i];if(c<0){var b;for(var j=i;j<l;j++){if(this.coeffs[j]>0){b=this.coeffs[j];break;}}if(b){for(j;j>i;j--){this.coeffs[j]=this.coeffs[j].subtract(new Frac(1));this.coeffs[j-1]=this.coeffs[j-1].add(new Frac(p));}c=this.coeffs[i];}}var d=c.mod(p);var w=c.subtract(d).divide(p);if(!w.equals(0)){var up_one=i+1;var next=this.coeffs[up_one]||new Frac(0);next=next.add(w);this.coeffs[up_one]=new Frac(next);this.coeffs[i]=new Frac(d);}}return this;},add:function add(poly){var l=Math.max(this.coeffs.length,poly.coeffs.length);for(var i=0;i<l;i++){var a=this.coeffs[i]||new Frac(0),b=poly.coeffs[i]||new Frac(0);this.coeffs[i]=a.add(b);}return this;},subtract:function subtract(poly){var l=Math.max(this.coeffs.length,poly.coeffs.length);for(var i=0;i<l;i++){var a=this.coeffs[i]||new Frac(0),b=poly.coeffs[i]||new Frac(0);this.coeffs[i]=a.subtract(b);}return this;},divide:function divide(poly){var variable=this.variable,dividend=core.Utils.arrayClone(this.coeffs),divisor=core.Utils.arrayClone(poly.coeffs),n=dividend.length,mp=divisor.length-1,quotient=[];for(var i=0;i<n;i++){var p=n-(i+1);var d=p-mp;var q=dividend[p].divide(divisor[mp]);if(d<0)break;quotient[d]=q;for(var j=0;j<=mp;j++){dividend[j+d]=dividend[j+d].subtract(divisor[j].multiply(q));}}var p1=Polynomial.fromArray(dividend,variable||'x').trim(),p2=Polynomial.fromArray(quotient,variable||'x');return[p2,p1];},multiply:function multiply(poly){var l1=this.coeffs.length,l2=poly.coeffs.length,c=[];for(var i=0;i<l1;i++){var x1=this.coeffs[i];for(var j=0;j<l2;j++){var k=i+j,x2=poly.coeffs[j],e=c[k]||new Frac(0);c[k]=e.add(x1.multiply(x2));}}this.coeffs=c;return this;},isZero:function isZero(){var l=this.coeffs.length;for(var i=0;i<l;i++){var e=this.coeffs[i];if(!e.equals(0))return false;}return true;},sub:function sub(n){var sum=new Frac(0),l=this.coeffs.length;for(var i=0;i<l;i++){var t=this.coeffs[i];if(!t.equals(0))sum=sum.add(t.multiply(new Frac(Math.pow(n,i))));}return sum;},clone:function clone(){var p=new Polynomial();p.coeffs=this.coeffs;p.variable=this.variable;return p;},deg:function deg(){this.trim();return this.coeffs.length-1;},lc:function lc(){return this.coeffs[this.deg()].clone();},monic:function monic(){var lc=this.lc(),l=this.coeffs.length;for(var i=0;i<l;i++){this.coeffs[i]=this.coeffs[i].divide(lc);}return this;},gcd:function gcd(poly){var mp1=this.coeffs.length-1,mp2=poly.coeffs.length-1,T;if(mp1<mp2){return poly.gcd(this);}var a=this;while(!poly.isZero()){var t=poly.clone();a=a.clone();T=a.divide(t);poly=T[1];a=t;}var gcd=core.Math2.QGCD.apply(null,a.coeffs);if(!gcd.equals(1)){var l=a.coeffs.length;for(var i=0;i<l;i++){a.coeffs[i]=a.coeffs[i].divide(gcd);}}return a;},diff:function diff(){var new_array=[],l=this.coeffs.length;for(var i=1;i<l;i++){new_array.push(this.coeffs[i].multiply(new Frac(i)));}this.coeffs=new_array;return this;},integrate:function integrate(){var new_array=[0],l=this.coeffs.length;for(var i=0;i<l;i++){var c=new Frac(i+1);new_array[c]=this.coeffs[i].divide(c);}this.coeffs=new_array;return this;},gcf:function gcf(toPolynomial){var fnz=function fnz(a){for(var i=0;i<a.length;i++){if(!a[i].equals(0))return i;}},ca=[];for(var i=0;i<this.coeffs.length;i++){var c=this.coeffs[i];if(!c.equals(0)&&ca.indexOf(c)===-1)ca.push(c);}var p=[core.Math2.QGCD.apply(undefined,ca),fnz(this.coeffs)].toDecimal();if(toPolynomial){var parr=[];parr[p[1]-1]=p[0];p=Polynomial.fromArray(parr,this.variable).fill();}return p;},quad:function quad(incl_img){var roots=[];if(this.coeffs.length>3)throw new Error('Cannot calculate quadratic order of '+(this.coeffs.length-1));if(this.coeffs.length===0)throw new Error('Polynomial array has no terms');var a=this.coeffs[2]||0,b=this.coeffs[1]||0,c=this.coeffs[0];var dsc=b*b-4*a*c;if(dsc<0&&!incl_img)return roots;else{roots[0]=(-b+Math.sqrt(dsc))/(2*a);roots[1]=(-b-Math.sqrt(dsc))/(2*a);}return roots;},squareFree:function squareFree(){var a=this.clone(),i=1,b=a.clone().diff(),c=a.clone().gcd(b),w=a.divide(c)[0];var output=Polynomial.fromArray([new Frac(1)],a.variable);while(!c.equalsNumber(1)){var y=w.gcd(c);var z=w.divide(y)[0];if(!z.equalsNumber(1)&&i>1){var t=z.clone();for(var j=1;j<i;j++){t.multiply(z.clone());}z=t;}output=output.multiply(z);i++;w=y;c=c.divide(y)[0];}return[output,w,i];},toSymbol:function toSymbol(){var l=this.coeffs.length,variable=this.variable;if(l===0)return new core.Symbol(0);var end=l-1,str='';for(var i=0;i<l;i++){var plus=i===end?'':'+',e=this.coeffs[i];if(!e.equals(0))str+=e+'*'+variable+'^'+i+plus;}return _.parse(str);},equalsNumber:function equalsNumber(x){this.trim();return this.coeffs.length===1&&this.coeffs[0].toDecimal()===String(x);},toString:function toString(){return this.toSymbol().toString();}};_Symbol2.prototype.coeffs=function(c,with_order){if(with_order&&!this.isPoly(true))_.error('Polynomial expected when requesting coefficients with order');c=c||[];var s=this.clone().distributeMultiplier();if(s.isComposite()){for(var x in s.symbols){var sub=s.symbols[x];if(sub.isComposite()){sub.clone().distributeMultiplier().coeffs(c,with_order);}else{if(with_order)c[sub.isConstant()?0:sub.power.toDecimal()]=sub.multiplier;else{c.push(sub.multiplier);}}}}else{if(with_order)c[s.isConstant(true)?0:s.power.toDecimal()]=s.multiplier;else{if(s.group===CB&&s.isImaginary()){var m=new _Symbol2(s.multiplier);s.each(function(x){if(x.isConstant(true)||x.imaginary)m=_.multiply(m,x);});c.push(m);}else c.push(s.multiplier);}}if(with_order){for(var i=0;i<c.length;i++){if(c[i]===undefined)c[i]=new _Symbol2(0);}}return c;};_Symbol2.prototype.tBase=function(map){if(typeof map==='undefined')throw new Error('Symbol.tBase requires a map object!');var terms=[];var symbols=this.collectSymbols(null,null,null,true),l=symbols.length;for(var i=0;i<l;i++){var symbol=symbols[i],g=symbol.group,nterm=new MVTerm(symbol.multiplier,[],map);if(g===CB){for(var x in symbol.symbols){var sym=symbol.symbols[x];nterm.terms[map[x]]=sym.power;}}else{nterm.terms[map[symbol.value]]=symbol.power;}terms.push(nterm.fill());nterm.updateCount();}return terms;};_Symbol2.prototype.altVar=function(x){var m=this.multiplier.toString(),p=this.power.toString();return(m==='1'?'':m+'*')+x+(p==='1'?'':'^'+p);};_Symbol2.prototype.sameVars=function(symbol){if(!(this.symbols||this.group===symbol.group))return false;for(var x in this.symbols){var a=this.symbols[x],b=symbol.symbols[x];if(!b)return false;if(a.value!==b.value)return false;}return true;};_Symbol2.prototype.groupTerms=function(x){x=String(x);var f,p,egrouped;var grouped=[];this.each(function(e){if(e.group===PL){egrouped=e.groupTerms(x);for(var i=0;i<egrouped.length;i++){var el=egrouped[i];if(el)grouped[i]=el;}}else{f=core.Utils.decompose_fn(e,x,true);p=f.x.value===x?Number(f.x.power):0;grouped[p]=_.add(grouped[p]||new _Symbol2(0),f.a);}});return grouped;};_Symbol2.prototype.collectFactors=function(){var factors=[];if(this.group===CB)this.each(function(x){factors.push(x.clone());});else factors.push(this.clone());return factors;};function Factors(){this.factors={};this.length=0;};Factors.prototype.getNumberSymbolics=function(){var n=0;this.each(function(x){if(!x.isConstant(true))n++;});return n;};Factors.prototype.add=function(s){if(s.equals(0))return this;if(s.equals(-1)&&this.length>0){var fo=core.Utils.firstObject(this.factors,null,true);this.add(_.symfunction(core.Settings.PARENTHESIS,[fo.obj]).negate());delete this.factors[fo.key];this.length--;return this;}if(s.group===CB){var factors=this;if(!s.multiplier.equals(1))factors.add(new _Symbol2(s.multiplier));s.each(function(x){factors.add(x);});}else{if(this.preAdd)s=this.preAdd(s);if(this.pFactor)s=_.pow(s,new _Symbol2(this.pFactor));var is_constant=s.isConstant();if(is_constant&&s.equals(1))return this;var v=is_constant?s.value:s.text();if(v in this.factors){this.factors[v]=_.multiply(this.factors[v],s);if(this.factors[v].equals(1)){delete this.factors[v];this.length--;}}else{this.factors[v]=s;this.length++;}}return this;};Factors.prototype.toSymbol=function(){var factored=new _Symbol2(1);var factors=Object.values(this.factors).sort(function(a,b){return a.group>b.group;});for(var i=0,l=factors.length;i<l;i++){var f=factors[i];var factor=f.power.equals(1)&&f.fname!==''?_.symfunction(core.PARENTHESIS,[f]):f;factored=_.multiply(factored,factor);}if(factored.fname==='')factored=_Symbol2.unwrapPARENS(factored);return factored;};Factors.prototype.merge=function(o){for(var x in o){if(x in this.factors)this.factors[x]=_.multiply(this.factors[x],o[x]);else this.factors[x]=o[x];}return this;};Factors.prototype.each=function(f){for(var x in this.factors){var factor=this.factors[x];if(factor.fname===core.PARENTHESIS&&factor.isLinear())factor=factor.args[0];f.call(this,factor,x);}return this;};Factors.prototype.count=function(){return keys(this.factors).length;};Factors.prototype.clean=function(){try{var h=core.Settings.CONST_HASH;if(this.factors[h].lessThan(0)){if(this.factors[h].equals(-1))delete this.factors[h];else this.factors[h].negate();this.each(function(x){x.negate();});}}catch(e){};};Factors.prototype.toString=function(){return this.toSymbol().toString();};function MVTerm(coeff,terms,map){this.terms=terms||[];this.coeff=coeff;this.map=map;this.sum=new core.Frac(0);this.image=undefined;};MVTerm.prototype.updateCount=function(){this.count=this.count||0;for(var i=0;i<this.terms.length;i++){if(!this.terms[i].equals(0))this.count++;}return this;};MVTerm.prototype.getVars=function(){var vars=[];for(var i=0;i<this.terms.length;i++){var term=this.terms[i],rev_map=this.getRevMap();if(!term.equals(0))vars.push(this.rev_map[i]);}return vars.join(' ');};MVTerm.prototype.len=function(){if(typeof this.count==='undefined'){this.updateCount();}return this.count;};MVTerm.prototype.toSymbol=function(rev_map){rev_map=rev_map||this.getRevMap();var symbol=new _Symbol2(this.coeff);for(var i=0;i<this.terms.length;i++){var v=rev_map[i],t=this.terms[i];if(t.equals(0)||v===CONST_HASH)continue;var mapped=new _Symbol2(v);mapped.power=t;symbol=_.multiply(symbol,mapped);}return symbol;};MVTerm.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var o={};for(var x in this.map){o[this.map[x]]=x;}this.rev_map=o;return o;};MVTerm.prototype.generateImage=function(){this.image=this.terms.join(' ');return this;},MVTerm.prototype.getImg=function(){if(!this.image)this.generateImage();return this.image;},MVTerm.prototype.fill=function(){var l=this.map.length;for(var i=0;i<l;i++){if(typeof this.terms[i]==='undefined')this.terms[i]=new core.Frac(0);else{this.sum=this.sum.add(this.terms[i]);}}return this;};MVTerm.prototype.divide=function(mvterm){var c=this.coeff.divide(mvterm.coeff),l=this.terms.length,new_mvterm=new MVTerm(c,[],this.map);for(var i=0;i<l;i++){new_mvterm.terms[i]=this.terms[i].subtract(mvterm.terms[i]);new_mvterm.sum=new_mvterm.sum.add(new_mvterm.terms[i]);}return new_mvterm;};MVTerm.prototype.multiply=function(mvterm){var c=this.coeff.multiply(mvterm.coeff),l=this.terms.length,new_mvterm=new MVTerm(c,[],this.map);for(var i=0;i<l;i++){new_mvterm.terms[i]=this.terms[i].add(mvterm.terms[i]);new_mvterm.sum=new_mvterm.sum.add(new_mvterm.terms[i]);}return new_mvterm;};MVTerm.prototype.isZero=function(){return this.coeff.equals(0);};MVTerm.prototype.toString=function(){return'{ coeff: '+this.coeff.toString()+', terms: ['+this.terms.join(',')+']: sum: '+this.sum.toString()+', count: '+this.count+'}';};core.Utils.toMapObj=function(arr){var c=0,o={};for(var i=0;i<arr.length;i++){var v=arr[i];if(typeof o[v]==='undefined'){o[v]=c;c++;}}o.length=c;return o;};core.Utils.filledArray=function(v,n,clss){var a=[];while(n--){a[n]=clss?new clss(v):v;}return a;};core.Utils.arrSum=function(arr){var sum=0,l=arr.length;for(var i=0;i<l;i++){sum+=arr[i];}return sum;};core.Utils.haveIntersection=function(a,b){var t;if(b.length>a.length)t=b,b=a,a=t;return a.some(function(e){return b.indexOf(e)>-1;});};core.Utils.subFunctions=function(symbol,map){map=map||{};var subbed=[];symbol.each(function(x){if(x.group===FN||x.previousGroup===FN){var val=core.Utils.text(x,'hash'),tvar=map[val];if(!tvar){var t=x.fname+keys(map).length;map[val]=t;subbed.push(x.altVar(t));}else subbed.push(x.altVar(tvar));}else if(x.group===CB||x.group===PL||x.group===CP){subbed.push(core.Utils.subFunctions(x,map));}else subbed.push(x.text());});if(symbol.group===CP||symbol.group===PL)return symbol.altVar(core.Utils.inBrackets(subbed.join('+')));;if(symbol.group===CB)return symbol.altVar(core.Utils.inBrackets(subbed.join('*')));return symbol.text();};core.Utils.getFunctionsSubs=function(map){var subs={};for(var x in map){subs[map[x]]=_.parse(x);}return subs;};var __=core.Algebra={version:'1.4.5',init:function(){}(),proots:function proots(symbol,decp){decp=decp||7;var zeros=0;var known_roots=[];var get_roots=function get_roots(rarr,powers,max){var roots=calcroots(rarr,powers,max).concat(known_roots);for(var i=0;i<zeros;i++){roots.unshift(0);}return roots;};if(symbol instanceof _Symbol2&&symbol.isPoly()){symbol.distributeMultiplier();if(symbol.group===PL){var lowest_pow=core.Utils.arrayMin(keys(symbol.symbols));var lowest_symbol=symbol.symbols[lowest_pow].clone().toUnitMultiplier();symbol=_.expand(_.divide(symbol,lowest_symbol));known_roots.push(0);}if(symbol.group===core.groups.S){return[0];}else if(symbol.group===core.groups.PL){var powers=keys(symbol.symbols),minpower=core.Utils.arrayMin(powers),symbol=core.PARSER.divide(symbol,core.PARSER.parse(symbol.value+'^'+minpower));}var variable=keys(symbol.symbols).sort().pop(),sym=symbol.group===core.groups.PL?symbol.symbols:symbol.symbols[variable],g=sym.group,powers=g===S?[sym.power.toDecimal()]:keys(sym.symbols),rarr=[],max=core.Utils.arrayMax(powers);for(var i=1;i<=max;i++){var c=0;if(powers.indexOf(i+'')!==-1){if(g===S){c=sym.multiplier;}else{c=sym.symbols[i].multiplier;}}rarr.unshift(c);}rarr.push(symbol.symbols[CONST_HASH].multiplier);if(sym.group===S)rarr[0]=sym.multiplier;return get_roots(rarr,powers,max);}else if(core.Utils.isArray(symbol)){var parr=symbol;var rarr=[],powers=[],last_power=0;for(var i=0;i<parr.length;i++){var coeff=parr[i][0],pow=parr[i][1],d=pow-last_power-1;for(var j=0;j<d;j++){rarr.unshift(0);}rarr.unshift(coeff);if(pow!==0)powers.push(pow);last_power=pow;}var max=Math.max.apply(undefined,powers);return get_roots(rarr,powers,max);}else{throw new core.exceptions.NerdamerTypeError('Cannot calculate roots. Symbol must be a polynomial!');}function calcroots(rarr,powers,max){var MAXDEGREE=100;var p=rarr.slice(0);rarr.unshift(max);if(max>MAXDEGREE){throw new core.exceptions.ValueLimitExceededError("This utility accepts polynomials of degree up to "+MAXDEGREE+". ");}var zeroi=[],degreePar={};degreePar.Degree=max;for(i=0;i<max;i++){zeroi.push(0);}var zeror=zeroi.slice(0);function QuadSD_ak1(NN,u,v,p,q,iPar){q[0]=iPar.b=p[0];q[1]=iPar.a=-(u*iPar.b)+p[1];for(var i=2;i<NN;i++){q[i]=-(u*iPar.a+v*iPar.b)+p[i];iPar.b=iPar.a;iPar.a=q[i];}return;}function calcSC_ak1(DBL_EPSILON,N,a,b,iPar,K,u,v,qk){var sdPar=new Object(),dumFlag=3;sdPar.b=sdPar.a=0.0;QuadSD_ak1(N,u,v,K,qk,sdPar);iPar.c=sdPar.a;iPar.d=sdPar.b;if(Math.abs(iPar.c)<=100.0*DBL_EPSILON*Math.abs(K[N-1])){if(Math.abs(iPar.d)<=100.0*DBL_EPSILON*Math.abs(K[N-2]))return dumFlag;}iPar.h=v*b;if(Math.abs(iPar.d)>=Math.abs(iPar.c)){dumFlag=2;iPar.e=a/iPar.d;iPar.f=iPar.c/iPar.d;iPar.g=u*b;iPar.a3=iPar.e*(iPar.g+a)+iPar.h*(b/iPar.d);iPar.a1=-a+iPar.f*b;iPar.a7=iPar.h+(iPar.f+u)*a;}else{dumFlag=1;iPar.e=a/iPar.c;iPar.f=iPar.d/iPar.c;iPar.g=iPar.e*u;iPar.a3=iPar.e*a+(iPar.g+iPar.h/iPar.c)*b;iPar.a1=-(a*(iPar.d/iPar.c))+b;iPar.a7=iPar.g*iPar.d+iPar.h*iPar.f+a;}return dumFlag;}function nextK_ak1(DBL_EPSILON,N,tFlag,a,b,iPar,K,qk,qp){var temp;if(tFlag==3){K[1]=K[0]=0.0;for(var i=2;i<N;i++){K[i]=qk[i-2];}return;}temp=tFlag==1?b:a;if(Math.abs(iPar.a1)>10.0*DBL_EPSILON*Math.abs(temp)){iPar.a7/=iPar.a1;iPar.a3/=iPar.a1;K[0]=qp[0];K[1]=-(qp[0]*iPar.a7)+qp[1];for(var i=2;i<N;i++){K[i]=-(qp[i-1]*iPar.a7)+qk[i-2]*iPar.a3+qp[i];}}else{K[0]=0.0;K[1]=-(qp[0]*iPar.a7);for(var i=2;i<N;i++){K[i]=-(qp[i-1]*iPar.a7)+qk[i-2]*iPar.a3;}}return;}function newest_ak1(tFlag,iPar,a,a1,a3,a7,b,c,d,f,g,h,u,v,K,N,p){var a4,a5,b1,b2,c1,c2,c3,c4,temp;iPar.b=iPar.a=0.0;if(tFlag!=3){if(tFlag!=2){a4=a+u*b+h*f;a5=c+(u+v*f)*d;}else{a4=(a+g)*f+h;a5=(f+u)*c+v*d;}b1=-(K[N-1]/p[N]);b2=-(K[N-2]+b1*p[N-1])/p[N];c1=v*b2*a1;c2=b1*a7;c3=b1*b1*a3;c4=-(c2+c3)+c1;temp=-c4+a5+b1*a4;if(temp!=0.0){iPar.a=-((u*(c3+c2)+v*(b1*a1+b2*a7))/temp)+u;iPar.b=v*(1.0+c4/temp);}}return;}function Quad_ak1(a,b1,c,iPar){var b,d,e;iPar.sr=iPar.si=iPar.lr=iPar.li=0.0;if(a==0){iPar.sr=b1!=0?-(c/b1):iPar.sr;return;}if(c==0){iPar.lr=-(b1/a);return;}b=b1/2.0;if(Math.abs(b)<Math.abs(c)){e=c>=0?a:-a;e=-e+b*(b/Math.abs(c));d=Math.sqrt(Math.abs(e))*Math.sqrt(Math.abs(c));}else{e=-(a/b*(c/b))+1.0;d=Math.sqrt(Math.abs(e))*Math.abs(b);}if(e>=0){d=b>=0?-d:d;iPar.lr=(-b+d)/a;iPar.sr=iPar.lr!=0?c/iPar.lr/a:iPar.sr;}else{iPar.lr=iPar.sr=-(b/a);iPar.si=Math.abs(d/a);iPar.li=-iPar.si;}return;}function QuadIT_ak1(DBL_EPSILON,N,iPar,uu,vv,qp,NN,sdPar,p,qk,calcPar,K){var qPar=new Object(),ee,mp,omp,relstp,t,u,ui,v,vi,zm,i,j=0,tFlag,triedFlag=0;iPar.NZ=0;u=uu;v=vv;do{qPar.li=qPar.lr=qPar.si=qPar.sr=0.0;Quad_ak1(1.0,u,v,qPar);iPar.szr=qPar.sr;iPar.szi=qPar.si;iPar.lzr=qPar.lr;iPar.lzi=qPar.li;if(Math.abs(Math.abs(iPar.szr)-Math.abs(iPar.lzr))>0.01*Math.abs(iPar.lzr))break;QuadSD_ak1(NN,u,v,p,qp,sdPar);mp=Math.abs(-(iPar.szr*sdPar.b)+sdPar.a)+Math.abs(iPar.szi*sdPar.b);zm=Math.sqrt(Math.abs(v));ee=2.0*Math.abs(qp[0]);t=-(iPar.szr*sdPar.b);for(i=1;i<N;i++){ee=ee*zm+Math.abs(qp[i]);}ee=ee*zm+Math.abs(t+sdPar.a);ee=(9.0*ee+2.0*Math.abs(t)-7.0*(Math.abs(sdPar.a+t)+zm*Math.abs(sdPar.b)))*DBL_EPSILON;if(mp<=20.0*ee){iPar.NZ=2;break;}j++;if(j>20)break;if(j>=2){if(relstp<=0.01&&mp>=omp&&!triedFlag){relstp=relstp<DBL_EPSILON?Math.sqrt(DBL_EPSILON):Math.sqrt(relstp);u-=u*relstp;v+=v*relstp;QuadSD_ak1(NN,u,v,p,qp,sdPar);for(i=0;i<5;i++){tFlag=calcSC_ak1(DBL_EPSILON,N,sdPar.a,sdPar.b,calcPar,K,u,v,qk);nextK_ak1(DBL_EPSILON,N,tFlag,sdPar.a,sdPar.b,calcPar,K,qk,qp);}triedFlag=1;j=0;}}omp=mp;tFlag=calcSC_ak1(DBL_EPSILON,N,sdPar.a,sdPar.b,calcPar,K,u,v,qk);nextK_ak1(DBL_EPSILON,N,tFlag,sdPar.a,sdPar.b,calcPar,K,qk,qp);tFlag=calcSC_ak1(DBL_EPSILON,N,sdPar.a,sdPar.b,calcPar,K,u,v,qk);newest_ak1(tFlag,sdPar,sdPar.a,calcPar.a1,calcPar.a3,calcPar.a7,sdPar.b,calcPar.c,calcPar.d,calcPar.f,calcPar.g,calcPar.h,u,v,K,N,p);ui=sdPar.a;vi=sdPar.b;if(vi!=0){relstp=Math.abs((-v+vi)/vi);u=ui;v=vi;}}while(vi!=0);return;}function RealIT_ak1(DBL_EPSILON,iPar,sdPar,N,p,NN,qp,K,qk){var ee,kv,mp,ms,omp,pv,s,t,dumFlag,i,j,nm1=N-1;iPar.NZ=j=dumFlag=0;s=sdPar.a;for(;;){pv=p[0];qp[0]=pv;for(i=1;i<NN;i++){qp[i]=pv=pv*s+p[i];}mp=Math.abs(pv);ms=Math.abs(s);ee=0.5*Math.abs(qp[0]);for(i=1;i<NN;i++){ee=ee*ms+Math.abs(qp[i]);}if(mp<=20.0*DBL_EPSILON*(2.0*ee-mp)){iPar.NZ=1;iPar.szr=s;iPar.szi=0.0;break;}j++;if(j>10)break;if(j>=2){if(Math.abs(t)<=0.001*Math.abs(-t+s)&&mp>omp){dumFlag=1;iPar.a=s;break;}}omp=mp;qk[0]=kv=K[0];for(i=1;i<N;i++){qk[i]=kv=kv*s+K[i];}if(Math.abs(kv)>Math.abs(K[nm1])*10.0*DBL_EPSILON){t=-(pv/kv);K[0]=qp[0];for(i=1;i<N;i++){K[i]=t*qk[i-1]+qp[i];}}else{K[0]=0.0;for(i=1;i<N;i++){K[i]=qk[i-1];}}kv=K[0];for(i=1;i<N;i++){kv=kv*s+K[i];}t=Math.abs(kv)>Math.abs(K[nm1])*10.0*DBL_EPSILON?-(pv/kv):0.0;s+=t;}return dumFlag;}function Fxshfr_ak1(DBL_EPSILON,MDP1,L2,sr,v,K,N,p,NN,qp,u,iPar){var sdPar=new Object(),calcPar=new Object(),qk=new Array(MDP1),svk=new Array(MDP1),a,b,betas,betav,oss,ots,otv,ovv,s,ss,ts,tss,tv,tvv,ui,vi,vv,fflag,i,iFlag=1,j,spass,stry,tFlag,vpass,vtry;iPar.NZ=0;betav=betas=0.25;oss=sr;ovv=v;sdPar.b=sdPar.a=0.0;QuadSD_ak1(NN,u,v,p,qp,sdPar);a=sdPar.a;b=sdPar.b;calcPar.h=calcPar.g=calcPar.f=calcPar.e=calcPar.d=calcPar.c=calcPar.a7=calcPar.a3=calcPar.a1=0.0;tFlag=calcSC_ak1(DBL_EPSILON,N,a,b,calcPar,K,u,v,qk);for(j=0;j<L2;j++){fflag=1;nextK_ak1(DBL_EPSILON,N,tFlag,a,b,calcPar,K,qk,qp);tFlag=calcSC_ak1(DBL_EPSILON,N,a,b,calcPar,K,u,v,qk);newest_ak1(tFlag,sdPar,a,calcPar.a1,calcPar.a3,calcPar.a7,b,calcPar.c,calcPar.d,calcPar.f,calcPar.g,calcPar.h,u,v,K,N,p);ui=sdPar.a;vv=vi=sdPar.b;ss=K[N-1]!=0.0?-(p[N]/K[N-1]):0.0;ts=tv=1.0;if(j!=0&&tFlag!=3){tv=vv!=0.0?Math.abs((vv-ovv)/vv):tv;ts=ss!=0.0?Math.abs((ss-oss)/ss):ts;tvv=tv<otv?tv*otv:1.0;tss=ts<ots?ts*ots:1.0;vpass=tvv<betav?1:0;spass=tss<betas?1:0;if(spass||vpass){for(i=0;i<N;i++){svk[i]=K[i];}s=ss;stry=vtry=0;for(;;){if(fflag&&(fflag=0)==0&&spass&&(!vpass||tss<tvv)){;}else{QuadIT_ak1(DBL_EPSILON,N,iPar,ui,vi,qp,NN,sdPar,p,qk,calcPar,K);a=sdPar.a;b=sdPar.b;if(iPar.NZ>0)return;iFlag=vtry=1;betav*=0.25;if(stry||!spass){iFlag=0;}else{for(i=0;i<N;i++){K[i]=svk[i];}}}if(iFlag!=0){sdPar.a=s;iFlag=RealIT_ak1(DBL_EPSILON,iPar,sdPar,N,p,NN,qp,K,qk);s=sdPar.a;if(iPar.NZ>0)return;stry=1;betas*=0.25;if(iFlag!=0){ui=-(s+s);vi=s*s;continue;}}for(i=0;i<N;i++){K[i]=svk[i];}if(!vpass||vtry)break;}QuadSD_ak1(NN,u,v,p,qp,sdPar);a=sdPar.a;b=sdPar.b;tFlag=calcSC_ak1(DBL_EPSILON,N,a,b,calcPar,K,u,v,qk);}}ovv=vv;oss=ss;otv=tv;ots=ts;}return;}function rpSolve(degPar,p,zeror,zeroi){var N=degPar.Degree,RADFAC=3.14159265358979323846/180,LB2=Math.LN2,MDP1=degPar.Degree+1,K=new Array(MDP1),pt=new Array(MDP1),qp=new Array(MDP1),temp=new Array(MDP1),qPar=new Object(),Fxshfr_Par=new Object(),bnd,DBL_EPSILON,df,dx,factor,ff,moduli_max,moduli_min,sc,x,xm,aa,bb,cc,sr,t,u,xxx,j,jj,l,NM1,NN,zerok;aa=1.0;do{DBL_EPSILON=aa;aa/=2;bb=1.0+aa;}while(bb>1.0);var LO=Number.MIN_VALUE/DBL_EPSILON,cosr=Math.cos(94.0*RADFAC),sinr=Math.sin(94.0*RADFAC),xx=Math.sqrt(0.5),yy=-xx;Fxshfr_Par.NZ=j=0;Fxshfr_Par.szr=Fxshfr_Par.szi=Fxshfr_Par.lzr=Fxshfr_Par.lzi=0.0;while(p[N]==0){zeror[j]=zeroi[j]=0;N--;j++;}NN=N+1;while(N>=1){if(N<=2){if(N<2){zeror[degPar.Degree-1]=-(p[1]/p[0]);zeroi[degPar.Degree-1]=0;}else{qPar.li=qPar.lr=qPar.si=qPar.sr=0.0;Quad_ak1(p[0],p[1],p[2],qPar);zeror[degPar.Degree-2]=qPar.sr;zeroi[degPar.Degree-2]=qPar.si;zeror[degPar.Degree-1]=qPar.lr;zeroi[degPar.Degree-1]=qPar.li;}break;}moduli_max=0.0;moduli_min=Number.MAX_VALUE;for(i=0;i<NN;i++){x=Math.abs(p[i]);if(x>moduli_max)moduli_max=x;if(x!=0&&x<moduli_min)moduli_min=x;}sc=LO/moduli_min;if(sc<=1.0&&moduli_max>=10||sc>1.0&&Number.MAX_VALUE/sc>=moduli_max){sc=sc==0?Number.MIN_VALUE:sc;l=Math.floor(Math.log(sc)/LB2+0.5);factor=Math.pow(2.0,l);if(factor!=1.0){for(i=0;i<NN;i++){p[i]*=factor;}}}for(var i=0;i<NN;i++){pt[i]=Math.abs(p[i]);}pt[N]=-pt[N];NM1=N-1;x=Math.exp((Math.log(-pt[N])-Math.log(pt[0]))/N);if(pt[NM1]!=0){xm=-pt[N]/pt[NM1];x=xm<x?xm:x;}xm=x;do{x=xm;xm=0.1*x;ff=pt[0];for(var i=1;i<NN;i++){ff=ff*xm+pt[i];}}while(ff>0);dx=x;do{df=ff=pt[0];for(var i=1;i<N;i++){ff=x*ff+pt[i];df=x*df+ff;}ff=x*ff+pt[N];dx=ff/df;x-=dx;}while(Math.abs(dx/x)>0.005);bnd=x;for(var i=1;i<N;i++){K[i]=(N-i)*p[i]/N;}K[0]=p[0];aa=p[N];bb=p[NM1];zerok=K[NM1]==0?1:0;for(jj=0;jj<5;jj++){cc=K[NM1];if(zerok){for(var i=0;i<NM1;i++){j=NM1-i;K[j]=K[j-1];}K[0]=0;zerok=K[NM1]==0?1:0;}else{t=-aa/cc;for(var i=0;i<NM1;i++){j=NM1-i;K[j]=t*K[j-1]+p[j];}K[0]=p[0];zerok=Math.abs(K[NM1])<=Math.abs(bb)*DBL_EPSILON*10.0?1:0;}}for(var i=0;i<N;i++){temp[i]=K[i];}for(jj=1;jj<=20;jj++){xxx=-(sinr*yy)+cosr*xx;yy=sinr*xx+cosr*yy;xx=xxx;sr=bnd*xx;u=-(2.0*sr);Fxshfr_ak1(DBL_EPSILON,MDP1,20*jj,sr,bnd,K,N,p,NN,qp,u,Fxshfr_Par);if(Fxshfr_Par.NZ!=0){j=degPar.Degree-N;zeror[j]=Fxshfr_Par.szr;zeroi[j]=Fxshfr_Par.szi;NN=NN-Fxshfr_Par.NZ;N=NN-1;for(var i=0;i<NN;i++){p[i]=qp[i];}if(Fxshfr_Par.NZ!=1){zeror[j+1]=Fxshfr_Par.lzr;zeroi[j+1]=Fxshfr_Par.lzi;}break;}else{for(var i=0;i<N;i++){K[i]=temp[i];}}}if(jj>20){degPar.Degree-=N;break;}}return;}rpSolve(degreePar,p,zeror,zeroi);var l=zeroi.length;for(i=0;i<l;i++){var img=round(zeroi[i],decp+8),real=round(zeror[i],decp+8);real=decp-String(real).length>2?real:zeror[i];var sign=img<0?'-':'';if(real===0){real='';}if(img===0){img='';}img=Math.abs(img)===1?sign+'i':img?img+'*i':'';var num=real&&img?real+'+'+img:real+img;zeror[i]=num.replace(/\+\-/g,'-');}return zeror;}},roots:function roots(symbol){if(symbol.isConstant(true,true)){return core.Utils.nroots(symbol);}var roots=__.proots(symbol).map(function(x){return _.parse(x);});return core.Vector.fromArray(roots);},froot:function froot(f,guess,dx){var newtonraph=function newtonraph(xn){var mesh=1e-12,df=dx?dx:core.Utils.build(core.Calculus.diff(f.clone())),fn=f instanceof Function?f:core.Utils.build(f),max=10000,done=false,safety=0;while(!done){var x=xn-fn(xn)/df(xn);var r=Math.abs(x)-Math.abs(xn),delta=Math.abs(r);xn=x;if(delta<mesh)done=true;else if(safety>max){xn=null;done=true;}safety++;}return xn;};return newtonraph(Number(guess));},quad:function quad(a,b,c){var q=function q(a,b,c,sign){return _.parse('-('+b+'+'+sign+'*sqrt(('+b+')^2-4*('+a+')*('+c+')))/(2*'+a+')');};return[q(a,b,c,1),q(a,b,c,-1)];},sumProd:function sumProd(a,b){return __.quad(-b,a,-1).map(function(x){return x.invert();});},coeffs:function coeffs(symbol,wrt,_coeffs){wrt=String(wrt);symbol=_.expand(symbol);_coeffs=_coeffs||[new _Symbol2(0)];if(symbol.group===EX&&symbol.contains(wrt,true))_.error('Unable to get coefficients using expression '+symbol.toString());var vars=variables(symbol);if(vars.length<=1&&vars[0]===wrt){var a=new Polynomial(symbol).coeffs.map(function(x){return new _Symbol2(x);});for(var i=0,l=a.length;i<l;i++){var coeff=a[i],e=_coeffs[i];if(e)coeff=_.add(e,coeff);_coeffs[i]=coeff;}}else{if(!wrt)_.error('Polynomial contains more than one variable. Please specify which variable is to be used!');if(vars.indexOf(wrt)===-1){_coeffs[0]=_.add(symbol,_coeffs[0]);}else{_coeffs=_coeffs||[new _Symbol2(0)];if(symbol.group===CB){var s=symbol.symbols[wrt];if(!s)_.error('Expression is not a polynomial!');var p=Number(s.power);coeff=_.divide(symbol.clone(),s.clone());if(coeff.contains(wrt,true)||p<0||!isInt(p))_.error('Expression is not a polynomial!');var e=_coeffs[p];if(e)coeff=_.add(e,coeff);_coeffs[p]=coeff;}else if(symbol.group===CP){symbol.each(function(x){__.coeffs(x.clone(),wrt,_coeffs);},true);}}}for(var i=0,l=_coeffs.length;i<l;i++){if(typeof _coeffs[i]==='undefined')_coeffs[i]=new _Symbol2(0);}return _coeffs;},polyPowers:function polyPowers(e,for_variable,powers){powers=powers||[];var g=g=e.group;if(g===PL&&for_variable===e.value){powers=powers.concat(keys(e.symbols));}else if(g===CP){for(var s in e.symbols){var symbol=e.symbols[s];var g=symbol.group,v=symbol.value;if(g===S&&for_variable===v)powers.push(symbol.power);else if(g===PL||g===CP)powers=__.polyPowers(symbol,for_variable,powers);else if(g===CB&&symbol.contains(for_variable)){var t=symbol.symbols[for_variable];if(t)powers.push(t.power);}else if(g===N||for_variable!==v)powers.push(0);}}else if(g===CB&&e.contains(for_variable)){powers.push(core.Utils.decompose_fn(e,for_variable,true).x.power);}return core.Utils.arrayUnique(powers).sort();},Factor:{split:function split(symbol){var c=new _Symbol2(1);var s=new _Symbol2(1);__.Factor.factor(symbol,new Factors()).each(function(x){var t=_.parse(x);if(x.isConstant(true)){c=_.multiply(c,t);}else{s=_.multiply(s,t);}});return[c,s];},mix:function mix(o,include_negatives){var factors=keys(o);var l=factors.length;var m=[];for(var i=0;i<l;i++){var factor=factors[i],p=o[factor];var ll=m.length;for(var j=0;j<ll;j++){var t=m[j]*factor;m.push(t);if(include_negatives)m.push(-t);}for(var j=1;j<=p;j++){m.push(Math.pow(factor,j));}}return m;},common:function common(symbol,factors){try{if(symbol.group===CP){var symbols=_.expand(symbol.clone(),true).collectSymbols(null,null,function(a,b){return(b.length||1)-(a.length||1);});var map={};var coeffs=[];for(var i=0;i<symbols.length;i++){var sym=symbols[i];coeffs.push(sym.multiplier.clone());sym.each(function(x){var p=Number(x.power);if(isNaN(p))throw new Error('exiting');if(x.value in map){if(p<map[x.value][0])map[x.value][0]=p;map[x.value][1].push(x);}else map[x.value]=[p,[x]];});}var factor=new _Symbol2(1);for(var x in map){if(map[x][1].length===symbols.length){factor=_.multiply(factor,_.pow(new _Symbol2(x),new _Symbol2(map[x][0])));}}var c=core.Math2.QGCD.apply(null,coeffs);if(!c.equals(1)){factors.add(new _Symbol2(c));for(var i=0;i<symbols.length;i++){symbols[i].multiplier=symbols[i].multiplier.divide(c);}}if(!factor.equals(1)){factors.add(factor);symbol=new _Symbol2(0);for(var i=0;i<symbols.length;i++){symbol=_.add(symbol,_.divide(symbols[i],factor.clone()));}}}}catch(e){;}return symbol;},zeroes:function zeroes(symbol,factors){var exit=function exit(){throw new core.exceptions.ValueLimitExceededError('Exiting');};try{var vars,term,sum,p,e;symbol=_.expand(symbol.clone());e=symbol.toString();vars=variables(symbol);sum=new _Symbol2(0);var terms=[];var powers=[];for(var i=0,l=vars.length;i<vars.length;i++){var subs={};for(var j=0;j<l;j++){if(i!==j)subs[vars[j]]=0;}term=_.parse(e,subs);var tp=term.power;if(!isInt(tp))exit();terms.push(term);powers.push(term.power);}if(core.Utils.allSame(powers)){var n_terms=symbol.length;var n_zeroes=terms.length;if(n_zeroes===2){p=new Frac(powers[0]/(n_terms-1));}if(n_zeroes===3){p=new Frac(powers[0]/Math.round((Math.sqrt(8*n_terms-1)-3)/2));}}else p=core.Math2.QGCD.apply(null,powers);if(!isInt(p))exit();for(var i=0;i<terms.length;i++){var t=terms[i];var n=t.power.clone().divide(p);t.multiplier=new Frac(Math.pow(t.multiplier,1/n));t.power=p.clone();sum=_.add(sum,t);}if(sum.group!==CP)return symbol;while(true){var d=__.div(symbol.clone(),sum.clone());if(d[1].equals(0)){symbol=d[0];factors.add(sum.clone());if(symbol.equals(1))break;}else break;}}catch(e){};return symbol;},factor:function factor(symbol,factors){var _symbol=_.parse(symbol);var retval=__.Factor._factor(_symbol,factors);if(retval.equals(symbol)){return retval;}if(retval.group===CB){var t=new _Symbol2(1);if(retval.multiplier.lessThan(0)){t.negate();retval.negate();}retval.each(function(x){var factored=__.Factor._factor(x);if(factored.group===CB){factored.each(function(y){var _factored=__.Factor._factor(y);t=_.multiply(t,_factored);});}else{t=_.multiply(t,factored);}});retval=t;}return retval;},quadFactor:function quadFactor(symbol,factors){if(symbol.isPoly()&&__.degree(symbol.equals(2))){var v=core.Utils.variables(symbol)[0];var coeffs=__.coeffs(symbol,v);var cf=__.Factor._factor(coeffs[2].clone());if(cf.group===CB){var symbols=cf.collectSymbols();if(symbols.length>2)return symbol;var c=_.multiply(_.parse(coeffs[0]),_.parse(symbols[0]));var b=_.parse(coeffs[1]).negate();var a=_.parse(symbols[1]);var root=__.quad(a,b,c).filter(function(x){if(core.Utils.isInt(x))return x;});if(root.length===1){var root1=root[0];var root2=_.divide(coeffs[0],_.parse(root1));if(core.Utils.isInt(root2)){factors.add(_.parse(format('({0})*({1})+({2})',symbols[1],v,root2)));factors.add(_.parse(format('({0})*({1})+({2})',symbols[0],v,root1)));symbol=new _Symbol2(1);}}}}return symbol;},_factor:function _factor(symbol,factors){if(symbol.group===FN){var arg=symbol.args[0];if(arg.group===S&&arg.isSimple())return symbol;}else if(symbol.group===S&&symbol.isSimple())return symbol;if(symbol.group===CP){symbol.distributeMultiplier();var t=new _Symbol2(0);symbol.each(function(x){if(x.group===CP&&x.power.greaterThan(1)||x.group===CB)x=_.expand(x);t=_.add(t,x);});t.power=symbol.power;symbol=t;}if(symbol.group===FN&&symbol.fname!=='sqrt')symbol=core.Utils.evaluate(symbol);var untouched=symbol.clone();try{if(symbol.group===CB){var den_array,num_array,den,num,dfact,nfact;den_array=__.Simplify.strip(symbol.getDenom());num_array=__.Simplify.strip(symbol.getNum());den=den_array.pop();num=num_array.pop();if(num.equals(symbol))return symbol;nfact=__.Factor.factor(num);dfact=__.Factor.factor(den);var n=__.Simplify.unstrip(num_array,nfact);var d=__.Simplify.unstrip(den_array,dfact);var retval=_.divide(n,d);return retval;}if(symbol.group===S)return symbol;if(symbol.isConstant()){if(symbol.equals(1))return symbol.clone();var ret=core.Math2.factor(symbol);return ret;}var p=symbol.power.clone();if(isInt(p)&&!(p.lessThan(0)&&symbol.group===FN)){var sign=p.sign();symbol.toLinear();factors=factors||new Factors();var map={};symbol=_.parse(core.Utils.subFunctions(symbol,map));if(keys(map).length>0){factors.preAdd=function(factor){var ret=_.parse(factor,core.Utils.getFunctionsSubs(map));return ret;};}if(!symbol.isLinear()){factors.pFactor=symbol.power.toString();symbol.toLinear();}var vars=variables(symbol);if(symbol.isImaginary()){vars.push(core.Settings.IMAGINARY);}var multiVar=vars.length>1;if(multiVar){var all_S=true,all_unit=true;symbol.each(function(x){if(x.group!==S)all_S=false;if(!x.multiplier.equals(1))all_unit=false;});if(all_S&&all_unit){return _.pow(_.parse(symbol,core.Utils.getFunctionsSubs(map)),_.parse(p));}}var coeff_factors=new Factors();symbol=__.Factor.coeffFactor(symbol,coeff_factors);coeff_factors.each(function(x){if(sign<0)x.invert();factors.add(x);});var power_factors=new Factors();symbol=__.Factor.powerFactor(symbol,power_factors);power_factors.each(function(x){if(sign<0)x.invert();factors.add(x);});if(!multiVar){var v=vars[0];symbol=__.Factor.squareFree(symbol,factors,v);var t_factors=new Factors();symbol=__.Factor.trialAndError(symbol,t_factors,v);var tf_symbol=t_factors.toSymbol();if(tf_symbol.equals(untouched))return tf_symbol;for(var x in t_factors.factors){var t_factor=t_factors.factors[x];factors.add(_.pow(t_factor,_.parse(p)));}if(symbol.equals(untouched))symbol=__.Factor.quadFactor(symbol,factors);}else{symbol=__.Factor.mfactor(symbol,factors);factors.each(function(x){if(sign<0)x.power.negate();});}symbol=_.parse(symbol,core.Utils.getFunctionsSubs(map));factors.add(_.pow(symbol,_.parse(p)));var retval=factors.toSymbol();return retval;}return symbol;}catch(e){return untouched;}},reduce:function reduce(symbol,factors){if(symbol.group===CP&&symbol.length===2){var symbols=symbol.collectSymbols().sort(function(a,b){return b.multiplier-a.multiplier;});if(symbols[0].power.equals(symbols[1].power)){var n=_.parse(symbols[0].power),a=symbols[0].clone().toLinear(),b=symbols[1].clone().toLinear();factors.add(_.add(a.clone(),b.clone()));b.negate();var nn=Number(n);var result=new _Symbol2(0);for(var i=1;i<=nn;i++){var aa=_.pow(a.clone(),_.subtract(n.clone(),new _Symbol2(i))),bb=_.pow(b.clone(),_.subtract(new _Symbol2(i),new _Symbol2(1)));result=_.add(result,_.multiply(aa,bb));}return result;}}return symbol;},squareFree:function squareFree(symbol,factors,variable){if(symbol.isConstant()||symbol.group===S)return symbol;var poly=new Polynomial(symbol,variable);var sqfr=poly.squareFree();var p=sqfr[2];if(p!==1){var t=sqfr[1].toSymbol();t.power=t.power.multiply(new Frac(p));factors.add(__.Factor.factor(t));return __.Factor.squareFree(sqfr[0].toSymbol(),factors);}return symbol;},powerFactor:function powerFactor(symbol,factors){if(symbol.group!==PL||symbol.previousGroup===EX)return symbol;var k=keys(symbol.symbols);if(!core.Utils.allNumeric(k))return symbol;var d=core.Utils.arrayMin(k);var retval=new _Symbol2(0);var q=_.parse(symbol.value+'^'+d);symbol.each(function(x){x=_.divide(x,q.clone());retval=_.add(retval,x);});factors.add(q);return retval;},coeffFactor:function coeffFactor(symbol,factors){if(symbol.isComposite()){var gcd=core.Math2.QGCD.apply(null,symbol.coeffs());if(!gcd.equals(1)){symbol.each(function(x){if(x.isComposite()){x.each(function(y){y.multiplier=y.multiplier.divide(gcd);});}else x.multiplier=x.multiplier.divide(gcd);});}symbol.updateHash();if(factors)factors.add(new _Symbol2(gcd));}return symbol;},trialAndError:function trialAndError(symbol,factors,variable){if(symbol.isConstant()||symbol.group===S)return symbol;var poly=new Polynomial(symbol,variable),cnst=poly.coeffs[0],cfactors=core.Math2.ifactor(cnst),roots=__.proots(symbol);for(var i=0;i<roots.length;i++){var r=roots[i],p=1;if(!isNaN(r)){for(var x in cfactors){var n=core.Utils.round(Math.log(x)/Math.log(Math.abs(r)),8);if(isInt(n)){r=x;p=n;break;}}var root=new Frac(r),terms=[new Frac(root.num).negate()];terms[p]=new Frac(root.den);var div=Polynomial.fromArray(terms,poly.variable).fill(),t=poly.divide(div);if(t[1].equalsNumber(0)){poly=t[0];factors.add(div.toSymbol());}}}if(!poly.equalsNumber(1)){poly=__.Factor.search(poly,factors);}return poly.toSymbol();},search:function search(poly,factors,base){base=base||10;var v=poly.variable;var check=function check(c1,c2,n,p){var candidate=Polynomial.fit(c1,c2,n,base,p,v);if(candidate&&candidate.coeffs.length>1){var t=poly.divide(candidate);if(t[1].equalsNumber(0)){factors.add(candidate.toSymbol());return[t[0],candidate];}}return null;};var cnst=poly.coeffs[0],cfactors=core.Math2.ifactor(cnst),lc=poly.lc(),ltfactors=core.Math2.ifactor(lc),subbed=poly.sub(base),nfactors=__.Factor.mix(core.Math2.ifactor(subbed),subbed<0),cp=Math.ceil(poly.coeffs.length/2),lc_is_neg=lc.lessThan(0),cnst_is_neg=cnst.lessThan(0);ltfactors['1']=1;cfactors['1']=1;while(cp--){for(var x in ltfactors){for(var y in cfactors){for(var i=0;i<nfactors.length;i++){var factor_found=check(x,y,nfactors[i],cp);if(factor_found){poly=factor_found[0];if(!core.Utils.isPrime(poly.sub(base)))poly=__.Factor.search(poly,factors);return poly;}else if(!factor_found){if(lc_is_neg&&cnst_is_neg)factor_found=check(-x,-y,nfactors[i],cp);else if(lc_is_neg)factor_found=check(-x,y,nfactors[i],cp);else if(cnst_is_neg)factor_found=check(x,-y,nfactors[i],cp);}}}}}return poly;},mSqfrFactor:function mSqfrFactor(symbol,factors){if(symbol.group!==FN){var vars=variables(symbol).reverse();for(var i=0;i<vars.length;i++){do{if(vars[i]===symbol.value){factors.add(symbol);symbol=new _Symbol2(1);continue;}var diff=core.Calculus.diff(symbol,vars[i]);var d=__.Factor.coeffFactor(diff);if(d.equals(0))break;var can_divide=true;if(d.isConstant()&&symbol.isComposite()){symbol.each(function(x){if(x.multiplier%d!==0)can_divide=false;},true);}if(can_divide){var div=__.div(symbol,d.clone()),is_factor=div[1].equals(0);if(div[0].isConstant()){factors.add(div[0]);break;}}else is_factor=false;if(is_factor){factors.add(div[0]);symbol=d;}}while(is_factor);}}return symbol;},sqdiff:function sqdiff(symbol,factors){try{var remove_square=function remove_square(x){return core.Utils.block('POSITIVE_MULTIPLIERS',function(){return _Symbol2.unwrapPARENS(math.sqrt(math.abs(x)));},true);};var separated=core.Utils.separate(symbol.clone());var obj_array=[];for(var x in separated){if(x!=='constants'){obj_array.push(separated[x]);}}obj_array.sort(function(a,b){return b.power-a.power;});if(obj_array.length===2){var a,b;a=obj_array.pop();b=obj_array.pop();if(a.isComposite()&&b.power.equals(2)){b=remove_square(b);var f=__.Factor.factor(_.add(a,separated.constants));if(f.power.equals(2)){f.toLinear();factors.add(_.subtract(f.clone(),b.clone()));factors.add(_.add(f,b));symbol=new _Symbol2(1);}}else{a=a.powSimp();b=b.powSimp();if((a.group===S||a.fname==='')&&a.power.equals(2)&&(b.group===S||b.fname==='')&&b.power.equals(2)){if(a.multiplier.lessThan(0)){var t=b;b=a;a=t;}if(a.multiplier.greaterThan(0)){a=remove_square(a);b=remove_square(b);}factors.add(_.subtract(a.clone(),b.clone()));factors.add(_.add(a,b));symbol=new _Symbol2(1);}}}}catch(e){;}return symbol;},mfactor:function mfactor(symbol,factors){if(symbol.group===FN){if(symbol.fname==='sqrt'){var factors2=new Factors(),arg=__.Factor.common(symbol.args[0].clone(),factors2);arg=__.Factor.coeffFactor(arg,factors2);symbol=_.multiply(_.symfunction('sqrt',[arg]),_.parse(symbol.multiplier));factors2.each(function(x){symbol=_.multiply(symbol,_.parse(core.Utils.format('sqrt({0})',x)));});}else factors.add(symbol);}else{symbol=__.Factor.mSqfrFactor(symbol,factors);var vars=variables(symbol),symbols=symbol.collectSymbols().map(function(x){return _Symbol2.unwrapSQRT(x);}),sorted={},maxes={},l=vars.length,n=symbols.length;for(var i=0;i<l;i++){var v=vars[i];sorted[v]=new _Symbol2(0);for(var j=0;j<n;j++){var s=symbols[j];if(s.contains(v)){var p=s.value===v?s.power.toDecimal():s.symbols[v].power.toDecimal();if(!maxes[v]||p<maxes[v])maxes[v]=p;sorted[v]=_.add(sorted[v],s.clone());}}}for(var x in sorted){var r=_.parse(x+'^'+maxes[x]);var div=_.divide(sorted[x],r);var new_factor=_.expand(div);if(new_factor.equals(1))break;var divided=__.div(symbol.clone(),new_factor);if(divided[0].equals(0)){break;}var neg_numeric_factor=isInt(new_factor)&&new_factor.lessThan(0);if(divided[1].equals(0)&&!neg_numeric_factor){var d=__.div(symbol.clone(),divided[0].clone());var r=d[0];symbol=d[1];if(r.equals(-1)&&!symbol.equals(0))return symbol;var factor=divided[0];if(symbol.equals(factor)){var rem=__.Factor.reduce(factor,factors);if(!symbol.equals(rem))return __.Factor.mfactor(rem,factors);}else{factors.add(factor);if(symbol.equals(0))return r;}if(r.isConstant('all')){factors.add(r);return r;}return __.Factor.mfactor(r,factors);}}}symbol=__.Factor.sqdiff(symbol,factors);symbol=__.Factor.zeroes(symbol,factors);return symbol;}},allLinear:function allLinear(set){var l=set.length;for(var i=0;i<l;i++){if(!__.isLinear(set[i]))return false;}return true;},isLinear:function isLinear(e){var status=false,g=e.group;if(g===PL||g===CP){status=true;for(var s in e.symbols){var symbol=e.symbols[s],sg=symbol.group;if(sg===FN||sg===EX){status=false;}if(sg===CB){status=variables(symbol).length===1;}else{if(sg===PL||sg===CP)status=__.isLinear(symbol);else{if(symbol.group!==N&&symbol.power.toString()!=='1'){status=false;break;}}}}}else if(g===S&&e.power===1)status=true;return status;},gcd:function gcd(){var args;if(arguments.length===1&&arguments[0]instanceof core.Vector)args=arguments[0].elements;else args=core.Utils.arguments2Array(arguments);if(args.length===0)return new _Symbol2(1);else if(args.length===1)return args[0];var appeared=[],evaluate=false;for(var i=0;i<args.length;i++){if(args[i].group===FN&&args[i].fname==='gcd'){args=args.concat(arguments[i].args);args.splice(i,1);}else{var vars=variables(args[i]);if(core.Utils.haveIntersection(vars,appeared)){evaluate=true;break;}else appeared=appeared.concat(vars);}}if(evaluate||appeared.length===0){if(args.every(function(symbol){return symbol.getDenom().equals(1);})){var aggregate=args[0];for(var i=1;i<args.length;i++){aggregate=__.gcd_(args[i],aggregate);}return aggregate;}else{return _.divide(__.gcd.apply(null,args.map(function(symbol){return symbol.getNum();})),__.lcm.apply(null,args.map(function(symbol){return symbol.getDenom();})));}}else return _.symfunction('gcd',args);},gcd_:function gcd_(a,b){if(a.group===FN||a.group===P)a=core.Utils.block('PARSE2NUMBER',function(){return _.parse(a);});if(b.group===FN)b=core.Utils.block('PARSE2NUMBER',function(){return _.parse(b);});if(a.isConstant()&&b.isConstant()){return new _Symbol2(core.Math2.QGCD(new Frac(+a),new Frac(+b)));}var den=_.multiply(a.getDenom()||new _Symbol2(1),b.getDenom()||new _Symbol2(1)).invert();a=_.multiply(a.clone(),den.clone());b=_.multiply(b.clone(),den.clone());a=_.expand(a);b=_.expand(b);if(a.group===CB||b.group===CB){var q=_.divide(a.clone(),b.clone());var t=_.multiply(b.clone(),q.getDenom().invert());if(!t.equals(1))return t;}if(a.group===EX||b.group===EX){var gcd_m=new _Symbol2(core.Math2.GCD(a.multiplier,b.multiplier));var gcd_v=__.gcd_(a.value===CONST_HASH?new _Symbol2(1):_.parse(a.value),b.value===CONST_HASH?new _Symbol2(1):_.parse(b.value));var gcd_p=__.gcd_(_.parse(a.power),_.parse(b.power));return _.multiply(gcd_m,_.pow(gcd_v,gcd_p));}if(a.length<b.length){var t=a;a=b;b=t;}var vars_a=variables(a),vars_b=variables(b);if(vars_a.length===vars_b.length&&vars_a.length===1&&vars_a[0]===vars_b[0]||vars_a.length===1&&vars_b.length===0||vars_a.length===0&&vars_b.length===1){a=new Polynomial(a);b=new Polynomial(b);return _.divide(a.gcd(b).toSymbol(),den);}else{var multipliers=[];a.each(function(x){multipliers.push(x.multiplier);});b.each(function(x){multipliers.push(x.multiplier);});var T;while(!b.equals(0)){var t=b.clone();a=a.clone();T=__.div(a,t);b=T[1];if(T[0].equals(0)){return _.divide(new _Symbol2(core.Math2.QGCD(a.multiplier,b.multiplier)),den);}a=t;}var gcd=core.Math2.QGCD.apply(undefined,multipliers);if(!gcd.equals(1)){a.each(function(x){x.multiplier=x.multiplier.divide(gcd);});}if(a.equals(1)&&!a.isConstant()&&!b.isConstant())return _.divide(_.symfunction('gcd',arguments),den);return _.divide(a,den);}},lcm:function lcm(){var args;if(arguments.length===1){if(arguments[0]instanceof core.Vector)args=arguments[0].elements;else _.error('lcm expects either 1 vector or 2 or more arguments');}else args=core.Utils.arguments2Array(arguments);var numer=args.reduce(function(prev,curr){return _.multiply(prev,curr.clone());},new _Symbol2(1));var denom_args=function(input,size){var results=[],result,mask,i,total=Math.pow(2,input.length);for(mask=size;mask<total;mask++){result=[];i=input.length-1;do{if((mask&1<<i)!==0){result.push(input[i]);}}while(i--);if(result.length==size){results.push(result);}}return results;}(arguments,arguments.length-1).map(function(x){return x.reduce(function(prev,curr){return _.multiply(prev,curr.clone());},new _Symbol2(1));});if(args.every(function(x){return core.Utils.isVariableSymbol(x);}))var denom=_.symfunction('gcd',core.Utils.arrayUnique(denom_args));else var denom=__.gcd.apply(null,denom_args);return _.divide(numer,denom);},divide:function divide(symbol1,symbol2){var result,remainder,factored,den;factored=core.Algebra.Factor.factor(symbol1.clone());den=factored.getDenom();if(!den.isConstant('all')){symbol1=_.expand(_Symbol2.unwrapPARENS(_.multiply(factored,den.clone())));}else den=new _Symbol2(1);result=__.div(symbol1,symbol2);remainder=_.divide(result[1],symbol2);return _.divide(_.add(result[0],remainder),den);},div:function div(symbol1,symbol2){if(symbol2.isConstant()){symbol1.each(function(x){x.multiplier=x.multiplier.divide(symbol2.multiplier);});return[symbol1,new _Symbol2(0)];}symbol1=_.expand(symbol1);symbol2=_.expand(symbol2);if(symbol1.group===S&&symbol2.group===CP){var x=symbol1.value;var f=core.Utils.decompose_fn(symbol2.clone(),x,true);if(symbol1.isLinear()&&f.x&&f.x.isLinear()&&symbol2.isLinear()){var k=_Symbol2.create(symbol1.multiplier);return[_.divide(k.clone(),f.a.clone()),_.divide(_.multiply(k,f.b),f.a).negate()];}}if(symbol1.group===S&&symbol2.group===S){var r=_.divide(symbol1.clone(),symbol2.clone());if(r.isConstant())return[r,new _Symbol2(0)];return[new _Symbol2(0),symbol1.clone()];}var symbol1_has_func=symbol1.hasFunc(),symbol2_has_func=symbol2.hasFunc(),parse_funcs=false;if(symbol1_has_func||symbol2_has_func){parse_funcs=true;var map={},symbol1=_.parse(core.Utils.subFunctions(symbol1,map)),symbol2=_.parse(core.Utils.subFunctions(symbol2,map)),subs=core.Utils.getFunctionsSubs(map);}var vars=core.Utils.arrayUnique(variables(symbol1).concat(variables(symbol2))),quot,rem;if(symbol1.isImaginary()||symbol2.isImaginary()){vars.push(core.Settings.IMAGINARY);}if(vars.length===1){var q=new Polynomial(symbol1).divide(new Polynomial(symbol2));quot=q[0].toSymbol();rem=q[1].toSymbol();}else{vars.push(CONST_HASH);var reconvert=function reconvert(arr){var symbol=new _Symbol2(0);for(var i=0;i<arr.length;i++){var x=arr[i].toSymbol();symbol=_.add(symbol,x);}return symbol;};var get_unique_max=function get_unique_max(term,any){var max=Math.max.apply(null,term.terms),count=0,idx;if(!any){for(var i=0;i<term.terms.length;i++){if(term.terms[i].equals(max)){idx=i;count++;}if(count>1)return;}}if(any){for(i=0;i<term.terms.length;i++){if(term.terms[i].equals(max)){idx=i;break;}}}return[max,idx,term];};var get_det=function get_det(s,lookat){lookat=lookat||0;var det=s[lookat],l=s.length;if(!det)return;var umax=get_unique_max(det);for(var i=lookat+1;i<l;i++){var term=s[i],is_equal=det.sum.equals(term.sum);if(!is_equal&&umax){break;}if(is_equal){var max1,max2,idx1,idx2,l2=det.terms.length;for(var j=0;j<l2;j++){var item1=det.terms[j],item2=term.terms[j];if(typeof max1==='undefined'||item1.greaterThan(max1)){max1=item1;idx1=j;}if(typeof max2==='undefined'||item2.greaterThan(max2)){max2=item2;idx2=j;}}var d1=max1.subtract(term.terms[idx1]),d2=max2.subtract(det.terms[idx2]);if(d2>d1){umax=[max2,idx2,term];break;}if(d1>d2){umax=[max1,idx1,det];break;}}else{umax=get_unique_max(term);if(umax)break;}umax=get_unique_max(term);}if(!umax)return get_unique_max(s[0],true);var e,idx;for(var i=0;i<s2.length;i++){var cterm=s2[i].terms;idx=umax[1];if(idx===cterm.length-1)return;e=cterm[idx];if(!e.equals(0))break;}if(e.equals(0))return get_det(s,++lookat);return umax;};var t_map=core.Utils.toMapObj(vars);var init_sort=function init_sort(a,b){return b.sum.subtract(a.sum);};var is_larger=function is_larger(a,b){if(!a||!b)return false;for(var i=0;i<a.terms.length;i++){if(a.terms[i].lessThan(b.terms[i]))return false;}return true;};var s1=symbol1.tBase(t_map).sort(init_sort),s2=symbol2.tBase(t_map).sort(init_sort);var target=is_larger(s1[0],s2[0])&&s1[0].count>s2[0].count?s2:s1;var det=get_det(target);var quotient=[];if(det){var lead_var=det[1];var can_divide=function can_divide(a,b){if(a[0].sum.equals(b[0].sum))return a.length>=b.length;return true;};var try_better_lead_var=function try_better_lead_var(s1,s2,lead_var){var checked=[];for(var i=0;i<s1.length;i++){var t=s1[i];for(var j=0;j<t.terms.length;j++){var cf=checked[j],tt=t.terms[j];if(i===0)checked[j]=tt;else if(cf&&!cf.equals(tt))checked[j]=undefined;}}for(var i=0;i<checked.length;i++){var t=checked[i];if(t&&!t.equals(0))return i;}return lead_var;};var sf=function sf(a,b){var l1=a.len(),l2=b.len();var blv=b.terms[lead_var],alv=a.terms[lead_var];if(l2>l1&&blv.greaterThan(alv))return l2-l1;return blv.subtract(alv);};lead_var=try_better_lead_var(s1,s2,lead_var);s1.sort(sf);s2.sort(sf);var fdt=s2[0],fnt=s1[0];var den=new MVTerm(new Frac(1),[],fnt.map);if(fdt.sum.greaterThan(fnt.sum)&&fnt.len()>1){for(var i=0;i<fnt.terms.length;i++){var d=fdt.terms[i].subtract(fnt.terms[i]);if(!d.equals(0)){var nd=d.add(new Frac(1));den.terms[i]=d;for(var j=0;j<s1.length;j++){s1[j].terms[i]=s1[j].terms[i].add(nd);}}else den.terms[i]=new Frac(0);}}var dividend_larger=is_larger(s1[0],s2[0]);while(dividend_larger&&can_divide(s1,s2)){var q=s1[0].divide(s2[0]);quotient.push(q);s1.shift();for(var i=1;i<s2.length;i++){var t=s2[i].multiply(q).generateImage(),l2=s1.length;if(l2===0){t.coeff=t.coeff.neg();s1.push(t);s1.sort(sf);}for(var j=0;j<l2;j++){var cur=s1[j];if(cur.getImg()===t.getImg()){cur.coeff=cur.coeff.subtract(t.coeff);if(cur.coeff.equals(0)){core.Utils.remove(s1,j);j--;}break;}if(j===l2-1){t.coeff=t.coeff.neg();s1.push(t);s1.sort(sf);}}}dividend_larger=is_larger(s1[0],s2[0]);if(!dividend_larger&&s1.length>=s2.length){for(var i=1;i<s1.length;i++){dividend_larger=is_larger(s1[i],s2[0]);if(dividend_larger){s1.unshift(core.Utils.remove(s1,i));break;}}}}}quot=reconvert(quotient);rem=reconvert(s1);if(typeof den!=='undefined'){den=den.toSymbol();quot=_.divide(quot,den.clone());rem=_.divide(rem,den);}}if(parse_funcs){quot=_.parse(quot.text(),subs);rem=_.parse(rem.text(),subs);}return[quot,rem];},line:function line(v1,v2,x){if(core.Utils.isArray(v1))v1=core.Utils.convertToVector(v1);if(core.Utils.isArray(v2))v2=core.Utils.convertToVector(v2);x=_.parse(x||'x');if(!core.Utils.isVector(v1)||!core.Utils.isVector(v2))_.error('Line expects a vector! Received "'+v1+'" & "'+v2+'"');var dx=_.subtract(v2.e(1).clone(),v1.e(1).clone()),dy=_.subtract(v2.e(2).clone(),v1.e(2).clone()),m=_.divide(dy,dx),a=_.multiply(x,m.clone()),b=_.multiply(v1.e(1).clone(),m);return _.add(_.subtract(a,b),v1.e(2).clone());},PartFrac:{createTemplate:function createTemplate(den,denom_factors,f_array,v){den=__.Factor.factor(den);den.each(function(x,key){if(x.group===FN&&x.fname===''&&x.args[0].group===S){var y=x.args[0];if(this.symbols){delete this.symbols[key];this.symbols[y.value]=y;}else{den=x.args[0];}}});var factors,factors_vec,f,p,deg,degrees,m;factors=denom_factors.collectFactors();factors_vec=[];degrees=[];m=new _Symbol2(1);for(var i=0;i<factors.length;i++){var factor=_Symbol2.unwrapPARENS(factors[i]);if(factor.power.greaterThan(1)){p=Number(factor.power);f=factor.clone().toLinear();deg=Number(__.degree(f,v));for(var j=0;j<p;j++){var efactor=_.pow(f.clone(),new _Symbol2(j+1));f_array.push(efactor.clone());var d=_.divide(den.clone(),efactor.clone());degrees.push(deg);factors_vec.push(d);}}else{deg=Number(__.degree(factor,v));f_array.push(factor);var d=_.divide(den.clone(),factor.clone());d=_.expand(_Symbol2.unwrapPARENS(d));degrees.push(deg);factors_vec.push(d);}}f_array=f_array.map(function(x){return _.multiply(x,m.clone());});return[f_array,factors_vec,degrees];},partfrac:function partfrac(symbol,v,as_array){var vars=variables(symbol);v=v||_.parse(vars[0]);try{var num,den,factors,tfactors,ofactors,nterms,degrees,dterms,max,M,c,powers,div,r,factors_vec,ks,template,tfactors;num=_.expand(symbol.getNum());den=_.expand(symbol.getDenom().toUnitMultiplier());num.multiplier=symbol.multiplier;nterms=num.groupTerms(v);if(Number(__.degree(num,v))>=Number(__.degree(den,v))){div=__.div(num.clone(),_.expand(den.clone()));r=div[0];num=div[1];nterms=num.groupTerms(v);}else r=new _Symbol2(0);if(Number(__.degree(den,v))===1){var q=_.divide(num,den);if(as_array)return[r,q];return _.add(r,q);}ofactors=__.Factor.factor(den);template=__.PartFrac.createTemplate(den.clone(),ofactors,[],v);tfactors=template[0];factors_vec=template[1];degrees=template[2];powers=[nterms.length];dterms=[];factors=[];ks=[];var factor,deg;factors_vec.map(function(x,idx){factor=tfactors[idx];deg=degrees[idx];for(var i=0;i<deg;i++){factors.push(factor.clone());var k=_Symbol2.create(v,i);var t=_.expand(_.multiply(x,k.clone())).groupTerms(v);var p=t.length;powers.push(p);dterms.push(t);ks.push(k.clone());}});max=core.Utils.arrayMax(powers);c=new core.Matrix(core.Utils.fillHoles(nterms,max)).transpose();M=new core.Matrix();for(var i=0;i<dterms.length;i++){M.elements.push(core.Utils.fillHoles(dterms[i],max));}var partials=_.multiply(M.transpose().invert(),c);var retval=as_array?[r]:r;partials.each(function(e,i){var term=_.multiply(ks[i],_.divide(e,factors[i]));if(as_array)retval.push(term);else retval=_.add(retval,term);});return retval;}catch(e){};return symbol;}},degree:function degree(symbol,v,o){o=o||{nd:[],sd:[],depth:0};if(!v){var vars=variables(symbol);if(vars.length>1)throw new Error('You must specify the variable for multivariate polynomials!');if(vars.length===0)return new _Symbol2(0);v=_.parse(vars[0]);}var g=symbol.group;if(symbol.isComposite()){symbol=symbol.clone();symbol.distributeExponent();symbol.each(function(x){o.depth++;__.degree(x,v,o);o.depth--;});}else if(symbol.group===CB){symbol.each(function(x){o.depth++;__.degree(x,v,o);o.depth++;});}else if(g===EX&&symbol.value===v.value){o.sd.push(symbol.power.clone());}else if(g===S&&symbol.value===v.value){o.nd.push(_.parse(symbol.power));}else o.nd.push(new _Symbol2(0));var deg=o.nd.length>0?core.Utils.arrayMax(o.nd):undefined;if(o.depth===0&&o.sd.length>0){if(deg!==undefined)o.sd.unshift(deg);return _.symfunction('max',o.sd);}if(!core.Utils.isSymbol(deg))deg=_.parse(deg);return deg;},sqComplete:function sqComplete(symbol,v,raw){if(!core.Utils.isSymbol(v))v=_.parse(v);var stop=function stop(msg){msg=msg||'Stopping';throw new core.exceptions.ValueLimitExceededError(msg);};if(!symbol.isPoly())stop('Must be a polynomial!');var deg,a,b,c,d,e,coeffs,sign,br,sym,sqrt_a;br=core.Utils.inBrackets;symbol=symbol.clone();deg=core.Algebra.degree(symbol,v);if(!deg.equals(2))stop('Cannot complete square for degree '+deg);coeffs=core.Algebra.coeffs(symbol,v);a=coeffs[2];sign=coeffs[1].sign();b=_.divide(coeffs[1],new _Symbol2(2));c=_.pow(b.clone(),new _Symbol2(2));if(raw)return[a,b,d];sqrt_a=math.sqrt(a);e=_.divide(math.sqrt(c),sqrt_a.clone());d=_.subtract(coeffs[0],_.pow(e.clone(),new _Symbol2(2)));sym=_.parse(br(sqrt_a.clone()+'*'+v+(sign<0?'-':'+')+e));return{a:sym,c:d,f:_.add(_.pow(sym.clone(),new _Symbol2(2)),d.clone())};},Simplify:{strip:function strip(symbol){var c=_.parse(symbol.multiplier);symbol.toUnitMultiplier();var p=_.parse(symbol.power);symbol.toLinear();return[c,p,symbol];},unstrip:function unstrip(cp,symbol){var c=cp[0];var p=cp[1];return _.multiply(c,_.pow(symbol,p));},complexSimp:function complexSimp(num,den){var ac,bd,bc,ad,cd,r1,r2,i1,i2;r1=num.realpart();i1=num.imagpart();r2=den.realpart();i2=den.imagpart();ac=_.multiply(r1.clone(),r2.clone());bd=_.multiply(i1.clone(),i2.clone());bc=_.multiply(r2.clone(),i1);ad=_.multiply(r1,i2.clone());cd=_.add(_.pow(r2,new _Symbol2(2)),_.pow(i2,new _Symbol2(2)));return _.divide(_.add(_.add(ac,bd),_.multiply(_.subtract(bc,ad),_Symbol2.imaginary())),cd);},trigSimp:function trigSimp(symbol){if(symbol.containsFunction(['cos','sin','tan'])){symbol=symbol.clone();var sym_array=__.Simplify.strip(symbol);symbol=sym_array.pop();var retval=symbol.clone();if(symbol.group===CP){var sym=new _Symbol2(0);symbol.each(function(x){var tr=__.Simplify.trigSimp(x.fnTransform());sym=_.add(sym,tr);},true);retval=_.pow(_.multiply(new _Symbol2(symbol.multiplier),sym),new _Symbol2(symbol.power));}else if(symbol.group===CB){var n=symbol.getNum();var d=symbol.getDenom();if(n.fname==='sin'&&d.fname==='cos'&&n.args[0].equals(d.args[0])&&n.power.equals(d.power)){retval=_.parse(core.Utils.format('({0})*({1})*tan({2})^({3})',d.multiplier,n.multiplier,n.args[0],n.power));}if(retval.group===CB){var t=new _Symbol2(1);retval.each(function(x){if(x.fname==='tan'){x=_.parse(core.Utils.format('({0})*sin({1})^({2})/cos({1})^({2})',x.multiplier,__.Simplify.simplify(x.args[0]),x.power));}t=_.multiply(t,x);});retval=t;}}retval=__.Simplify.unstrip(sym_array,retval).distributeMultiplier();symbol=retval;}return symbol;},fracSimp:function fracSimp(symbol){var den=symbol.getDenom();var num=symbol.getNum();if(num.isImaginary()&&den.isImaginary())symbol=__.Simplify.complexSimp(num,den);if(symbol.isComposite()){var symbols=symbol.collectSymbols();var retval,a,b,d1,d2,n1,n2,x,y,c,den,num;a=symbols.pop();while(symbols.length){b=symbols.pop();d1=_.parse(a.getDenom());d2=_.parse(b.getDenom());n1=a.getNum();n2=b.getNum();c=_.multiply(d1.clone(),d2.clone());x=_.multiply(n1,d2);y=_.multiply(n2,d1);a=_.divide(_.add(x,y),c);}den=_.expand(a.getDenom());num=_.expand(a.getNum());if(num.isImaginary()&&den.isImaginary()){retval=__.Simplify.complexSimp(num,den);}else{retval=_.divide(num,den);}if(retval.equals(symbol))return retval;return __.Simplify.simplify(retval);}return symbol;},ratSimp:function ratSimp(symbol){if(symbol.group===CB){var den=__.Simplify.fracSimp(symbol.getDenom());var num=__.Simplify.fracSimp(symbol.getNum());symbol=_.divide(num,den);}return symbol;},simplify:function simplify(symbol){var sym_array=__.Simplify.strip(symbol);symbol=sym_array.pop();symbol=__.Simplify.fracSimp(symbol);if(symbol.isConstant()||symbol.group===core.groups.S){sym_array.push(symbol);var ret=__.Simplify.unstrip(sym_array,symbol);return ret;}var simplified;symbol=symbol.clone();simplified=__.Simplify.trigSimp(symbol);simplified=__.Simplify.ratSimp(simplified);simplified=__.Factor.factor(simplified);if(simplified.group===core.groups.CP&&simplified.isLinear()){var m=simplified.multiplier.clone();simplified.toUnitMultiplier();var r=new _Symbol2(0);simplified.each(function(x){var s=__.Simplify.simplify(x);r=_.add(r,s);});simplified=r;r.multiplier=r.multiplier.multiply(m);}var retval=__.Simplify.unstrip(sym_array,evaluate(simplified));return retval;}},Classes:{Polynomial:Polynomial,Factors:Factors,MVTerm:MVTerm}};nerdamer.useAlgebraDiv=function(){var divide=__.divideFn=_.divide;var calls=0;_.divide=function(a,b){calls++;var ans;if(calls===1)ans=core.Algebra.divide(a,b);else ans=divide(a,b);calls=0;return ans;};};nerdamer.useParserDiv=function(){if(__.divideFn)_.divide=__.divideFn;delete __.divideFn;};nerdamer.register([{name:'factor',visible:true,numargs:1,build:function build(){return __.Factor.factor;}},{name:'simplify',visible:true,numargs:1,build:function build(){return __.Simplify.simplify;}},{name:'gcd',visible:true,numargs:[1],build:function build(){return __.gcd;}},{name:'lcm',visible:true,numargs:[1],build:function build(){return __.lcm;}},{name:'roots',visible:true,numargs:-1,build:function build(){return __.roots;}},{name:'divide',visible:true,numargs:2,build:function build(){return __.divide;}},{name:'div',visible:true,numargs:2,build:function build(){return __.div;}},{name:'partfrac',visible:true,numargs:[1,2],build:function build(){return __.PartFrac.partfrac;}},{name:'deg',visible:true,numargs:[1,2],build:function build(){return __.degree;}},{name:'coeffs',visible:true,numargs:[1,2],build:function build(){var f=function f(){var coeffs=__.coeffs.apply(__,arguments);return new core.Vector(coeffs);};return f;}},{name:'line',visible:true,numargs:[2,3],build:function build(){return __.line;}},{name:'sqcomp',visible:true,numargs:[1,2],build:function build(){var f=function f(x,v){try{v=v||variables(x)[0];var sq=__.sqComplete(x.clone(),v);return sq.f;}catch(e){return x;}};return f;}}]);nerdamer.api();})();if(typeof module!=='undefined'&&typeof nerdamer==='undefined'){var nerdamer=require('./nerdamer.core.js');require('./Algebra.js');}(function(){"use strict";var core=nerdamer.getCore(),_=core.PARSER,Frac=core.Frac,Settings=core.Settings,isSymbol=core.Utils.isSymbol,FN=core.groups.FN,_Symbol3=core.Symbol,text=core.Utils.text,inBrackets=core.Utils.inBrackets,isInt=core.Utils.isInt,format=core.Utils.format,even=core.Utils.even,evaluate=core.Utils.evaluate,N=core.groups.N,S=core.groups.S,FN=core.groups.FN,PL=core.groups.PL,CP=core.groups.CP,CB=core.groups.CB,EX=core.groups.EX,P=core.groups.P,LOG=Settings.LOG,EXP='exp',ABS='abs',SQRT='sqrt',SIN='sin',COS='cos',TAN='tan',SEC='sec',CSC='csc',COT='cot',ASIN='asin',ACOS='acos',ATAN='atan',ASEC='asec',ACSC='acsc',ACOT='acot',SINH='sinh',COSH='cosh',TANH='tanh',CSCH='csch',SECH='sech',COTH='coth',ASECH='asech',ACSCH='acsch',ACOTH='acoth';function NoIntegralFound(msg){this.message=msg||"";}NoIntegralFound.prototype=new Error();_Symbol3.prototype.hasIntegral=function(){return this.containsFunction('integrate');};_Symbol3.prototype.fnTransform=function(){if(this.group!==FN)return this;var retval,a=this.args[0];var m=new _Symbol3(this.multiplier);var sym=this.clone().toUnitMultiplier();if(this.isLinear()){switch(this.fname){case SINH:retval=_.parse(format('(e^({0})-e^(-({0})))/2',a));break;case COSH:retval=_.parse(format('(e^({0})+e^(-({0})))/2',a));break;case TANH:retval=_.parse(format('(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))',a));break;case TAN:retval=_.parse(format('sin({0})/cos({0})',a));break;case CSC:retval=_.parse(format('1/sin({0})',a));break;case SEC:retval=_.parse(format('1/cos({0})',a));break;default:retval=sym;}}else if(this.power.equals(2)){switch(this.fname){case SIN:retval=_.parse(format('1/2-cos(2*({0}))/2',a));break;case COS:retval=_.parse(format('1/2+cos(2*({0}))/2',a));break;case TAN:retval=_.parse(format('sin({0})^2/cos({0})^2',a));break;case COSH:retval=_.parse(format('1/2+cosh(2*({0}))/2',a));break;case SINH:retval=_.parse(format('-1/2+cosh(2*({0}))/2',a));break;case TANH:retval=_.parse(format('(1+cosh(2*({0})))/(-1+cosh(2*({0})))',a));break;case SEC:retval=_.parse(format('(1-cos(2*({0})))/(1+cos(2*({0})))+1',a));break;default:retval=sym;}}else if(this.fname===SEC){retval=_.parse(format('1/cos({0})^({1})',this.args[0],this.power));}else if(this.fname===CSC){retval=_.parse(format('1/sin({0})^({1})',this.args[0],this.power));}else if(this.fname===TAN){if(this.power.lessThan(0)){retval=_.parse(format('cos({0})^(-({1}))/sin({0})^({1})',this.args[0],this.power.negate()));}else{retval=_.parse(format('sin({0})^({1})/cos({0})^({1})',this.args[0],this.power));}}else if(this.fname===SIN&&this.power.lessThan(0)){retval=_.parse(format('csc({0})^(-({1}))',this.args[0],this.power.negate()));}else if(this.fname===COS&&this.power.lessThan(0)){retval=_.parse(format('sec({0})^(-({1}))',this.args[0],this.power.negate()));}else if(this.fname===SIN&&this.power.equals(3)){retval=_.parse(format('(3*sin({0})-sin(3*({0})))/4',this.args[0]));}else if(this.fname===COS&&this.power.equals(3)){retval=_.parse(format('(cos(3*({0}))+3*cos({0}))/4',this.args[0]));}else retval=sym;return _.multiply(retval,m);};_Symbol3.prototype.hasTrig=function(){if(this.isConstant(true)||this.group===S)return false;if(this.fname&&(core.Utils.in_trig(this.fname)||core.Utils.in_inverse_trig(this.fname)))return true;if(this.symbols){for(var x in this.symbols){if(this.symbols[x].hasTrig())return true;}}return false;};core.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral();};core.Utils.toCommonDenominator=function(symbol){if(symbol.isComposite()&&symbol.isLinear()){var m=new _Symbol3(symbol.multiplier);var denominator=new _Symbol3(1);var numerator=new _Symbol3(0);symbol.each(function(x){denominator=_.multiply(denominator,x.getDenom());},true);symbol.each(function(x){var num=x.getNum();var den=x.getDenom();var factor=_.multiply(num,_.divide(denominator.clone(),den));numerator=_.add(numerator,factor);});var retval=_.multiply(m,core.Algebra.divide(_.expand(numerator),_.expand(denominator)));return retval;}return symbol;};core.Utils.in_inverse_trig=function(x){var inv_trig_fns=[ASIN,ACOS,ATAN,ACSC,ASEC,ACOT];return inv_trig_fns.indexOf(x)!==-1;};core.Utils.in_trig=function(x){var trig_fns=[COS,SIN,TAN,SEC,CSC,COT];return trig_fns.indexOf(x)!==-1;};core.Utils.in_htrig=function(x){var trig_fns=[SINH,COSH,TANH,ACSCH,ASECH,ACOTH];return trig_fns.indexOf(x)!==-1;};var all_functions=core.Utils.all_functions=function(arr){for(var i=0,l=arr.length;i<l;i++){if(arr[i].group!==FN)return false;}return true;},cosAsinBtransform=core.Utils.cosAsinBtranform=function(symbol1,symbol2){var a,b;a=symbol1.args[0];b=symbol2.args[0];return _.parse(format('(sin(({0})+({1}))-sin(({0})-({1})))/2',a,b));},cosAsinAtransform=core.Utils.cosAsinAtranform=function(symbol1,symbol2){if(Number(symbol2.power)!==1)return _.multiply(symbol1,symbol2);var a;a=symbol1.args[0];return _.parse(format('(sin(2*({0})))/2',a));},sinAsinBtransform=core.Utils.cosAsinBtranform=function(symbol1,symbol2){var a,b;a=symbol1.args[0];b=symbol2.args[0];return _.parse(format('(cos(({0})+({1}))-cos(({0})-({1})))/2',a,b));},trigTransform=core.Utils.trigTransform=function(arr){var map={},symbol,t,retval=new _Symbol3(1);for(var i=0,l=arr.length;i<l;i++){symbol=arr[i];if(symbol.group===FN){var fname=symbol.fname;if(fname===COS&&map[SIN]){if(map[SIN].args[0].toString()!==symbol.args[0].toString()){t=cosAsinBtransform(symbol,map[SIN]);}else{t=cosAsinAtransform(symbol,map[SIN]);}delete map[SIN];retval=_.multiply(retval,t);}else if(fname===SIN&&map[COS]){if(map[COS].args[0].toString()!==symbol.args[0].toString()){t=cosAsinBtransform(symbol,map[COS]);}else{t=cosAsinAtransform(symbol,map[COS]);}delete map[COS];retval=_.multiply(retval,t);}else if(fname===SIN&&map[SIN]){if(map[SIN].args[0].toString()!==symbol.args[0].toString()){t=sinAsinBtransform(symbol,map[SIN]);delete map[SIN];}else{t=_.multiply(symbol,map[SIN]);delete map[SIN];}retval=t;}else map[fname]=symbol;}else retval=_.multiply(retval,symbol);}for(var x in map){retval=_.multiply(retval,map[x]);}return retval;};core.Settings.integration_depth=10;var __=core.Calculus={version:'1.4.5',sum:function sum(fn,index,start,end){if(!(index.group===core.groups.S))throw new core.exceptions.NerdamerTypeError('Index must be symbol. '+text(index)+' provided');index=index.value;var retval;if(core.Utils.isNumericSymbol(start)&&core.Utils.isNumericSymbol(end)){var modifier=end-start<200?'':'PARSE2NUMBER';start=Number(start);end=Number(end);retval=core.Utils.block(modifier,function(){var f=fn.text(),subs={'~':true},retval=new core.Symbol(0);for(var i=start;i<=end;i++){subs[index]=new _Symbol3(i);var ans=_.parse(f,subs);retval=_.add(retval,ans);}return retval;});}else{retval=_.symfunction('sum',arguments);}return retval;},product:function product(fn,index,start,end){if(!(index.group===core.groups.S))throw new core.exceptions.NerdamerTypeError('Index must be symbol. '+text(index)+' provided');index=index.value;var retval;if(core.Utils.isNumericSymbol(start)&&core.Utils.isNumericSymbol(end)){var modifier=end-start<200?'':'PARSE2NUMBER';retval=core.Utils.block(modifier,function(){start=Number(start);end=Number(end.multiplier);var f=fn.text(),subs={},retval=new core.Symbol(1);for(var i=start;i<=end;i++){subs[index]=new _Symbol3(i);retval=_.multiply(retval,_.parse(f,subs));}return retval;});}else{retval=_.symfunction('product',arguments);}return retval;},diff:function diff(symbol,wrt,nth){if(core.Utils.isVector(symbol)){var vector=new core.Vector([]);symbol.each(function(x){vector.elements.push(__.diff(x,wrt,nth));});return vector;}else if(core.Utils.isMatrix(symbol)){var matrix=new core.Matrix();symbol.each(function(x,j,i){matrix.set(i,j,__.diff(x,wrt,nth));});return matrix;}var d=isSymbol(wrt)?wrt.text():wrt;nth=isSymbol(nth)?nth.multiplier:nth||1;if(d===undefined)d=core.Utils.variables(symbol)[0];if(symbol.group===FN&&symbol.fname===SQRT){var s=symbol.args[0],sp=symbol.power.clone();if(s.group!==N||s.group!==P){s.power=isSymbol(s.power)?_.multiply(s.power,_.multiply(new _Symbol3(1/2)),sp):s.power.multiply(new Frac(0.5)).multiply(sp);s.multiplier=s.multiplier.multiply(symbol.multiplier);}symbol=s;}if(symbol.group===FN&&!isSymbol(symbol.power)){var a=derive(_.parse(symbol));var b=__.diff(symbol.args[0].clone(),d);symbol=_.multiply(a,b);}else{symbol=derive(symbol);}if(nth>1){nth--;symbol=__.diff(symbol,wrt,nth);}return symbol;function polydiff(symbol){if(symbol.value===d||symbol.contains(d,true)){symbol.multiplier=symbol.multiplier.multiply(symbol.power);symbol.power=symbol.power.subtract(new Frac(1));if(symbol.power.equals(0)){symbol=_Symbol3(symbol.multiplier);}}return symbol;};function derive(symbol){var g=symbol.group,a,b,cp;if(g===N||g===S&&symbol.value!==d||g===P){symbol=_Symbol3(0);}else if(g===S){symbol=polydiff(symbol);}else if(g===CB){var m=symbol.multiplier.clone();symbol.toUnitMultiplier();var retval=_.multiply(product_rule(symbol),polydiff(symbol));retval.multiplier=retval.multiplier.multiply(m);return retval;}else if(g===FN&&symbol.power.equals(1)){switch(symbol.fname){case LOG:cp=symbol.clone();symbol=symbol.args[0].clone();symbol.power=symbol.power.negate();symbol.multiplier=cp.multiplier.divide(symbol.multiplier);break;case COS:symbol.fname=SIN;symbol.multiplier.negate();break;case SIN:symbol.fname=COS;break;case TAN:symbol.fname=SEC;symbol.power=new Frac(2);break;case SEC:symbol=qdiff(symbol,TAN);break;case CSC:symbol=qdiff(symbol,'-cot');break;case COT:symbol.fname=CSC;symbol.multiplier.negate();symbol.power=new Frac(2);break;case ASIN:symbol=_.parse('(sqrt(1-('+text(symbol.args[0])+')^2))^(-1)');break;case ACOS:symbol=_.parse('-(sqrt(1-('+text(symbol.args[0])+')^2))^(-1)');break;case ATAN:symbol=_.parse('(1+('+text(symbol.args[0])+')^2)^(-1)');break;case ABS:m=symbol.multiplier.clone();symbol.toUnitMultiplier();b=symbol.args[0].clone();b.toUnitMultiplier();symbol=_.parse(inBrackets(text(symbol.args[0]))+'/abs'+inBrackets(text(b)));symbol.multiplier=m;break;case'parens':symbol=_Symbol3(1);break;case'cosh':symbol.fname='sinh';break;case'sinh':symbol.fname='cosh';break;case TANH:symbol.fname=SECH;symbol.power=new Frac(2);break;case SECH:symbol=qdiff(symbol,'-tanh');break;case CSCH:var arg=String(symbol.args[0]);return _.parse('-coth('+arg+')*csch('+arg+')');break;case COTH:var arg=String(symbol.args[0]);return _.parse('-csch('+arg+')^2');break;case'asinh':symbol=_.parse('(sqrt(1+('+text(symbol.args[0])+')^2))^(-1)');break;case'acosh':symbol=_.parse('(sqrt(-1+('+text(symbol.args[0])+')^2))^(-1)');break;case'atanh':symbol=_.parse('(1-('+text(symbol.args[0])+')^2)^(-1)');break;case ASECH:var arg=String(symbol.args[0]);symbol=_.parse('-1/(sqrt(1/('+arg+')^2-1)*('+arg+')^2)');break;case ACOTH:symbol=_.parse('-1/(('+symbol.args[0]+')^2-1)');break;case ACSCH:var arg=String(symbol.args[0]);symbol=_.parse('-1/(sqrt(1/('+arg+')^2+1)*('+arg+')^2)');break;case ASEC:var arg=String(symbol.args[0]);symbol=_.parse('1/(sqrt(1-1/('+arg+')^2)*('+arg+')^2)');break;case ACSC:var arg=String(symbol.args[0]);symbol=_.parse('-1/(sqrt(1-1/('+arg+')^2)*('+arg+')^2)');break;case ACOT:symbol=_.parse('-1/(('+symbol.args[0]+')^2+1)');break;case'S':var arg=String(symbol.args[0]);symbol=_.parse('sin((pi*('+arg+')^2)/2)');break;case'C':var arg=String(symbol.args[0]);symbol=_.parse('cos((pi*('+arg+')^2)/2)');break;case'Si':var arg=symbol.args[0];symbol=_.parse('sin('+arg+')/('+arg+')');break;case'Shi':var arg=symbol.args[0];symbol=_.parse('sinh('+arg+')/('+arg+')');break;case'Ci':var arg=symbol.args[0];symbol=_.parse('cos('+arg+')/('+arg+')');break;case'Chi':var arg=symbol.args[0];symbol=_.parse('cosh('+arg+')/('+arg+')');break;case'Ei':var arg=symbol.args[0];symbol=_.parse('e^('+arg+')/('+arg+')');break;case'Li':var arg=symbol.args[0];symbol=_.parse('1/'+Settings.LOG+'('+arg+')');break;case'erf':symbol=_.parse('(2*e^(-('+symbol.args[0]+')^2))/sqrt(pi)');break;case'atan2':var x_=String(symbol.args[0]),y_=String(symbol.args[1]);symbol=_.parse('('+y_+')/(('+y_+')^2+('+x_+')^2)');break;case'sign':symbol=new _Symbol3(0);break;case Settings.LOG10:symbol=_.parse('1/(('+symbol.args[0]+')*'+Settings.LOG+'(10))');break;default:symbol=_.symfunction('diff',[symbol,wrt]);}}else if(g===EX||g===FN&&isSymbol(symbol.power)){var value;if(g===EX){value=symbol.value;}else if(g===FN&&symbol.contains(d)){value=symbol.fname+inBrackets(text(symbol.args[0]));}else{value=symbol.value+inBrackets(text(symbol.args[0]));}a=_.multiply(_.parse(LOG+inBrackets(value)),symbol.power.clone());b=__.diff(_.multiply(_.parse(LOG+inBrackets(value)),symbol.power.clone()),d);symbol=_.multiply(symbol,b);}else if(g===FN&&!symbol.power.equals(1)){b=symbol.clone();b.toLinear();b.toUnitMultiplier();symbol=_.multiply(polydiff(symbol.clone()),derive(b));}else if(g===CP||g===PL){var result=new _Symbol3(0);for(var x in symbol.symbols){result=_.add(result,__.diff(symbol.symbols[x].clone(),d));}symbol=_.multiply(polydiff(symbol.clone()),result);}symbol.updateHash();return symbol;};function qdiff(symbol,val,altVal){return _.multiply(symbol,_.parse(val+inBrackets(altVal||text(symbol.args[0]))));};function product_rule(symbol){var symbols=symbol.collectSymbols(),result=new _Symbol3(0),l=symbols.length;for(var i=0;i<l;i++){var df=__.diff(symbols[i].clone(),d);for(var j=0;j<l;j++){if(i!==j){df=_.multiply(df,symbols[j].clone());}}result=_.add(result,df);}return result;};},integration:{u_substitution:function u_substitution(symbols,dx){function try_combo(a,b,f){var d=__.diff(b,dx);var q=f?f(a,b):_.divide(a.clone(),d);if(!q.contains(dx,true))return q;return null;}function do_fn_sub(fname,arg){var subbed=__.integrate(_.symfunction(fname,[new _Symbol3(u)]),u,0);subbed=subbed.sub(new _Symbol3(u),arg);subbed.updateHash();return subbed;}var a=symbols[0].clone(),b=symbols[1].clone(),g1=a.group,g2=b.group,u='__u__',Q;if(g1===FN&&g2!==FN){var arg=a.args[0];Q=try_combo(b,arg.clone());if(Q)return _.multiply(Q,do_fn_sub(a.fname,arg));Q=try_combo(b,a);if(Q){return __.integration.poly_integrate(a);}}else if(g2===FN&&g1!==FN){var arg=b.args[0];Q=try_combo(a,arg.clone());if(Q)return _.multiply(Q,do_fn_sub(b.fname,arg));}else if(g1===FN&&g2===FN){Q=try_combo(a.clone(),b.clone());if(Q)return _.multiply(__.integration.poly_integrate(b),Q);Q=try_combo(b.clone(),a.clone());if(Q)return _.multiply(__.integration.poly_integrate(b),Q);}else if(g1===EX&&g2!==EX){var p=a.power;Q=try_combo(b,p.clone());if(!Q){var dc=__.integration.decompose_arg(p.clone(),dx);var xp=__.diff(dc[2].clone(),dx);var dc2=__.integration.decompose_arg(xp.clone(),dx);if(_.multiply(dc[1],dc2[1]).power.equals(b.power)){var m=_.divide(dc[0].clone(),dc2[0].clone());var new_val=_.multiply(m.clone(),_.pow(new _Symbol3(a.value),_.multiply(dc[0],new _Symbol3(u))));new_val=_.multiply(new_val,new _Symbol3(u));return __.integration.by_parts(new_val,u,0,{}).sub(u,dc[1].clone());}}var integrated=__.integrate(a.sub(p.clone(),new _Symbol3(u)),u,0),retval=_.multiply(integrated.sub(new _Symbol3(u),p),Q);return retval;}else if(g2===EX&&g1!==EX){var p=b.power;Q=try_combo(a,p.clone());var integrated=__.integrate(b.sub(p,new _Symbol3(u)),u,0);return _.multiply(integrated.sub(new _Symbol3(u),p),Q);}else if(a.isComposite()||b.isComposite()){var f=function f(a,b){var d=__.diff(b,dx);var A=core.Algebra.Factor.factor(a),B=core.Algebra.Factor.factor(d);var q=_.divide(A,B);return q;};var f1=a.isComposite()?a.clone().toLinear():a.clone(),f2=b.isComposite()?b.clone().toLinear():b.clone();Q=try_combo(f1.clone(),f2.clone(),f);if(Q)return _.multiply(__.integration.poly_integrate(b),Q);Q=try_combo(f2.clone(),f1.clone(),f);if(Q)return _.multiply(__.integration.poly_integrate(a),Q);}},poly_integrate:function poly_integrate(x){var p=x.power.toString(),m=x.multiplier.toDecimal(),s=x.toUnitMultiplier().toLinear();if(Number(p)===-1){return _.multiply(new _Symbol3(m),_.symfunction(LOG,[s]));}return _.parse(format('({0})*({1})^(({2})+1)/(({2})+1)',m,s,p));},stop:function stop(msg){msg=msg||'Unable to compute integral!';core.Utils.warn(msg);throw new NoIntegralFound(msg);},partial_fraction:function partial_fraction(input,dx,depth,opt){if(!isSymbol(dx))dx=_.parse(dx);var result,partial_fractions;result=new _Symbol3(0);partial_fractions=core.Algebra.PartFrac.partfrac(input,dx);if(partial_fractions.group===CB&&partial_fractions.isLinear()){partial_fractions.each(function(x){if(!x.isLinear())__.integration.stop();});partial_fractions.each(function(x){result=_.add(result,__.integrate(x,dx,depth,opt));});}else{result=_.add(result,__.integrate(partial_fractions,dx,depth,opt));}return result;},get_udv:function get_udv(symbol){var parts=[[],[],[],[],[]];var setSymbol=function setSymbol(x){var g=x.group;if(g===FN){var fname=x.fname;if(core.Utils.in_trig(fname)||core.Utils.in_htrig(fname))parts[3].push(x);else if(core.Utils.in_inverse_trig(fname))parts[1].push(x);else if(fname===LOG)parts[0].push(x);else{__.integration.stop();}}else if(g===S||x.isComposite()&&x.isLinear()||g===CB&&x.isLinear()){parts[2].push(x);}else if(g===EX||x.isComposite()&&!x.isLinear())parts[4].push(x);else __.integration.stop();};if(symbol.group===CB)symbol.each(function(x){setSymbol(_Symbol3.unwrapSQRT(x,true));});else setSymbol(symbol);var u,dv=new _Symbol3(1);for(var i=0;i<5;i++){var part=parts[i],t,l=part.length;if(l>0){if(l>1){t=new _Symbol3(1);for(var j=0;j<l;j++){t=_.multiply(t,part[j].clone());}}else t=part[0].clone();if(!u){u=t;u.multiplier=u.multiplier.multiply(symbol.multiplier);}else dv=_.multiply(dv,t);}}return[u,dv];},trig_sub:function trig_sub(symbol,dx,depth,opt,parts,symbols){parts=parts||__.integration.decompose_arg(symbol.clone().toLinear(),dx);var b=parts[3],ax=parts[2],a=parts[0],x=parts[1];if(x.power.equals(2)&&a.greaterThan(0)){var t=core.Utils.getU(symbol),u=_.parse(TAN+inBrackets(t)),du=_.parse(SEC+inBrackets(t)+'^2'),f=_.multiply(symbol.sub(x,u),du);var integral=__.integrate(f,t,depth,opt).sub(u,x);core.Utils.clearU(u);return integral;}},by_parts:function by_parts(symbol,dx,depth,o){o.previous=o.previous||[];var udv,u,dv,du,v,vdu,uv,retval,integral_vdu,m,c,vdu_s;udv=__.integration.get_udv(symbol);u=udv[0];dv=udv[1];du=_Symbol3.unwrapSQRT(_.expand(__.diff(u.clone(),dx)),true);c=du.clone().stripVar(dx);du=_.divide(du,c.clone());v=__.integrate(dv.clone(),dx,depth||0);vdu=_.multiply(v.clone(),du);vdu_s=vdu.toString();if(o.previous.indexOf(vdu_s)!==-1&&core.Utils.in_trig(u.fname)&&dv.isE()){o.is_cyclic=true;return new _Symbol3(1);}else o.previous.push(vdu_s);uv=_.multiply(u,v);m=vdu.multiplier.clone();vdu.toUnitMultiplier();integral_vdu=_.multiply(__.integrate(vdu.clone(),dx,depth,o),c);integral_vdu.multiplier=integral_vdu.multiplier.multiply(m);retval=_.subtract(uv,integral_vdu);if(o.is_cyclic){o.previous.pop();if(o.previous.length===0){retval=_.expand(retval);var rem=new _Symbol3(0);retval.each(function(x){if(!x.contains(dx))rem=_.add(rem,x.clone());});retval=_.divide(_.subtract(retval,rem.clone()),_.subtract(new _Symbol3(1),rem));}}return retval;},decompose_arg:core.Utils.decompose_fn},integrate:function integrate(original_symbol,dt,depth,opt){if(!dt){var vars=core.Utils.variables(original_symbol);if(vars.length===1)dt=vars[0];dt=dt||'x';}if(core.Utils.isVector(original_symbol)){var vector=new core.Vector([]);original_symbol.each(function(x){vector.elements.push(__.integrate(x,dt));});return vector;}if(!isNaN(dt))_.error('variable expected but received '+dt);if(original_symbol.isConstant(true))return _.multiply(original_symbol.clone(),_.parse(dt));opt=opt||{};return core.Utils.block('PARSE2NUMBER',function(){depth=depth||0;var dx=isSymbol(dt)?dt.toString():dt,symbol=_Symbol3.unwrapSQRT(original_symbol.clone(),true),g=symbol.group,retval;try{if(++depth>core.Settings.integration_depth)__.integration.stop('Maximum depth reached. Exiting!');if(!symbol.contains(dx,true)){retval=_.multiply(symbol.clone(),_.parse(dx));}else if(g===S){retval=__.integration.poly_integrate(symbol,dx,depth);}else if(g===EX){if(symbol.previousGroup===FN&&!(symbol.fname==='sqrt'||symbol.fname===Settings.PARENTHESIS))__.integration.stop();if(symbol.contains(dx)&&symbol.previousGroup!==FN){if(symbol.power.contains(dx))__.integration.stop();else{var t=__.diff(symbol.clone().toLinear(),dx);if(t.contains(dx))__.integration.stop();retval=__.integration.poly_integrate(symbol,dx,depth);}}else{var a=__.diff(symbol.power.clone(),dx);if(a.contains(dx)){var aa=a.stripVar(dx),x=_.divide(a.clone(),aa.clone());if(x.group===S&&x.isLinear()){aa.multiplier=aa.multiplier.divide(new Frac(2));return _.parse(format('({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))',aa,dx,symbol.multiplier));}else __.integration.stop();}if(symbol.isE()){if(a.isLinear())retval=symbol;else{if(a.isE()&&a.power.group===S&&a.power.power.equals(1))retval=_.multiply(_.symfunction('Ei',[symbol.power.clone()]),symbol.power);else __.integration.stop();}}else{var d=_.symfunction(LOG,[_.parse(symbol.value)]);retval=_.divide(symbol,d);}retval=_.divide(retval,a);}}else if(symbol.isComposite()&&symbol.isLinear()){var m=_.parse(symbol.multiplier);symbol.toUnitMultiplier();retval=new _Symbol3(0);symbol.each(function(x){retval=_.add(retval,__.integrate(x,dx,depth));});retval=_.multiply(m,retval);}else if(g===CP){if(symbol.power.greaterThan(1))symbol=_.expand(symbol);if(symbol.power.equals(1)){retval=new _Symbol3(0);symbol.each(function(x){retval=_.add(retval,__.integrate(x,dx,depth));},true);}else{var p=Number(symbol.power),m=symbol.multiplier.clone();symbol.toUnitMultiplier();var fn=symbol.clone().toLinear(),decomp=__.integration.decompose_arg(fn,dx),b=decomp[3],ax=decomp[2],a=decomp[0],x=decomp[1];if(p===-1&&x.group!==PL&&x.power.equals(2)){var b_is_positive=isInt(b)?b>0:true;if(x.group===S&&x.power.equals(2)&&b_is_positive){var unwrapAbs=function unwrapAbs(s){var result=new _Symbol3(1);s.each(function(x){result=_.multiply(result,x.fname==='abs'?x.args[0]:x);});return result;};var A=a.clone(),B=b.clone();A=_.pow(A,new _Symbol3(1/2));B=_.pow(B,new _Symbol3(1/2));var d=_.multiply(unwrapAbs(B),unwrapAbs(A)),f=_.symfunction(ATAN,[_.divide(_.multiply(a,x.toLinear()),d.clone())]);retval=_.divide(f,d);}else if(x.group===S&&x.isLinear()){retval=_.divide(__.integration.poly_integrate(symbol),a);}else{if(x.power.equals(4)){var A,B,C,D,E,F,f1,f2,f3,f4,L1,L2;var br=inBrackets;A=_.parse(SQRT+br(a)+'*'+dx+'^2');B=_.parse(SQRT+br(2)+'*'+br(a)+'^'+br('1/4')+'*'+br(b)+'^'+br('1/4')+'*'+dx);C=_.parse(SQRT+br(b));f1=_.add(_.add(A.clone(),B.clone()),C.clone());f2=_.add(_.subtract(A,B),C);D=_.parse(SQRT+br(2)+'*'+br(b)+'^'+br('3/4'));E=_.parse(SQRT+br(b)+'*'+br(b)+'^'+br('1/4')+'*'+dx);F=_.parse(2+'*'+br(b)+'*'+SQRT+br(2)+'*'+br(b)+'^'+br('1/4'));L1=_.divide(_.subtract(D.clone(),E.clone()),_.multiply(F.clone(),f2));L2=_.divide(_.add(D,E),_.multiply(F,f1.clone()));retval=_.add(__.integrate(L1,dx,depth,opt),__.integrate(L2,dx,depth,opt));}else retval=__.integration.partial_fraction(symbol,dx,depth);}}else if(p===-1/2){if(x.group===S&&x.power.equals(2)){if(ax.multiplier.lessThan(0)&&!b.multiplier.lessThan(0)){a.negate();if(b.isConstant()&&a.isConstant()){var d=_.symfunction(SQRT,[a.clone()]),d2=_.symfunction(SQRT,[_.multiply(a.clone(),b)]);retval=_.divide(_.symfunction(ASIN,[_.divide(ax.toLinear(),d2)]),d);}else{var sqrt_a=_.symfunction(SQRT,[a]),sqrt_ax=_.multiply(sqrt_a.clone(),x.clone().toLinear());retval=_.divide(_.symfunction(ATAN,[_.divide(sqrt_ax,_.symfunction(SQRT,[fn.clone()]))]),sqrt_a);}}else{__.integration.stop();}}else{__.integration.stop();}}else{if(x.isLinear()&&x.group!==PL)retval=_.divide(__.integration.poly_integrate(symbol),a);else if(x.power.equals(2)&&a.greaterThan(0)){var sqa,sqb,aob,bsqi,n,integral,u,v,uv;sqa=_.parse(SQRT+inBrackets(a));sqb=_.parse(SQRT+inBrackets(b));aob=_.multiply(sqa.clone(),sqb.clone()).invert();bsqi=_.pow(b,new _Symbol3(symbol.power));uv=core.Utils.getU(symbol);u=_.multiply(aob,x.clone().toLinear());v=_.parse(ATAN+inBrackets(u));var n=(Math.abs(symbol.power)-1)*2;var integral=__.integrate(_.parse(COS+inBrackets(uv)+'^'+n));core.Utils.clearU(uv);return _.multiply(integral.sub(uv,v),bsqi);}else{if(symbol.group!==CB&&!symbol.power.lessThan(0)){retval=__.integration.by_parts(symbol,dx,depth,opt);}else{var f=symbol.clone().toLinear();var factored=core.Algebra.Factor.factor(f);var was_factored=factored.toString()!==f.toString();if(core.Algebra.degree(f,_.parse(dx)).equals(2)&&!was_factored){try{var f1,fx,u,sq;sq=core.Algebra.sqComplete(f,dx);u=core.Utils.getU(f);f1=sq.f.sub(sq.a,u);fx=_.pow(f1,_.parse(symbol.power));retval=__.integrate(fx,u).sub(u,sq.a);}catch(e){__.integration.stop();}}else retval=__.integration.partial_fraction(symbol,dx,depth,opt);}}}retval.multiplier=retval.multiplier.multiply(m);}}else if(g===FN){var arg=symbol.args[0],m=symbol.multiplier.clone();symbol.toUnitMultiplier();var decomp=__.integration.decompose_arg(arg,dx);var a=decomp[0],x=decomp[1],fname=symbol.fname;if(fname===LOG||fname===ASIN||fname===ACOS||fname===ATAN&&x.isLinear()){var p=symbol.power.toString();if(isInt(p))depth=depth-p;if(!arg.isComposite())retval=_.multiply(_.parse(m),__.integration.by_parts(symbol,dx,depth,opt));else{var u=core.Utils.getU(symbol);var f=_.pow(_.parse(LOG+inBrackets(u)),new _Symbol3(p));var du=__.diff(arg,dx);var u_du=_.multiply(f,du);var integral=__.integrate(u_du,u,depth,opt);retval=_.multiply(_.parse(m),integral.sub(u,arg));}}else if(fname===TAN&&symbol.power.lessThan(0)){var sym=symbol.clone();sym.power.negate();sym.fname=COT;return _.multiply(_.parse(m),__.integrate(sym,dx,depth));}else{if(!a.contains(dx,true)&&symbol.isLinear()){if(fname===ABS){var x=_.divide(arg.clone(),a.clone());if(x.group===S&&!x.power.lessThan(0)){if(core.Utils.even(x.power)){retval=__.integrate(arg,dx,depth);}else{var integrated=__.integrate(x,dx,depth);integrated.power=integrated.power.subtract(new Frac(1));retval=_.multiply(_.multiply(_.symfunction(ABS,[x.toLinear()]),integrated),a);}}else __.integration.stop();}else{var ag=symbol.args[0].group,decomposed=__.integration.decompose_arg(arg,dx);if(!(ag===CP||ag===S||ag===CB)||!decomposed[1].power.equals(1)||arg.hasFunc())__.integration.stop();switch(fname){case COS:retval=_.symfunction(SIN,[arg]);break;case SIN:retval=_.symfunction(COS,[arg]);retval.negate();break;case TAN:retval=_.parse(format(Settings.LOG+'(sec({0}))',arg));break;case SEC:retval=_.parse(format(Settings.LOG+'(tan({0})+sec({0}))',arg));break;case CSC:retval=_.parse(format('-'+Settings.LOG+'(csc({0})+cot({0}))',arg));break;case COT:retval=_.parse(format(Settings.LOG+'(sin({0}))',arg));break;case SINH:retval=_.symfunction(COSH,[arg]);break;case COSH:retval=_.symfunction(SINH,[arg]);break;case TANH:retval=_.parse(format(Settings.LOG+'(cosh({0}))',arg));break;case ASEC:retval=__.integration.by_parts(symbol,dx,depth,opt);break;case ACSC:retval=__.integration.by_parts(symbol,dx,depth,opt);break;case ACOT:retval=__.integration.by_parts(symbol,dx,depth,opt);break;case ASECH:retval=__.integration.by_parts(symbol,dx,depth,opt);break;case ACSCH:retval=__.integration.by_parts(symbol,dx,depth,opt);break;case ACOTH:retval=__.integration.by_parts(symbol,dx,depth,opt);break;case SECH:retval=_.parse(format('atan(sinh({0}))',arg));break;case CSCH:retval=_.parse(format(Settings.LOG+'(tanh(({0})/2))',arg));break;case COTH:retval=_.parse(format(Settings.LOG+'(sinh({0}))',arg));break;case EXP:retval=__.integrate(_.parse(format('e^({0})',arg)),dx,depth);break;case'S':var arg=symbol.args[0].clone(),dc=__.integration.decompose_arg(arg,dx),x_=dc[1],a_=dc[0];var b_=dc[3];retval=_.parse(format('(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)',a_,b_,x));break;case'C':var arg=symbol.args[0].clone(),dc=__.integration.decompose_arg(arg,dx),x_=dc[1],a_=dc[0];var b_=dc[3];retval=_.parse(format('(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)',a_,b_,x_));break;case'erf':var arg=symbol.args[0].clone(),dc=__.integration.decompose_arg(arg,dx),x_=dc[1],a_=dc[0];retval=_.parse(format('e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))',a_,x_,arg));break;case'sign':retval=_.multiply(symbol.clone(),arg.clone());break;default:__.integration.stop();}retval=_.divide(retval,a);}}else if(x.isLinear()){if(fname===COS||fname===SIN){var p=Number(symbol.power);if(p<0){symbol.fname=fname===SIN?CSC:SEC;symbol.invert().updateHash();retval=__.integrate(symbol,dx,depth);}else{var arg=symbol.args[0],rd=symbol.clone(),rd2=symbol.clone(),q=new _Symbol3((p-1)/p),na=_.multiply(a.clone(),new _Symbol3(p)).invert();rd.power=rd.power.subtract(new Frac(1));rd2.power=rd2.power.subtract(new Frac(2));var t=_.symfunction(fname===COS?SIN:COS,[arg.clone()]);if(fname===SIN)t.negate();retval=_.add(_.multiply(_.multiply(na,rd),t),_.multiply(q,__.integrate(_.parse(rd2),dx,depth)));}}else if(fname===TAN||fname===COT){if(symbol.args[0].isLinear(dx)){var n=symbol.power.subtract(new Frac(1)).toString(),r=symbol.clone().toUnitMultiplier(),w=_.parse(format((fname===COT?'-':'')+'1/({2}*{0})*{3}({1})^({0})',n,arg,a,fname));r.power=r.power.subtract(new Frac(2));if(r.power.equals(0))r=_.parse(r);retval=_.subtract(w,__.integrate(r,dx,depth));}}else if(fname===SEC||fname===CSC){var n1=symbol.power.subtract(new Frac(1)).toString(),n2=symbol.power.subtract(new Frac(2)).toString(),f2=fname===SEC?TAN:COT,r=symbol.clone().toUnitMultiplier(),parse_str=format((fname===CSC?'-':'')+'1/({0}*{1})*{4}({3})^({2})*{5}({3})',a,n1,n2,arg,fname,f2),w=_.parse(parse_str);r.power=r.power.subtract(new Frac(2));if(r.power.equals(0))r=_.parse(r);retval=_.add(w,_.multiply(new _Symbol3(n2/n1),__.integrate(r,dx,depth)));}else if((fname===COSH||fname===SINH)&&symbol.power.equals(2)){retval=__.integrate(symbol.fnTransform(),dx,depth);}else __.integration.stop();}else __.integration.stop();retval.multiplier=retval.multiplier.multiply(m);}}else if(g===PL){retval=__.integration.partial_fraction(symbol,dx,depth);}else if(g===CB){var den=symbol.getDenom();if(den.group===S)symbol=_.expand(symbol);var coeff=symbol.stripVar(dx);var cfsymbol=_.divide(symbol.clone(),coeff.clone());if(coeff.contains(dx)){cfsymbol=_.multiply(cfsymbol,coeff);coeff=new _Symbol3(1);}if(cfsymbol.group!==CB){if(cfsymbol.equals(1)){return __.integrate(_.expand(symbol),dx,depth);}if(cfsymbol.clone().toLinear().isPoly(true)&&core.Utils.variables(cfsymbol).length>1){cfsymbol=core.Algebra.Factor.factor(cfsymbol);}retval=__.integrate(cfsymbol,dx,depth);}else{var symbols=cfsymbol.collectSymbols().sort(function(a,b){if(a.group===b.group){if(Number(a.power)===Number(b.power))if(a<b)return 1;else return-1;return b.power-a.power;}return b.group-a.group;}).map(function(x){var unwrapped=_Symbol3.unwrapSQRT(x,true);if(unwrapped.fname===EXP){return _.parse(format('({1})*e^({0})',unwrapped.args[0],unwrapped.multiplier));}return unwrapped;});var l=symbols.length;if(symbol.power<0){if(l===2){return __.integrate(_.expand(symbol),dx,depth,opt);}}else{if(l===2){try{retval=__.integration.u_substitution(symbols,dx);}catch(e){;}if(!retval){var g1=symbols[0].group,g2=symbols[1].group,sym1=symbols[0],sym2=symbols[1],fn1=sym1.fname,fn2=sym2.fname;symbol=_.multiply(sym1.clone(),sym2.clone());if(g1===FN&&g2===FN){if(fn1===LOG||fn2===LOG){retval=__.integration.by_parts(symbol.clone(),dx,depth,opt);}else{symbols.sort(function(a,b){return b.fname>a.fname;});var arg1=sym1.args[0];if(!arg1.isLinear()||!(arg1.group===CP||arg1.group===CB||arg1.group===S))__.integration.stop();var decomp=__.integration.decompose_arg(arg1,dx);x=decomp[1],a=decomp[0];if(!x.isLinear())__.integration.stop();var arg2=sym2.args[0];if(arg1.equals(arg2)){if(fn1===SIN&&fn2===COS||fn1===COS&&fn2===SIN){if(sym1.power.lessThan(0))__.integration.stop();if(fn1===SIN&&sym1.power.add(sym2.power).equals(0)){sym1.fname=TAN;sym1.updateHash();retval=__.integrate(sym1,dx,depth);}else{if(even(sym1.power)&&fn2===COS&&sym2.power.lessThan(0)){var n=Number(sym1.power)/2,new_sym=_.parse(format('(1-cos({0})^2)^({1})',sym1.args[0],n));retval=__.integrate(_.expand(_.multiply(new_sym,sym2.clone())),dx,depth,opt);}else if(even(sym1.power)&&fn2===SIN&&sym2.power.lessThan(0)){var n=Number(sym1.power)/2,new_sym=_.parse(format('(1-sin({0})^2)^({1})',sym1.args[0],n));retval=__.integrate(_.expand(_.multiply(new_sym,sym2.clone())),dx,depth,opt);}else{var p1_even=core.Utils.even(sym1.power),p2_even=core.Utils.even(sym2.power);retval=new _Symbol3(0);if(!p1_even||!p2_even){var u,r,trans;if(!p1_even){u=sym2;r=sym1;}else{u=sym1;r=sym2;}var sign=u.fname===COS?-1:1,n=r.power,k=(n-1)/2,trans=_.parse('(1-'+u.fname+core.Utils.inBrackets(arg1)+'^2)^'+k),sym=_.expand(_.multiply(new _Symbol3(sign),_.multiply(u.clone(),trans)));sym.each(function(x){retval=_.add(retval,__.integration.poly_integrate(x.clone()));});}else{var double_angle=function double_angle(symbol){var p=symbol.power,k=p/2,e;if(symbol.fname===COS)e='((1/2)+(cos(2*('+symbol.args[0]+'))/2))^'+k;else e='((1/2)-(cos(2*('+symbol.args[0]+'))/2))^'+k;return _.parse(e);};var a=double_angle(sym1),b=double_angle(sym2),t=_.multiply(a,b);var sym=_.expand(t);sym.each(function(x){retval=_.add(retval,__.integrate(x,dx,depth));});return _.multiply(retval,coeff);}}}}else if(fn1===SEC&&fn2===TAN&&x.isLinear()&&sym2.isLinear()){retval=_.parse(format('sec({0})^({1})/({1})',sym1.args[0],sym1.power));}else if(fn1===TAN&&fn2===SEC&&x.isLinear()){if(sym1.isLinear()&&sym2.isLinear()){retval=_.divide(_.symfunction(SEC,[arg1.clone()]),a);}else if(even(sym1.power)){var p=Number(sym1.power)/2;var t=_.parse(format('(sec({0})^2-1)^({1})',sym1.args[0],p));retval=__.integrate(_.expand(_.multiply(t,sym2)),dx,depth);}else __.integration.stop();}else if(fn1===SEC&&fn2===COS){sym1.fname=COS;sym1.invert().updateHash();retval=__.integrate(_.multiply(sym1,sym2),dx,depth);}else if(fn1===SIN&&fn2===CSC){sym2.fname=SIN;sym2.invert().updateHash();retval=__.integrate(_.multiply(sym1,sym2),dx,depth);}else if(fn1===TAN&&(fn2===COS||fn2===SIN)&&sym2.power.lessThan(0)){var t=_.multiply(sym1.fnTransform(),sym2);retval=__.integrate(_.expand(t),dx,depth);}else{var t=_.multiply(sym1.fnTransform(),sym2.fnTransform());retval=__.integrate(_.expand(t),dx,depth);}}else if((fn1===SIN||fn1===COS)&&(fn2===SIN||fn2===COS)){var transformed=trigTransform(symbols);retval=__.integrate(_.expand(transformed),dx,depth);}else{__.integration.stop();}}}else if(g1===FN&&g2===S){var sym1_is_linear=sym1.isLinear();if(sym1.fname===COS&&sym1_is_linear&&sym2.power.equals(-1))retval=_.symfunction('Ci',[sym1.args[0]]);else if(sym1.fname===COS&&sym2.power.equals(-1)){retval=__.integrate(_.multiply(sym1.fnTransform(),sym2.clone()),dx,depth);}else if(sym1.fname===COSH&&sym1_is_linear&&sym2.power.equals(-1))retval=_.symfunction('Chi',[sym1.args[0]]);else if(sym1.fname===COSH&&sym2.power.equals(-1)){retval=__.integrate(_.multiply(sym1.fnTransform(),sym2.clone()),dx,depth);}else if(sym1.fname===SIN&&sym1_is_linear&&sym2.power.equals(-1))retval=_.symfunction('Si',[sym1.args[0]]);else if(sym1.fname===SIN&&sym2.power.equals(-1)){retval=__.integrate(_.multiply(sym1.fnTransform(),sym2.clone()),dx,depth);}else if(sym1.fname===SINH&&sym1_is_linear&&sym2.power.equals(-1))retval=_.symfunction('Shi',[sym1.args[0]]);else if(sym1.fname===SINH&&sym2.power.equals(-1)){retval=__.integrate(_.multiply(sym1.fnTransform(),sym2.clone()),dx,depth);}else if(sym1.fname===LOG&&sym2.power.equals(-1)){retval=__.integration.poly_integrate(sym1,dx,depth);}else if(sym1.fname==='erf'){if(sym2.power.equals(1)){var dc=__.integration.decompose_arg(sym1.args[0],dx),a_=dc[0],x_=dc[1],arg=sym1.args[0].toString();retval=_.parse(format('(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)',a_,x_,arg));}}else{retval=__.integration.by_parts(symbol,dx,depth,opt);}}else if(g1===EX&&g2===S){var x=fn1===LOG?__.integration.decompose_arg(sym1.args[0],dx)[1]:null;if(sym1.isE()&&(sym1.power.group===S||sym1.power.group===CB)&&sym2.power.equals(-1)){retval=_.symfunction('Ei',[sym1.power.clone()]);}else if(fn1===LOG&&x.value===sym2.value){retval=__.integration.poly_integrate(sym1,dx,depth);}else retval=__.integration.by_parts(symbol,dx,depth,opt);}else if(g1===PL&&g2===S){if(sym2.value===sym1.value&&sym1.power.equals(-1)){var pd=Math.min.apply(null,core.Utils.keys(sym1.symbols));var pc=Math.min(pd,sym2.power);var factor=sym2.clone();factor.power=new Frac(pc);sym2=_.divide(sym2,factor.clone());var t=new _Symbol3(0);sym1.each(function(x){t=_.add(t,_.divide(x.clone(),factor.clone()));});t.multiplier=sym1.multiplier;symbol=_.divide(sym2,t);}else{symbol=_.expand(symbol);}retval=__.integration.partial_fraction(symbol,dx,depth);}else if(g1===CP&&g2===S){var f=sym1.clone().toLinear(),f_is_linear=core.Algebra.degree(f,_.parse(dx)).equals(1);if(sym1.power.equals(-1/2)){var decomp=__.integration.decompose_arg(sym1.clone().toLinear(),dx);var a=decomp[0].negate(),x=decomp[1],b=decomp[3],p1=Number(sym1.power),p2=Number(sym2.power);if(isInt(p2)&&core.Utils.even(p2)&&x.power.equals(2)){var c=_.divide(_.multiply(_.pow(b.clone(),new _Symbol3(2)),_.symfunction(SQRT,[_.divide(b.clone(),a.clone())])),_.pow(a.clone(),new _Symbol3(2)));c=_.multiply(c,_.symfunction(SQRT,[b]).invert());var dummy=_.parse('sin(u)');dummy.power=dummy.power.multiply(sym2.power);var integral=__.integrate(dummy,'u',depth);var bksub=_.parse(ASIN+'('+SQRT+'('+a+'/'+b+')*'+dx+')');retval=_.multiply(c,integral.sub(new _Symbol3('u'),bksub));}else if(p1===-1/2){var u_transform=function u_transform(f,u){var integral=_.parse(__.integrate(f,dx,depth,opt).sub(dx,format(u,dx)));if(!integral.hasIntegral())return integral;};if(p2===-1){retval=u_transform(_.expand(_.expand(_.pow(_.multiply(sym1.invert(),sym2.invert()),new _Symbol3(2)))).invert(),'sqrt(1-1/({0})^2)');}else if(p2===-2){retval=u_transform(_.sqrt(_.expand(_.divide(_.pow(symbol,new _Symbol3(2)).invert(),_.pow(new _Symbol3(dx),new _Symbol3(2))).negate())).invert(),'sqrt(1-1/({0})^2)');}}}else if(sym1.power.equals(-1)&&sym2.isLinear()&&f_is_linear){retval=__.integration.partial_fraction(symbol,dx,depth);}else if(!sym1.power.lessThan(0)&&isInt(sym1.power)){var expanded=_.expand(sym1);retval=new _Symbol3(0);expanded.each(function(x){if(x.group===PL){x.each(function(y){retval=_.add(retval,__.integrate(_.multiply(sym2.clone(),y),dx,depth));});}else retval=_.add(retval,__.integrate(_.multiply(sym2.clone(),x),dx,depth));});}else if(sym1.power.lessThan(-2)){retval=__.integration.by_parts(symbol,dx,depth,opt);}else if(sym1.power.lessThan(0)&&sym2.power.greaterThan(1)){var decomp=__.integration.decompose_arg(sym1.clone().toLinear(),dx),a=decomp[0].negate(),x=decomp[1],b=decomp[3],fn=sym1.clone().toLinear();if(x.group!==PL&&x.isLinear()){var p=Number(sym2.power),du='_u_',u=new _Symbol3(du),U=_.expand(_.divide(_.pow(_.subtract(u.clone(),b.clone()),new _Symbol3(p)),u.clone())),scope={};scope[du]=fn;var U2=_.parse(U,scope);retval=__.integrate(U2,dx,0);}else if(sym2.power.greaterThan(x.power)||sym2.power.equals(x.power)){var factors=new core.Algebra.Classes.Factors();sym1=core.Algebra.Factor.coeffFactor(sym1.invert(),factors);var div=core.Algebra.divide(sym2,sym1);if(div.group!==CB){retval=new _Symbol3(0);div.each(function(t){retval=_.add(retval,__.integrate(t,dx,depth));});factors.each(function(factor){retval=_.divide(retval,factor);});retval=_.expand(retval);}else{retval=__.integration.by_parts(symbol,dx,depth,opt);}}else retval=__.integration.partial_fraction(symbol,dx,depth);}else{if(sym1.power.den.equals(2)){var dc=__.integration.decompose_arg(sym1.clone().toLinear(),dx),a=dc[3],x=dc[1],b=dc[0],bx=dc[2];if(x.power.equals(2)&&b.lessThan(0)){if(!a.equals(1)){coeff=_.multiply(coeff,_.pow(a,new _Symbol3(2)));}var u=dx;var c=_.divide(_.pow(b.clone().negate(),new _Symbol3(1/2)),_.pow(a,new _Symbol3(1/2))),du=_.symfunction(COS,[new _Symbol3(u)]),cosn=_.pow(_.symfunction(COS,[new _Symbol3(u)]),new _Symbol3(sym1.power.num)),X=_.pow(_.symfunction(SIN,[new _Symbol3(u)]),new _Symbol3(sym2.power)),val=_.multiply(_.multiply(cosn,du),X),integral=__.integrate(val,u,depth);retval=integral.sub(u,_.symfunction(ASIN,[_.multiply(new _Symbol3(dx),c)]));}else{retval=__.integration.partial_fraction(symbol,dx,depth,opt);}}else if(f_is_linear){retval=__.integration.partial_fraction(symbol,dx,depth);}}}else if(sym1.isComposite()&&sym2.isComposite()){retval=new _Symbol3(0);if(sym1.power.greaterThan(0)&&sym2.power.greaterThan(0)){var sym=_.expand(symbol);sym.each(function(x){retval=_.add(retval,__.integrate(x,dx,depth));},true);}else{var p1=Number(sym1.power),p2=Number(sym2.power);if(p1<0&&p2>0){var t=sym1;sym1=sym2;sym2=t;}if(p1===-1&&p2===-1){retval=__.integration.partial_fraction(symbol,dx);}else{sym1.each(function(x){var k=_.multiply(x,sym2.clone());var integral=__.integrate(k,dx,depth);retval=_.add(retval,integral);});}}}else if(g1===CP&&symbols[0].power.greaterThan(0)){sym1=_.expand(sym1);retval=new _Symbol3(0);sym1.each(function(x){retval=_.add(retval,__.integrate(_.multiply(x,sym2.clone()),dx,depth));},true);}else if(g1===FN&&g2===EX&&core.Utils.in_htrig(sym1.fname)){sym1=sym1.fnTransform();retval=__.integrate(_.expand(_.multiply(sym1,sym2)),dx,depth);}else if(g1===FN&&g2===CP||g2===FN&&g1===CP){if(g2===FN&&g1===CP){var t=sym1;sym1=sym2;sym2=t;}var du,sym2_clone,p,q,sa,sb;du=_Symbol3.unwrapSQRT(__.diff(sym1.clone(),dx),true);sym2_clone=_Symbol3.unwrapSQRT(sym2,true);if(du.power.equals(sym2_clone.power)){p=new _Symbol3(sym2.power);sa=du.clone().toLinear();sb=sym2.clone().toLinear();q=core.Algebra.divide(sa.toLinear(),sb);if(q.isConstant()){var nq=_.pow(q,p.negate());retval=_.multiply(nq,__.integration.poly_integrate(sym1.clone()));}}else{retval=__.integration.by_parts(symbol,dx,depth,opt);}}else{var syma=sym1.clone().toLinear();var symb=sym2.clone().toLinear();if(g1===EX&&g2===EX&&sym1.power.contains(dx)&&sym2.power.contains(dx)&&!syma.contains(dx)&&!symb.contains(dx)){retval=_.parse(format('(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))',syma.toString(),symb.toString(),sym1.power.multiplier.toString(),sym2.power.multiplier.toString(),dx));}else retval=__.integration.by_parts(symbol,dx,depth,opt);}}}else if(l===3&&(symbols[2].group===S&&symbols[2].power.lessThan(2)||symbols[0].group===CP)){var first=symbols[0];if(first.group===CP){if(first.power.greaterThan(1))first=_.expand(first);var r=_.multiply(symbols[1],symbols[2]);retval=new _Symbol3(0);first.each(function(x){var t=_.multiply(x,r.clone());var intg=__.integrate(t,dx,depth);retval=_.add(retval,intg);},true);}else{retval=__.integration.by_parts(symbol,dx,depth,opt);}}else if(all_functions(symbols)){var t=new _Symbol3(1);for(var i=0,l=symbols.length;i<l;i++){t=_.multiply(t,symbols[i].fnTransform());}t=_.expand(t);retval=__.integrate(t,dx,depth);}else{var transformed=trigTransform(symbols);retval=__.integrate(_.expand(transformed),dx,depth);}}}retval=_.multiply(retval,coeff);}if(retval)return retval;}catch(error){if(!(error instanceof NoIntegralFound||error instanceof core.exceptions.DivisionByZero))throw error;}return _.symfunction('integrate',[original_symbol,dt]);},false);},defint:function defint(symbol,from,to,dx){dx=dx||'x';var get_value=function get_value(integral,vars,point){try{return _.parse(integral,vars);}catch(e){return __.Limit.limit(integral,dx,point);}};var vars=core.Utils.variables(symbol),hasTrig=symbol.hasTrig();var retval,integral;if(vars.length===1)dx=vars[0];if(!hasTrig){integral=__.integrate(symbol,dx);}if(!hasTrig&&!integral.hasIntegral()){var upper={},lower={},a,b;upper[dx]=to;lower[dx]=from;a=get_value(integral,upper,to,dx);b=get_value(integral,lower,from,dx);retval=_.subtract(a,b);}else if(vars.length===1&&from.isConstant()&&to.isConstant()){var f=core.Utils.build(symbol);retval=new _Symbol3(core.Math2.num_integrate(f,Number(from),Number(to)));}else retval=_.symfunction('defint',[symbol,from,to,dx]);return retval;},Limit:{interval:function interval(start,end){return _.parse(format('[{0}, {1}]',start,end));},diverges:function diverges(){return __.Limit.interval('-Infinity','Infinity');},divide:function divide(f,g,x,lim){var fin=f.clone(),gin=g.clone();var isInfinity=function isInfinity(L){if(core.Utils.isVector(L)){for(var i=0;i<L.elements.length;i++){if(!L.elements[i].isInfinity)return false;}return true;}return L.isInfinity;};var equals=function equals(L,v){if(core.Utils.isVector(L)){return false;}return L.equals(v);};var retval;do{var lim1=evaluate(__.Limit.limit(f,x,lim));var lim2=evaluate(__.Limit.limit(g,x,lim));var indeterminate=isInfinity(lim1)&&isInfinity(lim2)||equals(lim1,0)&&equals(lim2,0);if(indeterminate){var ft=__.diff(f.clone(),x);var gt=__.diff(g.clone(),x);var t_symbol=_.expand(_.divide(ft,gt));f=t_symbol.getNum();g=t_symbol.getDenom();}}while(indeterminate);if(lim1.isInfinity&&lim2.equals(0))retval=lim1;else if(lim1.equals(0)&&lim2.isInfinity)retval=lim1;else if(lim1.isInfinity){retval=lim1;}else if(lim2.isInfinity){retval=new _Symbol3(0);}else{if(lim2.equals(0)){retval=__.Limit.diverges();}else retval=_.divide(lim1,lim2);}return retval;},rewriteToLog:function rewriteToLog(symbol){var p=symbol.power.clone();symbol.toLinear();return _.pow(new _Symbol3('e'),_.multiply(p,_.symfunction(Settings.LOG+'',[symbol])));},getSubbed:function getSubbed(f,x,lim){var retval;if(f.group===EX){f=__.rewriteToLog(f);}try{retval=f.sub(x,lim);}catch(e){retval=f;}return retval;},isInterval:function isInterval(limit){return core.Utils.isVector(limit);},isConvergent:function isConvergent(limit){if(__.Limit.isInterval(limit)&&limit.elements[0].isInfinity&&limit.elements[1].isInfinity||limit.containsFunction('limit')){return false;}return true;},limit:function limit(symbol,x,lim){var m=_.parse(symbol.multiplier);symbol.toUnitMultiplier();try{var retval;if(symbol.isConstant(true)){retval=symbol;}else{var point={};point[x]=lim;try{var t=_.parse(symbol.sub(x,lim),point);if(t.isConstant(true)||t.isInfinity)retval=t;}catch(e){};if(!retval){var num=symbol.getNum();var den=symbol.getDenom();if(den.isConstant(true)){if(symbol.group===EX){var f=symbol.clone().toLinear();var p=symbol.power.clone();var _num=f.getNum();var _den=f.getDenom();var fn=core.Utils.decompose_fn(_den,x,true);if(_num.group===S&&_num.multiplier.isOne()&&fn.ax.group===S&&fn.b.isConstant(true)&&fn.a.isOne()&&fn.b.isConstant(true)){retval=_.parse(format('(1/e^({0}))',fn.b));}else{var symbol_=__.Limit.rewriteToLog(symbol.clone());var pow=symbol_.power.clone();var base=symbol_.clone().toLinear();var lim_base=__.Limit.limit(base,x,lim);var lim_pow=__.Limit.limit(pow,x,lim);retval=_.pow(lim_base,lim_pow);}}else if(symbol.group===FN&&symbol.args.length===1){var arg=__.Limit.limit(symbol.args[0],x,lim);if(core.Utils.isVector(arg)){retval=arg.map(function(e){var clone=symbol.clone();clone.args[0]=e;return __.Limit.limit(_.symfunction(symbol.fname,[e]),x,lim);});return _.multiply(m,retval);}else if(arg.isConstant(true)){var evaluates;var trial=_.symfunction(symbol.fname,[arg]);try{evaluate(trial);evaluates=true;}catch(e){evaluates=false;}}if(evaluates){retval=trial;}else{if(__.Limit.isConvergent(arg)){if(symbol.fname===LOG){switch(arg.toString()){case'0':retval=_Symbol3.infinity().negate();break;case'Infinity':retval=_Symbol3.infinity();break;case'-Infinity':retval=_Symbol3.infinity();break;}}else if((symbol.fname===COS||symbol.fname===SIN)&&lim.isInfinity){retval=__.Limit.interval(-1,1);}else if(symbol.fname===TAN){var s_arg=symbol.args[0];var n=s_arg.getNum();var d=s_arg.getDenom();var pi=n.toUnitMultiplier();if(lim.isInfinity||pi.equals('pi')&&d.equals(2)){retval=divergent();}}else if(symbol.fname===Settings.FACTORIAL){if(arg.isInfinity)return _Symbol3.infinity();}}}}else if(symbol.group===S){if(symbol.power>0)return _.parse(symbol,point);else{if(core.Utils.even(symbol.power)){retval=_Symbol3.infinity();}else{retval=__.Limit.diverges();}}}else if(symbol.group===CB){symbol=_.expand(symbol);if(symbol.group!==CB){retval=__.Limit.limit(symbol,x,lim);}else{var lim1,lim2;var symbols=symbol.collectSymbols().sort(function(a,b){return a.group-b.group;});var f=symbols.pop();lim1=evaluate(__.Limit.limit(f,x,lim));while(symbols.length){var g=symbols.pop();lim2=evaluate(__.Limit.limit(g,x,lim));if(lim1.isInfinity||!__.Limit.isConvergent(lim1)&&lim2.equals(0)||lim1.equals(0)&&__.Limit.isConvergent(lim2)){g.invert();lim1=__.Limit.divide(f,g,x,lim);}else{lim1=_.multiply(lim1,lim2);f=_.multiply(f,g);}}retval=lim1;}}else if(symbol.isComposite()){var original=symbol.clone();var _lim;if(!symbol.isLinear())symbol=_.expand(symbol);retval=new _Symbol3(0);symbol.each(function(sym){try{_lim=__.Limit.limit(sym,x,lim);}catch(e){_lim=__.Limit.diverges();}try{retval=_.add(retval,_lim);}catch(e){symbol=core.Utils.toCommonDenominator(original);retval=__.Limit.limit(symbol,x,lim);}});}}else{retval=__.Limit.divide(num,den,x,lim);}}}if(!retval)retval=_.symfunction('limit',arguments);}catch(e){retval=_.symfunction('limit',arguments);}return _.multiply(m,retval);}},Fresnel:{S:function S(x){if(x.isConstant(true)){return __.defint(_.parse('sin(pi*x^2/2)'),_Symbol3(0),x,'x');}return _.symfunction('S',arguments);},C:function C(x){if(x.isConstant(true)){return __.defint(_.parse('cos(pi*x^2/2)'),_Symbol3(0),x,'x');}return _.symfunction('C',arguments);}}};nerdamer.register([{name:'diff',visible:true,numargs:[1,3],build:function build(){return __.diff;}},{name:'sum',visible:true,numargs:4,build:function build(){return __.sum;}},{name:'product',visible:true,numargs:4,build:function build(){return __.product;}},{name:'integrate',visible:true,numargs:[1,2],build:function build(){return __.integrate;}},{name:'defint',visible:true,numargs:[3,4],build:function build(){return __.defint;}},{name:'S',visible:true,numargs:1,build:function build(){return __.Fresnel.S;}},{name:'C',visible:true,numargs:1,build:function build(){return __.Fresnel.C;}},{name:'limit',visible:true,numargs:[3,4],build:function build(){return __.Limit.limit;}}]);nerdamer.api();})();if(typeof module!=='undefined'){var nerdamer=require('./nerdamer.core.js');require('./Calculus.js');require('./Algebra.js');}(function(){var core=nerdamer.getCore(),_=core.PARSER,_A=core.Algebra,_C=core.Calculus,explode=_C.integration.decompose_arg,evaluate=core.Utils.evaluate,remove=core.Utils.remove,format=core.Utils.format,build=core.Utils.build,_Symbol4=core.Symbol,isSymbol=core.Utils.isSymbol,variables=core.Utils.variables,S=core.groups.S,PL=core.groups.PL,CB=core.groups.CB,CP=core.groups.CP,FN=core.groups.FN,Settings=core.Settings,range=core.Utils.range,isArray=core.Utils.isArray;core.Settings.SOLVE_RADIUS=1000;core.Settings.ROOTS_PER_SIDE=10;core.Settings.make_pi_conversions=true;core.Settings.STEP_SIZE=0.1;core.Settings.MAX_NEWTON_ITERATIONS=200;core.Settings.MAX_NON_LINEAR_TRIES=12;core.Settings.NON_LINEAR_JUMP_AT=50;core.Settings.NON_LINEAR_JUMP_SIZE=100;core.Settings.NON_LINEAR_START=0.01;core.Settings.NEWTON_SLICES=200;core.Settings.NEWTON_EPSILON=Number.EPSILON*2;core.Settings.SOLUTION_PROXIMITY=1e-14;core.Settings.FILTER_SOLUTIONS=true;core.Settings.MAX_SOLVE_DEPTH=10;core.Symbol.prototype.hasTrig=function(){return this.containsFunction(['cos','sin','tan','cot','csc','sec']);};core.Symbol.prototype.hasNegativeTerms=function(){if(this.isComposite()){for(var x in this.symbols){var sym=this.symbols[x];if(sym.group===PL&&sym.hasNegativeTerms()||this.symbols[x].power.lessThan(0))return true;}}return false;};function Equation(lhs,rhs){if(rhs.isConstant()&&lhs.isConstant()&&!lhs.equals(rhs)||lhs.equals(core.Settings.IMAGINARY)||rhs.equals(core.Settings.IMAGINARY))throw new core.exceptions.NerdamerValueError(lhs.toString()+' does not equal '+rhs.toString());this.LHS=lhs;this.RHS=rhs;};Equation.prototype={toString:function toString(){return this.LHS.toString()+'='+this.RHS.toString();},text:function text(option){return this.LHS.text(option)+'='+this.RHS.text(option);},toLHS:function toLHS(expand){expand=typeof expand==='undefined'?true:false;var eqn;if(!expand){eqn=this.clone();}else{eqn=this.removeDenom();}var _t=_.subtract(eqn.LHS,eqn.RHS);var retval=expand?_.expand(_t):_t;return retval;},removeDenom:function removeDenom(){var a=this.LHS.clone();var b=this.RHS.clone();var den=_.multiply(a.getDenom(),b.getDenom());a=_.expand(_.multiply(a,den.clone()));b=_.expand(_.multiply(b,den));if(b.group===CP&&b.group!==CP){var t=a;a=b;b=t;}if(a.group===CB){var t=new _Symbol4(a.multiplier),newRHS=b.clone();a.each(function(y){if(y.power.lessThan(0))newRHS=_.divide(newRHS,y);else t=_.multiply(t,y);});a=t;b=newRHS;}else if(a.group===CP){for(var x in a.symbols){var sym=a.symbols[x];if(sym.group===CB){for(var y in sym.symbols){var sym2=sym.symbols[y];if(sym2.power.lessThan(0)){return new Equation(_.expand(_.multiply(sym2.clone().toLinear(),a)),_.expand(_.multiply(sym2.clone().toLinear(),b)));}}}}}return new Equation(a,b);},clone:function clone(){return new Equation(this.LHS.clone(),this.RHS.clone());},sub:function sub(x,y){var clone=this.clone();clone.LHS=clone.LHS.sub(x.clone(),y.clone());clone.RHS=clone.RHS.sub(x.clone(),y.clone());return clone;},isZero:function isZero(){return core.Utils.evaluate(this.toLHS()).equals(0);},latex:function latex(option){return[this.LHS.latex(option),this.RHS.latex(option)].join('=');}};_.equals=function(a,b){return new Equation(a,b);};core.Expression.prototype.equals=function(symbol){if(symbol instanceof core.Expression)symbol=symbol.symbol;var eq=new Equation(this.symbol,symbol);return eq;};core.Expression.prototype.solveFor=function(x){var symbol;if(this.symbol instanceof Equation){if(this.symbol.LHS.isConstant()&&this.symbol.RHS.equals(x))return new core.Expression(this.symbol.LHS);if(this.symbol.RHS.isConstant()&&this.symbol.LHS.equals(x))return new core.Expression(this.symbol.RHS);symbol=this.symbol.toLHS();}else{symbol=this.symbol;}return _solve(symbol,x).map(function(x){return new core.Expression(x);});};core.Expression.prototype.expand=function(){if(this.symbol instanceof Equation){var clone=this.symbol.clone();clone.RHS=_.expand(clone.RHS);clone.LHS=_.expand(clone.LHS);return new core.Expression(clone);}return new core.Expression(_.expand(this.symbol));};core.Expression.prototype.variables=function(){if(this.symbol instanceof Equation)return core.Utils.arrayUnique(variables(this.symbol.LHS).concat(variables(this.symbol.RHS)));return variables(this.symbol);};core.Matrix.jacobian=function(eqns,vars){var jacobian=new core.Matrix();if(!vars){vars=__.getSystemVariables(eqns);}vars.forEach(function(v,i){eqns.forEach(function(eq,j){var e=core.Calculus.diff(eq.clone(),v);jacobian.set(j,i,e);});});return jacobian;};core.Matrix.prototype.max=function(){var max=new _Symbol4(0);this.each(function(x){var e=x.abs();if(e.gt(max))max=e;});return max;};core.Matrix.cMatrix=function(value,vars){var m=new core.Matrix();vars.forEach(function(v,i){m.set(i,0,_.parse(value));});return m;};var setEq=function setEq(a,b){return _.equals(a,b);};core.Equation=Equation;var checkAll=core.Utils.checkAll=function(args,test){for(var i=0;i<args.length;i++){if(test(args[i]))return false;}return true;};var __=core.Solve={version:'2.0.3',solutions:[],solve:function solve(eq,variable){var solution=_solve(eq,String(variable));return new core.Vector(solution);},toLHS:function toLHS(eqn,expand){if(isSymbol(eqn))return eqn;if(!(eqn instanceof Equation)){var es=eqn.split('=');es[1]=es[1]||'0';eqn=new Equation(_.parse(es[0]),_.parse(es[1]));}return eqn.toLHS(expand);},getSystemVariables:function getSystemVariables(eqns){vars=variables(eqns[0],null,null,true);for(var i=1,l=eqns.length;i<l;i++){vars=vars.concat(variables(eqns[i]));}vars=core.Utils.arrayUnique(vars).sort();return vars;},solveNonLinearSystem:function solveNonLinearSystem(eqns,tries,start){if(tries<0)return[];start=typeof start==='undefined'?core.Settings.NON_LINEAR_START:start;var max_tries=core.Settings.MAX_NON_LINEAR_TRIES;var halfway=Math.floor(max_tries/2);tries=typeof tries==='undefined'?max_tries:tries;var jump_at=core.Settings.NON_LINEAR_JUMP_AT;var jump=core.Settings.NON_LINEAR_JUMP_SIZE;var found=true;var create_subs=function create_subs(vars,matrix){return vars.map(function(x,i){return Number(matrix.get(i,0));});};var vars=__.getSystemVariables(eqns);var jacobian=core.Matrix.jacobian(eqns,vars,function(x){return build(x,vars);},true);var max_iter=core.Settings.MAX_NEWTON_ITERATIONS;var o,y,iters,xn1,norm,lnorm,xn,d;var f_eqns=eqns.map(function(eq){return build(eq,vars);});var J=jacobian.map(function(e){return build(e,vars);},true);xn1=core.Matrix.cMatrix(0,vars);;var c=core.Matrix.cMatrix(start,vars);iters=0;do{if(iters>max_iter){break;found=false;}o=create_subs(vars,c);xn=c.clone();f_eqns.forEach(function(f,i){c.set(i,0,f.apply(null,o));});var m=new core.Matrix();J.each(function(fn,i,j){var ans=fn.apply(null,o);m.set(i,j,ans);});m=m.invert();y=_.multiply(m,c).negate();d=y.subtract(xn1,function(x){return _.parse(Number(x));});xn1=xn.add(y,function(x){return _.parse(Number(x));});c=xn1;if(iters>=jump_at){if(norm>1){if(tries===halfway)start=0;var sign=tries>halfway?1:-1;n=tries%Math.floor(halfway)+1;start+=sign*n*jump;return __.solveNonLinearSystem(eqns,--tries,start);}}lnorm=norm;iters++;norm=d.max();if(Number(norm)===Number(lnorm))break;}while(Number(norm)>=Number.EPSILON);if(!found)return[];return __.systemSolutions(c,vars,true,function(x){return core.Utils.round(Number(x),14);});},systemSolutions:function systemSolutions(result,vars,expand_result,callback){var solutions=core.Settings.SOLUTIONS_AS_OBJECT?{}:[];result.each(function(e,idx){var solution=(expand_result?_.expand(e):e).valueOf();if(callback)solution=callback.call(e,solution);var variable=vars[idx];if(core.Settings.SOLUTIONS_AS_OBJECT){solutions[variable]=solution;}else solutions.push([variable,solution]);});return solutions;},solveSystem:function solveSystem(eqns,var_array){for(var i=0;i<eqns.length;i++){eqns[i]=__.toLHS(eqns[i]);}var l=eqns.length,m=new core.Matrix(),c=new core.Matrix(),expand_result=false,vars;if(typeof var_array==='undefined'){if(!_A.allLinear(eqns))return __.solveNonLinearSystem(eqns);vars=__.getSystemVariables(eqns);for(var i=0;i<vars.length;i++){nerdamer.setVar(vars[i],"delete");}for(var i=0;i<l;i++){var e=eqns[i];for(var j=0;j<l;j++){var v=vars[j];var coeffs=[];e.each(function(x){if(x.contains(v)){coeffs=coeffs.concat(x.coeffs());}});var cf=core.Utils.arraySum(coeffs);m.set(i,j,cf);}var num=e.clone();vars.map(function(e){num=num.stripVar(e,true);});c.set(i,0,num.negate());}}else{vars=var_array;expand_result=true;for(i=0;i<l;i++){c.set(i,0,new _Symbol4(0));var e=_.expand(eqns[i]).collectSymbols();for(var j=0;j<var_array.length;j++){m.set(i,j,new _Symbol4(0));var v=var_array[j];for(var k=0;k<e.length;k++){var term=e[k],check=false;for(var z=0;z<var_array.length;z++){if(term.contains(var_array[z])){if(check)core.err('Multiple variables found for term '+term);check=true;}}if(term.contains(v)){var tparts=explode(remove(e,k),v);m.set(i,j,_.add(m.get(i,j),tparts[0]));}}}for(k=0;k<e.length;k++){c.set(i,0,_.add(c.get(i,0),e[k]));}}}if(m.determinant().equals(0))throw new core.exceptions.SolveError('System does not have a distinct solution');m=m.invert();var result=m.multiply(c);if(core.Utils.isArray(var_array))result.each(function(x){return x.negate();});return __.systemSolutions(result,vars,expand_result);},quad:function quad(c,b,a){var discriminant=_.subtract(_.pow(b.clone(),_Symbol4(2)),_.multiply(_.multiply(a.clone(),c.clone()),_Symbol4(4)));var det=_.pow(discriminant,_Symbol4(0.5));var retval=[_.parse(_.divide(_.add(b.clone().negate(),det.clone()),_.multiply(new _Symbol4(2),a.clone()))),_.parse(_.divide(_.subtract(b.clone().negate(),det.clone()),_.multiply(new _Symbol4(2),a.clone())))];return retval;},cubic:function cubic(d_o,c_o,b_o,a_o){var a=a_o.text(),b=b_o.text(),c=c_o.text(),d=d_o.text();var d0s='({1})^2-3*({0})*({2})',d0=_.parse(format(d0s,a,b,c)),Q=_.parse(format('((2*({1})^3-9*({0})*({1})*({2})+27*({0})^2*({3}))^2-4*(({1})^2-3*({0})*({2}))^3)^(1/2)',a,b,c,d)),C=_.parse(format('((1/2)*(({4})+2*({1})^3-9*({0})*({1})*({2})+27*({0})^2*({3})))^(1/3)',a,b,c,d,Q));var scope={};variables(C).map(function(x){scope[x]=1;});var Ct=core.Utils.block('PARSE2NUMBER',function(){return _.parse(C,scope);});if(Number(d0)===0&&Number(Ct)===0)C=_.parse(format('((1/2)*(-({4})+2*({1})^3-9*({0})*({1})*({2})+27*({0})^2*({3})))^(1/3)',a,b,c,d,Q));var xs=['-(b/(3*a))-C/(3*a)-(((b^2-3*a*c))/(3*a*C))','-(b/(3*a))+(C*(1+i*sqrt(3)))/(6*a)+((1-i*sqrt(3))*(b^2-3*a*c))/(6*a*C)'.replace(/i/g,core.Settings.IMAGINARY),'-(b/(3*a))+(C*(1-i*sqrt(3)))/(6*a)+((1+i*sqrt(3))*(b^2-3*a*c))/(6*a*C)'.replace(/i/g,core.Settings.IMAGINARY)];return xs.map(function(e,i){var o={a:a_o.clone(),b:b_o.clone(),c:c_o.clone(),d:d_o.clone(),C:C.clone()};return _.parse(e,o);});},quartic:function quartic(e,d,c,b,a){var scope={};core.Utils.arrayUnique(variables(a).concat(variables(b)).concat(variables(c)).concat(variables(d)).concat(variables(e))).map(function(x){scope[x]=1;});a=a.toString();b=b.toString();c=c.toString();d=d.toString();e=e.toString();var p,q,D,D0,D1,Q,x1,x2,x3,x4;p=_.parse(format("(8*({0})*({2})-3*({1})^2)/(8*({0})^2)",a,b,c)).toString();q=_.parse(format("(({1})^3-4*({0})*({1})*({2})+8*({0})^2*({3}))/(8*({0})^3)",a,b,c,d)).toString();D0=_.parse(format("12*({0})*({4})-3*({1})*({3})+({2})^2",a,b,c,d,e)).toString();D1=_.parse(format("2*({2})^3-9*({1})*({2})*({3})+27*({1})^2*({4})+27*({0})*({3})^2-72*({0})*({2})*({4})",a,b,c,d,e)).toString();Q=_.parse(format("((({1})+(({1})^2-4*({0})^3)^(1/2))/2)^(1/3)",D0,D1)).toString();S=_.parse(format("(1/2)*(-(2/3)*({1})+(1/(3*({0}))*(({2})+(({3})/({2})))))^(1/2)",a,p,Q,D0)).toString();x1=_.parse(format("-(({1})/(4*({0})))-({4})+(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",a,b,p,q,S));x2=_.parse(format("-(({1})/(4*({0})))-({4})-(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",a,b,p,q,S));x3=_.parse(format("-(({1})/(4*({0})))+({4})+(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",a,b,p,q,S));x4=_.parse(format("-(({1})/(4*({0})))+({4})-(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",a,b,p,q,S));return[x1,x2,x3,x4];},divideAndConquer:function divideAndConquer(symbol,solve_for){var sols=[];var factors=core.Algebra.Factor.factor(symbol);if(factors.group===CB){factors.each(function(x){x=_Symbol4.unwrapPARENS(x);sols=sols.concat(_solve(x,solve_for));});}return sols;},csolve:function csolve(eq,solve_for){return core.Utils.block('IGNORE_E',function(){var f,p,pn,n,pf,r,theta,sr,sp,roots;roots=[];f=core.Utils.decompose_fn(eq,solve_for,true);if(f.x.group===S){p=_.parse(f.x.power);pn=Number(p);n=_.pow(_.divide(f.b.negate(),f.a),p.invert());pf=_Symbol4.toPolarFormArray(n);r=pf[0];theta=pf[1];sr=r.toString();sp=p.toString();var k,root,str;for(var i=0;i<pn;i++){k=i;str=format('({0})*e^(2*{1}*pi*{2}*{3})',sr,k,p,core.Settings.IMAGINARY);root=_.parse(str);roots.push(root);}}return roots;},true);},getPoints:function getPoints(symbol,step,points){step=step||0.01;points=points||[];var f=build(symbol);var x0=0;var start=Math.round(x0),last=f(start),last_sign=last/Math.abs(last),rside=core.Settings.ROOTS_PER_SIDE,lside=rside;points.push(Math.floor(start/2));points.push(Math.abs(start));points.push(start);symbol.each(function(x){if(x.containsFunction(core.Settings.LOG))points.push(0.1);});var left=range(-core.Settings.SOLVE_RADIUS,start,step),right=range(start,core.Settings.SOLVE_RADIUS,step);var test_side=function test_side(side,num_roots){var xi,val,sign;var hits=[];for(var i=0,l=side.length;i<l;i++){xi=side[i];val=f(xi);sign=val/Math.abs(val);if(isNaN(val)||!isFinite(val)||hits.length>num_roots){continue;}if(sign!==last_sign){hits.push(xi);}last_sign=sign;}points=points.concat(hits);};test_side(left,lside);test_side(right,rside);return points;},Newton:function Newton(point,f,fp){var maxiter=core.Settings.MAX_NEWTON_ITERATIONS,iter=0;var x0=point,x;do{var fx0=f(x0);if(x0===0&&fx0===0){x=0;break;}iter++;if(iter>maxiter)return;x=x0-fx0/fp(x0);var e=Math.abs(x-x0);x0=x;}while(e>Settings.NEWTON_EPSILON);if(Math.abs(f(x))<=1e-13)return x;},rewrite:function rewrite(rhs,lhs,for_variable){lhs=lhs||new _Symbol4(0);if(rhs.isComposite()&&rhs.isLinear()){var sqrts=[];var rem=[];rhs.each(function(x){x=x.clone();if(x.fname==='sqrt'&&x.contains(for_variable)){sqrts.push(x);}else{rem.push(x);}},true);if(sqrts.length===1){lhs=_.expand(_.pow(_.subtract(lhs,core.Utils.arraySum(rem)),new _Symbol4(2)));rhs=_.expand(_.pow(_Symbol4.unwrapSQRT(sqrts[0]),new _Symbol4(2)));}}else{rhs=_Symbol4.unwrapSQRT(_.expand(rhs));}var c=0,l=rhs.length;if(rhs.group===CP&&rhs.contains(for_variable)&&rhs.isLinear()){rhs.distributeMultiplier();var t=new _Symbol4(0);rhs.each(function(x){if(x.contains(for_variable)){c++;t=_.add(t,x.clone());}else lhs=_.subtract(lhs,x.clone());});rhs=t;if(c!==l){return __.rewrite(rhs,lhs,for_variable);}else{return[rhs,lhs];}}else if(rhs.group===CB&&rhs.contains(for_variable)&&rhs.isLinear()){if(rhs.multiplier.lessThan(0)){rhs.multiplier=rhs.multiplier.multiply(new core.Frac(-1));lhs.multiplier=lhs.multiplier.multiply(new core.Frac(-1));}if(lhs.equals(0))return new _Symbol4(0);else{var t=new _Symbol4(1);rhs.each(function(x){if(x.contains(for_variable))t=_.multiply(t,x.clone());else lhs=_.divide(lhs,x.clone());});rhs=t;return __.rewrite(rhs,lhs,for_variable);}}else if(!rhs.isLinear()&&rhs.contains(for_variable)){var p=_.parse(rhs.power.clone().invert());rhs=_.pow(rhs,p.clone());lhs=_.pow(_.expand(lhs),p.clone());return __.rewrite(rhs,lhs,for_variable);}else if(rhs.group===FN||rhs.group===S||rhs.group===PL){return[rhs,lhs];}},sqrtSolve:function sqrtSolve(symbol,v){var sqrts=new _Symbol4(0);var rem=new _Symbol4(0);if(symbol.isComposite()){symbol.each(function(x){if(x.fname==='sqrt'&&x.contains(v)){sqrts=_.add(sqrts,x.clone());}else{rem=_.add(rem,x.clone());}});if(!sqrts.equals(0)){var t=_.expand(_.multiply(_.parse(symbol.multiplier),_.subtract(_.pow(rem,new _Symbol4(2)),_.pow(sqrts,new _Symbol4(2)))));var solutions=_solve(t,v);solutions=solutions.filter(function(e){if(e.isImaginary())return e;var subs={};subs[v]=e;var point=evaluate(symbol,subs);if(point.equals(0))return e;});return solutions;}}}};var _solve=function _solve(eqns,solve_for,solutions,depth){depth=depth||0;if(depth++>Settings.MAX_SOLVE_DEPTH){return solutions;}if(eqns instanceof Equation){if(eqns.isZero())return[new _Symbol4(0)];if(eqns.LHS.equals(solve_for)&&!eqns.RHS.contains(solve_for)){return[eqns.RHS];}if(eqns.RHS.equals(solve_for)&&!eqns.LHS.contains(solve_for)){return[eqns.LHS];}}if(eqns instanceof core.Vector)eqns=eqns.elements;solve_for=solve_for||'x';if(isArray(eqns)){return __.solveSystem.apply(undefined,arguments);}solutions=solutions||[];var existing={};var add_to_result=function add_to_result(r,has_trig){var r_is_symbol=isSymbol(r);if(r===undefined||typeof r==='number'&&isNaN(r))return;if(isArray(r)){r.map(function(sol){add_to_result(sol);});}else{if(r.valueOf()!=='null'){if(!r_is_symbol)r=_.parse(r);if(core.Settings.make_pi_conversions&&has_trig){var temp=_.divide(r.clone(),new _Symbol4(Math.PI)),m=temp.multiplier,a=Math.abs(m.num),b=Math.abs(m.den);if(a<10&&b<10)r=_.multiply(temp,new _Symbol4('pi'));}var r_str=r.toString();if(!existing[r_str])solutions.push(r);existing[r_str]=true;}}};if(eqns.group===S&&eqns.contains(solve_for)){add_to_result(new _Symbol4(0));return solutions;}if(eqns.group===CB){var sf=String(solve_for);eqns.each(function(x){if(x.contains(sf))_solve(x,solve_for,solutions);});return solutions;}if(eqns.group===FN&&eqns.fname==='sqrt'){eqns=_.pow(_Symbol4.unwrapSQRT(eqns),new _Symbol4(2));}var eq=(core.Utils.isSymbol(eqns)?eqns:__.toLHS(eqns,false)).getNum(),vars=core.Utils.variables(eq),numvars=vars.length;if(core.Utils.isInt(eq.power)&&eq.power>0){eq=_.parse(eq).toLinear();}if(eq.group===S||eq.group===CB&&eq.contains(solve_for))return[new _Symbol4(0)];var fractionals={},cfact;var correct_denom=function correct_denom(symbol){symbol=_.expand(symbol);var original=symbol.clone();if(symbol.symbols){for(var x in symbol.symbols){var sym=symbol.symbols[x];var den=sym.getDenom();if(!den.isConstant(true)&&symbol.isComposite()){var t=new _Symbol4(0);symbol.each(function(e){t=_.add(t,_.multiply(e,den.clone()));});return correct_denom(_.multiply(_.parse(symbol.multiplier),t));}var parts=explode(sym,solve_for);var is_sqrt=parts[1].fname===core.Settings.SQRT;var v=_Symbol4.unwrapSQRT(parts[1]);var p=v.power.clone();if(!isSymbol(p)&&!p.equals(1/2)){if(p.den.gt(1)){if(is_sqrt){symbol=_.subtract(symbol,sym.clone());symbol=_.add(symbol,_.multiply(parts[0].clone(),v));return correct_denom(symbol);}var c=fractionals[p.den];fractionals[p.den]=c?c++:1;}else if(p.sign()===-1){var factor=_.parse(solve_for+'^'+Math.abs(p));symbol.each(function(y,index){if(y.contains(solve_for)){symbol.symbols[index]=_.multiply(y,factor.clone());}});fractionals={};return correct_denom(_.parse(symbol));}else if(sym.group===PL){var min_p=core.Utils.arrayMin(core.Utils.keys(sym.symbols));if(min_p<0){var factor=_.parse(solve_for+'^'+Math.abs(min_p));var corrected=new _Symbol4(0);original.each(function(x){corrected=_.add(corrected,_.multiply(x.clone(),factor.clone()));},true);return corrected;}}}}}return symbol;};var separate=function separate(eq){var lhs=new _Symbol4(0),rhs=new _Symbol4(0);eq.each(function(x){if(x.contains(solve_for,true))lhs=_.add(lhs,x.clone());else rhs=_.subtract(rhs,x.clone());});return[lhs,rhs];};__.inverseFunctionSolve=function(name,lhs,rhs){var parts=explode(lhs.args[0],solve_for);var x=parts[1];if(x.group===S){return _.divide(_.symfunction(name,[_.divide(rhs,_.parse(lhs.multiplier))]),parts[0]);}};eq=correct_denom(eq);if(eq.equals(0))return[eq];var fkeys=core.Utils.keys(fractionals);if(fkeys.length===1){cfact=fkeys[0];eq.each(function(x,index){if(x.contains(solve_for)){var parts=explode(x,solve_for);var v=parts[1];var p=v.power;if(p.den.gt(1)){v.power=p.multiply(new core.Frac(cfact));eq.symbols[index]=_.multiply(v,parts[0]);}}});eq=_.parse(eq);}add_to_result(__.sqrtSolve(eq,solve_for));if(numvars===1){if(eq.isPoly(true)){var factors=new core.Algebra.Classes.Factors();core.Algebra.Factor.factor(eq,factors);if(factors.getNumberSymbolics()>1){for(var x in factors.factors){add_to_result(_solve(factors.factors[x],solve_for));}}else{var coeffs=core.Utils.getCoeffs(eq,solve_for),deg=coeffs.length-1,was_calculated=false;if(vars[0]===solve_for){if(checkAll(coeffs,function(x){return x.group!==core.groups.N;})){var roots=core.Algebra.proots(eq);if(checkAll(roots,function(x){return!core.Utils.isInt(x);})){was_calculated=true;roots.map(function(x){add_to_result(new _Symbol4(x));});}}if(!was_calculated){eqns=_.parse(eqns);if(eqns instanceof core.Equation)eqns=eqns.toLHS();if(deg===1)add_to_result(_.divide(coeffs[0],coeffs[1].negate()));else if(deg===2){add_to_result(_.expand(__.quad.apply(undefined,coeffs)));}else if(deg===3){var solutions=[];var factored=core.Algebra.Factor.factor(eqns);var solutions=!factored.equals(eqns)?_solve(factored,solve_for):[];if(solutions.length>0)add_to_result(solutions);else add_to_result(__.cubic.apply(undefined,coeffs));}else{_A.proots(eq).map(add_to_result);}}}}}else{try{var has_trig=eq.hasTrig();var points1=__.getPoints(eq,0.1);var points2=__.getPoints(eq,0.05);var points3=__.getPoints(eq,0.01);var points=core.Utils.arrayUnique(points1.concat(points2).concat(points3)).sort(function(a,b){return a-b;});var f=build(eq.clone());var d=_C.diff(eq.clone());var fp=build(d);for(var i=0;i<points.length;i++){var point=points[i];add_to_result(__.Newton(point,f,fp),has_trig);}solutions.sort();}catch(e){console.log(e);}}}else{if(!eq.hasFunc(solve_for)&&eq.isComposite()){try{var factored=core.Algebra.Factor.factor(eq.clone());if(factored.group===CB){factored.each(function(x){add_to_result(_solve(x,solve_for));});}else{var coeffs=core.Utils.getCoeffs(eq,solve_for);var l=coeffs.length,deg=l-1;switch(deg){case 0:var separated=separate(eq);var lhs=separated[0],rhs=separated[1];if(lhs.group===core.groups.EX){add_to_result(_.parse(core.Utils.format(core.Settings.LOG+'(({0})/({2}))/'+core.Settings.LOG+'({1})',rhs,lhs.value,lhs.multiplier)));}break;case 1:add_to_result(_.divide(coeffs[0],coeffs[1].negate()));break;case 2:add_to_result(__.quad.apply(undefined,coeffs));break;case 3:add_to_result(__.cubic.apply(undefined,coeffs));break;case 4:add_to_result(__.quartic.apply(undefined,coeffs));break;default:add_to_result(__.csolve(eq,solve_for));if(solutions.length===0)add_to_result(__.divideAndConquer(eq,solve_for));}if(solutions.length===0){add_to_result(_solve(factored,solve_for,solutions,depth));}}}catch(e){;}}else{try{var rw=__.rewrite(eq,null,solve_for);var lhs=rw[0];var rhs=rw[1];if(lhs.group===FN){if(lhs.fname==='abs'){add_to_result([rhs.clone(),rhs.negate()]);}else if(lhs.fname==='sin'){add_to_result(__.inverseFunctionSolve('asin',lhs,rhs));}else if(lhs.fname==='cos'){add_to_result(__.inverseFunctionSolve('acos',lhs,rhs));}else if(lhs.fname==='tan'){add_to_result(__.inverseFunctionSolve('atan',lhs,rhs));}else if(lhs.fname===core.Settings.LOG){var parts=explode(lhs.args[0],solve_for);var x=parts[1];if(x.group===S){rhs=_.divide(_.subtract(_.pow(lhs.args.length>1?lhs.args[1]:new _Symbol4('e'),_.divide(rhs,_.parse(lhs.multiplier))),parts[3]),parts[0]);var eq=new Equation(x,rhs).toLHS();add_to_result(_solve(eq,solve_for));}}else add_to_result(_.subtract(lhs,rhs));}else{var neq=new Equation(lhs,rhs).toLHS();if(neq.equals(eq))throw new Error('Stopping. No stop condition exists');add_to_result(_solve(neq,solve_for));}}catch(error){try{if(eq.group===CB)add_to_result(0);else if(eq.group===CP){var separated=separate(eq);var lhs=separated[0],rhs=separated[1];if(lhs.group===core.groups.EX&&lhs.value===solve_for){var p=lhs.power.clone().invert();add_to_result(_.pow(rhs,p));}}}catch(error){;}}}}if(cfact){solutions=solutions.map(function(x){return _.pow(x,new _Symbol4(cfact));});}return solutions;};nerdamer.register([{name:'solveEquations',parent:'nerdamer',numargs:-1,visible:true,build:function build(){return _solve;}},{name:'solve',parent:'Solve',numargs:2,visible:true,build:function build(){return core.Solve.solve;}},{name:'setEquation',parent:'Solve',visible:true,build:function build(){return setEq;}}]);nerdamer.api();})();if(typeof module!=='undefined'){var nerdamer=require('./nerdamer.core.js');require('./Calculus');require('./Algebra');}(function(){"use strict";var core=nerdamer.getCore(),_=core.PARSER,_Symbol5=core.Symbol,format=core.Utils.format,isVector=core.Utils.isVector,isArray=core.Utils.isArray,Vector=core.Vector,S=core.groups.S,EX=core.groups.EX,CP=core.groups.CP,CB=core.groups.CB,FN=core.groups.FN;core.Settings.Laplace_integration_depth=40;_Symbol5.prototype.findFunction=function(fname){if(this.group===FN&&this.fname===fname)return this.clone();var found;if(this.symbols)for(var x in this.symbols){found=this.symbols[x].findFunction(fname);if(found)break;}return found;};var __=core.Extra={version:'1.4.1',LaPlace:{transform:function transform(symbol,t,s){t=t.toString();symbol=_Symbol5.unwrapSQRT(symbol,true);var retval,coeff=symbol.stripVar(t),g=symbol.group;symbol=_.divide(symbol,coeff.clone());if(symbol.isConstant()||!symbol.contains(t,true)){retval=_.parse(format('({0})/({1})',symbol,s));}else if(g===S&&core.Utils.isInt(symbol.power)){var n=String(symbol.power);retval=_.parse(format('factorial({0})/({1})^({0}+1)',n,s));}else if(symbol.group===S&&symbol.power.equals(1/2)){retval=_.parse(format('sqrt(pi)/(2*({0})^(3/2))',s));}else if(symbol.isComposite()){retval=new _Symbol5(0);symbol.each(function(x){retval=_.add(retval,__.LaPlace.transform(x,t,s));},true);}else if(symbol.isE()&&(symbol.power.group===S||symbol.power.group===CB)){var a=symbol.power.stripVar(t);retval=_.parse(format('1/(({1})-({0}))',a,s));}else{var fns=['sin','cos','sinh','cosh'];if(symbol.group===FN&&fns.indexOf(symbol.fname)!==-1&&(symbol.args[0].group===S||symbol.args[0].group===CB)){var a=symbol.args[0].stripVar(t);switch(symbol.fname){case'sin':retval=_.parse(format('({0})/(({1})^2+({0})^2)',a,s));break;case'cos':retval=_.parse(format('({1})/(({1})^2+({0})^2)',a,s));break;case'sinh':retval=_.parse(format('({0})/(({1})^2-({0})^2)',a,s));break;case'cosh':retval=_.parse(format('({1})/(({1})^2-({0})^2)',a,s));break;}}else{var depth_is_lower=core.Settings.integration_depth<core.Settings.Laplace_integration_depth;if(depth_is_lower){var integration_depth=core.Settings.integration_depth;core.Settings.integration_depth=core.Settings.Laplace_integration_depth;}core.Utils.block('PARSE2NUMBER',function(){var u=t;var sym=symbol.sub(t,u);var integration_expr=_.parse('e^(-'+s+'*'+u+')*'+sym);retval=core.Calculus.integrate(integration_expr,u);if(retval.hasIntegral())_.error('Unable to compute transform');retval=retval.sub(t,0);retval=_.expand(_.multiply(retval,new _Symbol5(-1)));retval=retval.sub(u,t);},false);retval=core.Utils.block('PARSE2NUMBER',function(){return _.parse(retval);},true);if(depth_is_lower)core.Settings.integration_depth=integration_depth;}}return _.multiply(retval,coeff);},inverse:function inverse(symbol,s_,t){var input_symbol=symbol.clone();return core.Utils.block('POSITIVE_MULTIPLIERS',function(){if(symbol.group===S||symbol.group===CB||symbol.group===CP){var finalize=function finalize(){retval=_.multiply(retval,num);retval.multiplier=retval.multiplier.multiply(symbol.multiplier);retval=_.divide(retval,f.a);};var num,den,s,retval,f,p,m,den_p,fe;m=symbol.multiplier.clone();symbol.toUnitMultiplier();num=symbol.getNum();den=symbol.getDenom().toUnitMultiplier();if(den.group===CP){den_p=den.power.clone();den.toLinear();}else den_p=new core.Frac(1);s=s_.toString();f=core.Utils.decompose_fn(den,s,true);fe=core.Utils.decompose_fn(_.expand(num.clone()),s,true);num.multiplier=num.multiplier.multiply(m);if((den.group===S||den.group===CB)&&f.x.value===s&&f.b.equals(0)&&core.Utils.isInt(f.x.power)){var fact,p;p=f.x.power-1;fact=core.Math2.factorial(p);retval=_.divide(_.pow(t,new _Symbol5(p)),new _Symbol5(fact));finalize();}else if(den.group===CP&&den_p.equals(1)){if(f.x.isLinear()&&!num.contains(s)){console.log(f.a.toString(),f.b.toString());t=_.divide(t,f.a.clone());retval=_.parse(format('(({0})^({3}-1)*e^(-(({2})*({0}))/({1})))/(({3}-1)!*({1})^({3}))',t,f.a,f.b,den_p));finalize();}else{if(f.x.group===S&&f.x.power.equals(2)){if(!num.contains(s)){retval=_.parse(format('(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/sqrt(({2})*({3}))',t,num,f.a,f.b));}else{var a=new _Symbol5(1);if(num.group===CB){var new_num=new _Symbol5(1);num.each(function(x){if(x.contains(s))new_num=_.multiply(new_num,x);else a=_.multiply(a,x);});num=new_num;}var f2=core.Utils.decompose_fn(num,s,true);var fn1,fn2,a_has_sin,b_has_cos,a_has_cos,b_has_sin;fn1=f2.a;fn2=f2.b;a_has_sin=fn1.containsFunction('sin');a_has_cos=fn1.containsFunction('cos');b_has_cos=fn2.containsFunction('cos');b_has_sin=fn2.containsFunction('sin');if(f2.x.value===s&&f2.x.isLinear()&&!(a_has_sin&&b_has_cos||a_has_cos||b_has_sin)){retval=_.parse(format('(({1})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})',t,f2.a,f.a,f.b));}else{if(a_has_sin&&b_has_cos){var sin,cos;sin=fn1.findFunction('sin');cos=fn2.findFunction('cos');if(sin.args[0].equals(cos.args[0])&&!sin.args[0].contains(s)){var b,c,d,e;b=_.divide(fn2,cos.toUnitMultiplier()).toString();c=sin.args[0].toString();d=f.b;e=_.divide(fn1,sin.toUnitMultiplier());exp='(({1})*({2})*cos({3})*sin(sqrt({4})*({0})))/sqrt({4})+({1})*sin({3})*({5})*cos(sqrt({4})*({0}))';retval=_.parse(format(exp,t,a,b,c,d,e));}}}}}}}else if(f.x.power.num&&f.x.power.num.equals(3)&&f.x.power.den.equals(2)&&num.contains('sqrt(pi)')&&!num.contains(s)&&num.isLinear()){var b=_.divide(num.clone(),_.parse('sqrt(pi)'));retval=_.parse(format('(2*({2})*sqrt({0}))/({1})',t,f.a,b,num));}else if(den_p.equals(2)&&f.x.power.equals(2)){var a,d,exp;if(!num.contains(s)){a=_.divide(num,new _Symbol5(2));exp='(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({3})*sqrt(({2})*({3})))-(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*({3}))';retval=_.parse(format(exp,t,a,f.a,f.b));}else{f2=core.Utils.decompose_fn(_.expand(num.clone()),s,true);if(f2.x.isComposite()){var s_terms=[];var symbols=num.collectSymbols(function(x){x=_Symbol5.unwrapPARENS(x);var t=core.Utils.decompose_fn(x,s,true);t.symbol=x;return t;}).sort(function(a,b){var p1,p2;p1=a.x.value!==s?0:a.x.power;p2=b.x.value!==s?0:b.x.power;return p2-p1;});a=new _Symbol5(-1);for(var i=0;i<symbols.length;i++){var fc=symbols[i];if(fc.x.value===s)s_terms.push(fc);else a=_.multiply(a,fc.symbol);}if(s_terms[0].x.power.equals(2)&&s_terms[1].x.power.equals(1)&&s_terms[1].b.equals(0)&&!s_terms[0].b.equals(0)){b=s_terms[0].a.negate();exp='-(({1})*({2})*({5})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/'+'(2*({4})^2*sqrt(({4})*({5})))-(({1})*({3})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))'+'/(2*({4})*sqrt(({4})*({5})))+(({1})*({2})*cos((sqrt(({4})*({5}))*({0}))/({4})))/({4})^2';retval=_.parse(format(exp,t,a,b,s_terms[0].b,f.a,f.b));}}else{if(f2.x.isLinear()){a=_.divide(f2.a,new _Symbol5(2));exp='(({1})*({0})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))';retval=_.parse(format(exp,t,a,f.a,f.b));}else if(f2.x.power.equals(2)){if(f2.b.equals(0)){a=_.divide(f2.a,new _Symbol5(2));exp='(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2';retval=_.parse(format(exp,t,a,f.a,f.b));}else{a=_.divide(f2.a,new _Symbol5(2));d=f2.b.negate();exp='-((({2})*({4})-2*({1})*({3}))*sin((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3})*sqrt(({2})*({3})))+'+'(({4})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3}))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2';retval=_.parse(format(exp,t,a,f.a,f.b,d));}}}}}}if(!retval)retval=_.symfunction('ilt',[input_symbol,s_,t]);return retval;},true);}},Statistics:{frequencyMap:function frequencyMap(arr){var map={};for(var i=0,l=arr.length;i<l;i++){var e=arr[i],key=e.toString();if(!map[key])map[key]=0;map[key]++;}return map;},sort:function sort(arr){return arr.sort(function(a,b){if(!a.isConstant()||!b.isConstant())_.error('Unable to sort! All values must be numeric');return a.multiplier.subtract(b.multiplier);});},count:function count(arr){return new _Symbol5(arr.length);},sum:function sum(arr,x_){var sum=new _Symbol5(0);for(var i=0,l=arr.length;i<l;i++){var xi=arr[i].clone();if(x_){sum=_.add(_.pow(_.subtract(xi,x_.clone()),new _Symbol5(2)),sum);}else sum=_.add(xi,sum);}return sum;},mean:function mean(){var args=[].slice.call(arguments);if(isVector(args[0]))return __.Statistics.mean.apply(this,args[0].elements);return _.divide(__.Statistics.sum(args),__.Statistics.count(args));},median:function median(){var args=[].slice.call(arguments),retval;if(isVector(args[0]))return __.Statistics.median.apply(this,args[0].elements);try{var sorted=__.Statistics.sort(args);var l=args.length;if(core.Utils.even(l)){var mid=l/2;retval=__.Statistics.mean(sorted[mid-1],sorted[mid]);}else retval=sorted[Math.floor(l/2)];}catch(e){retval=_.symfunction('median',args);}return retval;},mode:function mode(){var args=[].slice.call(arguments),retval;if(isVector(args[0]))return __.Statistics.mode.apply(this,args[0].elements);var map=__.Statistics.frequencyMap(args);if(core.Utils.keys(map).length===1)retval=args[0];else{var inverse={};for(var x in map){var freq=map[x];if(!(freq in inverse))inverse[freq]=x;else{var e=inverse[freq];if(isArray(e))e.push(x);else inverse[freq]=[x,inverse[freq]];}}var max=inverse[Math.max.apply(null,core.Utils.keys(inverse))];if(isArray(max)){retval=_.symfunction('mode',max.sort());}else retval=_.parse(max);}return retval;},gVariance:function gVariance(k,args){var x_=__.Statistics.mean.apply(__.Statistics,args),sum=__.Statistics.sum(args,x_);return _.multiply(k,sum);},variance:function variance(){var args=[].slice.call(arguments);if(isVector(args[0]))return __.Statistics.variance.apply(this,args[0].elements);var k=_.divide(new _Symbol5(1),__.Statistics.count(args));return __.Statistics.gVariance(k,args);},sampleVariance:function sampleVariance(){var args=[].slice.call(arguments);if(isVector(args[0]))return __.Statistics.sampleVariance.apply(this,args[0].elements);var k=_.divide(new _Symbol5(1),_.subtract(__.Statistics.count(args),new _Symbol5(1)));return __.Statistics.gVariance(k,args);},standardDeviation:function standardDeviation(){var args=[].slice.call(arguments);if(isVector(args[0]))return __.Statistics.standardDeviation.apply(this,args[0].elements);return _.pow(__.Statistics.variance.apply(__.Statistics,args),new _Symbol5(1/2));},sampleStandardDeviation:function sampleStandardDeviation(){var args=[].slice.call(arguments);if(isVector(args[0]))return __.Statistics.sampleStandardDeviation.apply(this,args[0].elements);return _.pow(__.Statistics.sampleVariance.apply(__.Statistics,args),new _Symbol5(1/2));},zScore:function zScore(x,mean,stdev){return _.divide(_.subtract(x,mean),stdev);}},Units:{table:{foot:'12 inch',meter:'100 cm',decimeter:'10 cm'}}};nerdamer.register([{name:'laplace',visible:true,numargs:3,build:function build(){return __.LaPlace.transform;}},{name:'ilt',visible:true,numargs:3,build:function build(){return __.LaPlace.inverse;}},{name:'mean',visible:true,numargs:-1,build:function build(){return __.Statistics.mean;}},{name:'median',visible:true,numargs:-1,build:function build(){return __.Statistics.median;}},{name:'mode',visible:true,numargs:-1,build:function build(){return __.Statistics.mode;}},{name:'smpvar',visible:true,numargs:-1,build:function build(){return __.Statistics.sampleVariance;}},{name:'variance',visible:true,numargs:-1,build:function build(){return __.Statistics.variance;}},{name:'smpstdev',visible:true,numargs:-1,build:function build(){return __.Statistics.sampleStandardDeviation;}},{name:'stdev',visible:true,numargs:-1,build:function build(){return __.Statistics.standardDeviation;}},{name:'zscore',visible:true,numargs:3,build:function build(){return __.Statistics.zScore;}}]);nerdamer.api();})();